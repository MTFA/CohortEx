/*
 *  Copyright 2016 by Maria Tereza Fernandes Abrahao.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

--------------------------------------------------------
--  DOUTORADO MARIA TEREZA ABRAHAO 2016
--  SCRIPT DO METODO DE EXTRACAO DE COORTES PARA ESTUDOS EM DCV
--------------------------------------------------------

--------------------------------------------------------
--  DROP STUDY_TABLES
--------------------------------------------------------
--------------------------------------------------------
--  Drop PARAMETERS CACHE
--------------------------------------------------------
BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW CURRENT_RUN_STR_PARAMS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW CURRENT_RUN_NUMBER_PARAMS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW CURRENT_RUN_DATE_PARAMS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW CURRENT_RUN_YESNO_PARAMS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

--------------------------------------------------------
--  Drop Parameters Tables
--------------------------------------------------------
BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE STUDY_PARAMS_DATE_TYPE';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE STUDY_PARAMS_NUMBER_TYPE';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE STUDY_PARAMS_STRING_TYPE';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE STUDY_PARAMS_YES_Y_NO_N_TYPE';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE STUDY_CURRENT_RUN';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE STUDY_DRUG';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

--------------------------------------------------------
--  Drop Key Tables
--------------------------------------------------------
BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE STUDY_RESEARCH';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE STUDY_RESEARCHER';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE STUDY';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/


-- **********************************************
COMMIT;
-- **********************************************
--------------------------------------------------------
--  DROP ALL DEIDENTIFIED 
--------------------------------------------------------

--------------------------------------------------------
--  DROP ALL 
--------------------------------------------------------

--------------------------------------------------------
--  DROP ALL COHORT SELECTORS VIEWS
--------------------------------------------------------

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW COHORT_SELECTOR_PATIENT_AGE';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW COHORT_SELECTOR_DIAGNOSIS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW TRANSFORM_INDEX_FSTDIAGNOSIS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW COHORT_SELECTOR_PATIENT_GENDER';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW COHORT_SELECTOR_STUDY_INTERVAL';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP VIEW COHORT_SELECTOR_FSTLST_ENCNTR';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW AUX_ENCOUNTERS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW COHORT_SELECTOR_ENCOUNTERS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW OUTCOME_SELECTOR_PCI';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW OUTCOME_SELECTOR_WASHOUT_TIME';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW OUTCOME_SELECTOR_DIAGNOSIS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW OUTCOME_SELECTOR_SURGERY';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW STUDY_OVERALL_POPULATION';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP VIEW COHORT_SELECTOR_STUDY_INT_LAB';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP VIEW COHORT_OVERALL_DBPOP_GENDER';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

--------------------------------------------------------
--  DROP ALL DETECTORS VIEWS
--------------------------------------------------------
BEGIN
   EXECUTE IMMEDIATE 'DROP VIEW DETECT_DUPLICATE_ADMISSION';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP VIEW DETECT_DUPLICATE_HASH';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
     EXECUTE IMMEDIATE 'DROP VIEW DETECT_DUP_PATIENT_NAME_BD';
EXCEPTION
     WHEN OTHERS THEN
            IF SQLCODE != -942 THEN
                 RAISE;
            END IF;
END;
/

BEGIN
     EXECUTE IMMEDIATE 'DROP VIEW DETECT_DUPLICATE_PATIENT_ID';
EXCEPTION
     WHEN OTHERS THEN
            IF SQLCODE != -942 THEN
                 RAISE;
            END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP VIEW DETECT_DUPLICATE_DEATH';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP VIEW DETECT_INVALID_FUTURE_BIRTH';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP VIEW DETECT_INVALID_BIRTH_DATE';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP VIEW DETECT_INVALID_NAME';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP VIEW DETECT_INVALID_NULL_BIRTH_DATE';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP VIEW DETECT_INVALID_ICD10_STRICT';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP VIEW DETECT_INVALID_ICD10_RELAX';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP VIEW DETECT_INVALID_DISCHARGE';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

-- **********************************************
BEGIN
     EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW DETECT_PATIENT_DUPLICATES';
EXCEPTION
     WHEN OTHERS THEN
            IF SQLCODE != -12003 THEN
                 RAISE;
            END IF;
END;
/

-- **********************************************
BEGIN
     EXECUTE IMMEDIATE 'DROP VIEW DETECT_INVALID_LABNUM_RESULT';
EXCEPTION
     WHEN OTHERS THEN
            IF SQLCODE != -942 THEN
                 RAISE;
            END IF;
END;
/

-- **********************************************
COMMIT;
-- **********************************************

--------------------------------------------------------
--  DROP ALL INDICATORS VIEWS
--------------------------------------------------------
BEGIN
     EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW INDICATOR_PATIENT_MISSING';
EXCEPTION
     WHEN OTHERS THEN
            IF SQLCODE != -12003 THEN
                 RAISE;
            END IF;
END;
/
-- **********************************************
BEGIN
     EXECUTE IMMEDIATE 'DROP VIEW INDICATOR_PATIENT_GENDER';
EXCEPTION
     WHEN OTHERS THEN
            IF SQLCODE != -942 THEN
                 RAISE;
            END IF;
END;
/

BEGIN
     EXECUTE IMMEDIATE 'DROP VIEW INDICATOR_PATIENT_GENDER_PT';
EXCEPTION
     WHEN OTHERS THEN
            IF SQLCODE != -942 THEN
                 RAISE;
            END IF;
END;
/
-- **********************************************
BEGIN
     EXECUTE IMMEDIATE 'DROP VIEW INDICATOR_ENCOUNTER_GENDER';
EXCEPTION
     WHEN OTHERS THEN
            IF SQLCODE != -942 THEN
                 RAISE;
            END IF;
END;
/
-- **********************************************
BEGIN
     EXECUTE IMMEDIATE 'DROP VIEW INDICATOR_ENCOUNTER_GENDER_PT';
EXCEPTION
     WHEN OTHERS THEN
            IF SQLCODE != -942 THEN
                 RAISE;
            END IF;
END;
/
-- **********************************************
BEGIN
     EXECUTE IMMEDIATE 'DROP VIEW INDICATOR_PATIENT';
EXCEPTION
     WHEN OTHERS THEN
            IF SQLCODE != -942 THEN
                 RAISE;
            END IF;
END;
/

BEGIN
     EXECUTE IMMEDIATE 'DROP VIEW INDICATOR_PATIENT_PT';
EXCEPTION
     WHEN OTHERS THEN
            IF SQLCODE != -942 THEN
                 RAISE;
            END IF;
END;
/
-- **********************************************
BEGIN
     EXECUTE IMMEDIATE 'DROP VIEW INDICATOR_DIAGNOSIS_PROFILE';
EXCEPTION
     WHEN OTHERS THEN
            IF SQLCODE != -942 THEN
                 RAISE;
            END IF;
END;
/
-- **********************************************
BEGIN
     EXECUTE IMMEDIATE 'DROP VIEW INDICATOR_DIAGNOSIS_PROFILE_PT';
EXCEPTION
     WHEN OTHERS THEN
            IF SQLCODE != -942 THEN
                 RAISE;
            END IF;
END;
/
-- **********************************************
BEGIN
     EXECUTE IMMEDIATE 'DROP VIEW INDICATOR_ICD10_CONFORMITY_PT';
EXCEPTION
     WHEN OTHERS THEN
            IF SQLCODE != -942 THEN
                 RAISE;
            END IF;
END;
/
-- **********************************************
BEGIN
     EXECUTE IMMEDIATE 'DROP VIEW INDICATOR_ICD10_CONFORMITY';
EXCEPTION
     WHEN OTHERS THEN
            IF SQLCODE != -942 THEN
                 RAISE;
            END IF;
END;
/
-- **********************************************
BEGIN
     EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW INDICATOR_PAT_WITH_DIAG';
EXCEPTION
     WHEN OTHERS THEN
            IF SQLCODE != -12003 THEN
                 RAISE;
            END IF;
END;
/
-- **********************************************
BEGIN
     EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW INDICATOR_PAT_WOUT_DIAG';
EXCEPTION
     WHEN OTHERS THEN
            IF SQLCODE != -12003 THEN
                 RAISE;
            END IF;
END;
/
-- **********************************************
BEGIN
     EXECUTE IMMEDIATE 'DROP VIEW INDICATOR_BASE_QUALITY';
EXCEPTION
     WHEN OTHERS THEN
            IF SQLCODE != -942 THEN
                 RAISE;
            END IF;
END;
/
-- **********************************************
BEGIN
     EXECUTE IMMEDIATE 'DROP VIEW INDICATOR_SURGERY';
EXCEPTION
     WHEN OTHERS THEN
            IF SQLCODE != -942 THEN
                 RAISE;
            END IF;
END;
/

BEGIN
     EXECUTE IMMEDIATE 'DROP VIEW INDICATOR_SURGERY_PT';
EXCEPTION
     WHEN OTHERS THEN
            IF SQLCODE != -942 THEN
                 RAISE;
            END IF;
END;
/
--------------------------------------------------------
--  DROP ALL INVALID
--------------------------------------------------------
BEGIN
   EXECUTE IMMEDIATE 'DROP VIEW INVALID_PATIENT';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

--------------------------------------------------------
--  DROP ALL VALID
--------------------------------------------------------
BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW VALID_PATIENT';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP VIEW VALID_DEATH';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

--------------------------------------------------------
--  DROP TRANSFORM
--------------------------------------------------------
BEGIN
   EXECUTE IMMEDIATE 'DROP VIEW TRANSFORM_TRANSPOSE_PCI';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW TRANSFORM_TRANSP_ENC_PROFILE';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP VIEW TRANSFORM_FIRST_DIAGNOSIS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW TRANSFORM_SELECT_NUM_LABTST';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW TRANSFORM_LINEAR_REG_LABTST';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW TRANSFORM_AGEATEVENT_LABTEST';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW TRANSFORM_GETDELTA_LABTEST';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW TRANSFORM_TRANSPOSE_LABTST';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP VIEW TRANSFORM_FIRSTLAST_SURGERY';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW TRANSFORM_TRANSPOSE_SURGERY';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

-- **********************************************
-- DROP FILTERS
-- **********************************************

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW FILTER_PATIENT_ENROLLMENT';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW FILTER_DIAGNOSIS_ENROLLMENT';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW FILTER_ADM_DISCH_ENROLLMENT';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW FILTER_SURGERY_ENROLLMENT';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW FILTER_LABORATORY_ENROLLMENT';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW FILTER_PCI_ENROLLMENT';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW FILTER_FSTOUTPTENC_ENROLLMENT';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW FILTER_HEARTRISKF_ENROLLMENT';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW FILTER_DRUG_ENROLLMENT';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

-- **********************************************
-- DROP CLEAN VIEWS
-- **********************************************

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW CLEAN_PATIENT';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW CLEAN_DIAGNOSIS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP VIEW CLEAN_LABORATORY';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

--------------------------------------------------------
--
--
--
--
--  DROP PAUA BASE
--
--
--
--------------------------------------------------------
BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW BP_LABORATORY';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW BP_PATIENT';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW BP_DIAGNOSIS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW BP_PCI';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW BP_SURGERY';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW BP_FIRST_OUTPATIENT_ENCOUNTER';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW BP_HEART_RISK_FACTOR';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW BP_DEATH';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW BP_DRUGS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP VIEW PAUA_TOTALS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP VIEW PAUA_TOTALS_PT';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

--------------------------------------------------------
--
--
--
--
--  DROP COHORT VIEWS
--
--
--
--------------------------------------------------------
BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW SELECTED_PATIENT';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW VALID_ADMISSION';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/


BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW BP_ADMISSION_DISCHARGE';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW SELECTED_DIAGNOSIS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW SELECTED_PCI';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW SELECTED_DEATH';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP MATERIALIZED VIEW TRANSFORM_FIRSTLAST_ENCOUNTER';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -12003 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP VIEW TRANSFORM_ENCOUNTER_PROFILE';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP VIEW COHORT_HEART_RISK_FACTOR';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP VIEW COHORT_ENCOUNTER';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP VIEW COHORT_FRST_OUTPAT_ENCOUNTER';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP VIEW COHORT_PATIENT';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP VIEW COHORT_SELECTION_CRITERIA';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/


BEGIN
   EXECUTE IMMEDIATE 'DROP VIEW COHORT_LABTEST_TRANSPOSED';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP VIEW COHORT_DIAGNOSIS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP VIEW COHORT_SURGERY';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP VIEW COHORT_PCI';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP VIEW COHORT_INDEXEVENT_OUTCOMEEVENT';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP VIEW COHORT_DEATH';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

BEGIN
   EXECUTE IMMEDIATE 'DROP VIEW COHORT_DRUGS';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/

--------------------------------------------------------
--
--
--
--
--  DDL FOR PARAMETERS
--
--
--
--------------------------------------------------------
--------------------------------------------------------
--  DDL for Table STUDY_RESEARCH
--------------------------------------------------------

CREATE TABLE STUDY_RESEARCH
        (
            RESEARCH_ID   VARCHAR2(40) NOT NULL ENABLE
          , DESCRIPTION   VARCHAR2(300) NOT NULL ENABLE
          , CONSTRAINT "RESEARCH_PK" PRIMARY KEY (RESEARCH_ID)  /* using tablespace placeholder */ ENABLE
        );
/

INSERT INTO STUDY_RESEARCH (RESEARCH_ID,DESCRIPTION) VALUES ('DCV_DISEASE','STUDY ABOUT DCV');
INSERT INTO STUDY_RESEARCH (RESEARCH_ID,DESCRIPTION) VALUES ('DCV_WOMEN','STUDY ABOUT DCV ON WOMEN');

COMMIT;
--------------------------------------------------------
--  DDL for Table STUDY
--------------------------------------------------------

CREATE TABLE STUDY
        (
            STUDY_ID      VARCHAR2(40) NOT NULL ENABLE
          , DESCRIPTION   VARCHAR2(300) NOT NULL ENABLE
          , CONSTRAINT "MODEL_PK" PRIMARY KEY (STUDY_ID) /* using tablespace placeholder */  ENABLE
        );
/

INSERT INTO STUDY (STUDY_ID,DESCRIPTION) VALUES ('MODEL_ONE','FIRST MODEL');

COMMIT;
--------------------------------------------------------
--  DDL for Table STUDY_RESEARCHER
--------------------------------------------------------

CREATE TABLE STUDY_RESEARCHER
        (
            RESEARCHER_ID   VARCHAR2(40) NOT NULL ENABLE
          , DESCRIPTION   VARCHAR2(300) NOT NULL ENABLE
          , CONSTRAINT "RESEARCHER_PK" PRIMARY KEY (RESEARCHER_ID) /* using tablespace placeholder */  ENABLE
        );
/

INSERT INTO STUDY_RESEARCHER (RESEARCHER_ID,DESCRIPTION) VALUES ('TEREZA','TEREZA ABRAHAO');

COMMIT;
--------------------------------------------------------
--  DDL for Table STUDY_CURRENT_RUN
--------------------------------------------------------

CREATE TABLE STUDY_CURRENT_RUN
        (
            RESEARCH_ID   VARCHAR2(40) NOT NULL ENABLE
          , STUDY_ID      VARCHAR2(40) NOT NULL ENABLE
          , RESEARCHER_ID VARCHAR2(40) NOT NULL ENABLE
          , ACTIVE        NUMBER(1)
          , CONSTRAINT "STUDY_CURRENT_RUN_PK" PRIMARY KEY (RESEARCH_ID, STUDY_ID, RESEARCHER_ID) /* using tablespace placeholder */ ENABLE
          , CONSTRAINT "CR_RESEARCH_FK" FOREIGN KEY (RESEARCH_ID) REFERENCES STUDY_RESEARCH (RESEARCH_ID) ENABLE
          , CONSTRAINT "CR_MODEL_FK" FOREIGN KEY (STUDY_ID) REFERENCES STUDY (STUDY_ID) ENABLE
          , CONSTRAINT "CR_RESEARCHER_FK" FOREIGN KEY (RESEARCHER_ID) REFERENCES STUDY_RESEARCHER (RESEARCHER_ID)  ENABLE
        );
/

INSERT INTO STUDY_CURRENT_RUN (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,ACTIVE) VALUES ('DCV_DISEASE','MODEL_ONE','TEREZA',1);
INSERT INTO STUDY_CURRENT_RUN (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,ACTIVE) VALUES ('DCV_WOMEN','MODEL_ONE','TEREZA',0);

COMMIT;

--------------------------------------------------------
--  DDL for Table STUDY_PARAMS_YES_NO_TYPE
--------------------------------------------------------

CREATE TABLE STUDY_PARAMS_YES_Y_NO_N_TYPE
       (  
          RESEARCH_ID         VARCHAR2(40)  NOT NULL
        , STUDY_ID            VARCHAR2(40)  NOT NULL
        , RESEARCHER_ID       VARCHAR2(40)  NOT NULL
        , CRITERIA_ID         VARCHAR2(40)  NOT NULL
        , PARAMETER_TYPE      VARCHAR2(40)  NOT NULL 
        , PARAMETER_ID        NUMBER(4)     NOT NULL
        , PARAMETER_VALUE     VARCHAR2(1 BYTE) CHECK (PARAMETER_VALUE IN ('Y','N'))
        , COMMENTS            VARCHAR2(80)
        , INCLUSION_DATE DATE
        , MODIFICATION_DATE DATE
        , CONSTRAINT STR_PARAMSYESNO_PK    PRIMARY KEY (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID) /* using tablespace placeholder */ ENABLE
        , CONSTRAINT STR_PARAMSYESNO_TYPE_CHK CHECK (PARAMETER_TYPE IN ('FILTER_ENABLING')) ENABLE
        , CONSTRAINT "MSPYN_RESEARCH_FK" FOREIGN KEY (RESEARCH_ID) REFERENCES STUDY_RESEARCH (RESEARCH_ID) ENABLE
        , CONSTRAINT "MSPYN_MODEL_FK" FOREIGN KEY (STUDY_ID) REFERENCES STUDY (STUDY_ID) ENABLE
        , CONSTRAINT "MSPYN_RESEARCHER_FK" FOREIGN KEY (RESEARCHER_ID) REFERENCES STUDY_RESEARCHER (RESEARCHER_ID) ENABLE

       );
/
INSERT INTO 
  STUDY_PARAMS_YES_Y_NO_N_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','DIAGNOSIS_SELECTION','FILTER_ENABLING',1,'Y','ENABLE DIAGNOSIS FILTERING',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));
INSERT INTO 
  STUDY_PARAMS_YES_Y_NO_N_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','STUDY_GENDER','FILTER_ENABLING',1,'Y','ENABLE GENDER FILTERING',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_YES_Y_NO_N_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','MIN_ADMISSION','FILTER_ENABLING',1,'Y','ENABLE MIN ADMISSION DATE FILTERING',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_YES_Y_NO_N_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','MAX_ADMISSION','FILTER_ENABLING',1,'Y','ENABLE MAX ADMISSION DATE FILTERING',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_YES_Y_NO_N_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','DIAGNOSIS_DATE_ON_STUDY_INTERVAL','FILTER_ENABLING',1,'Y','ENABLE DIAGNOSIS DATE FILTERING',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_YES_Y_NO_N_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','LAB_TEST_DATE_ON_STUDY_INTERVAL','FILTER_ENABLING',1,'Y','ENABLE DIAGNOSIS DATE FILTERING',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_YES_Y_NO_N_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','MIN_AGE','FILTER_ENABLING',1,'Y','MINIMUM AGE AT STUDY BEGIN',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_YES_Y_NO_N_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','MAX_AGE','FILTER_ENABLING',1,'Y','MAXIMUM AGE AT STUDY END',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_YES_Y_NO_N_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','LABORATORY','FILTER_ENABLING',1,'Y','SELECTED LAB EXAMS',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_YES_Y_NO_N_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','SURGERY_DIAG_SELECTION','FILTER_ENABLING',1,'Y','ENABLE SURGERY SELECTION BY DIAGNOSIS FILTERING',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_YES_Y_NO_N_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','OUTCOME_SELECTION','FILTER_ENABLING',1,'Y','ENABLE OUTCOME SELECTION BY DIAGNOSIS FILTERING',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_YES_Y_NO_N_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','ENCOUNTER_SELECTION','FILTER_ENABLING',1,'Y','ENABLE OUTCOME SELECTION BY DIAGNOSIS FILTERING',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

--- DVC_WOMEN
INSERT INTO 
  STUDY_PARAMS_YES_Y_NO_N_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_WOMEN','MODEL_ONE','TEREZA','DIAGNOSIS_SELECTION','FILTER_ENABLING',1,'Y','ENABLE DIAGNOSIS FILTERING',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));
INSERT INTO 
  STUDY_PARAMS_YES_Y_NO_N_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_WOMEN','MODEL_ONE','TEREZA','STUDY_GENDER','FILTER_ENABLING',1,'Y','ENABLE GENDER FILTERING',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_YES_Y_NO_N_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_WOMEN','MODEL_ONE','TEREZA','MIN_ADMISSION','FILTER_ENABLING',1,'Y','ENABLE MIN ADMISSION DATE FILTERING',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_YES_Y_NO_N_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_WOMEN','MODEL_ONE','TEREZA','MAX_ADMISSION','FILTER_ENABLING',1,'Y','ENABLE MAX ADMISSION DATE FILTERING',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_YES_Y_NO_N_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_WOMEN','MODEL_ONE','TEREZA','DIAGNOSIS_DATE_ON_STUDY_INTERVAL','FILTER_ENABLING',1,'Y','ENABLE DIAGNOSIS DATE FILTERING',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_YES_Y_NO_N_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_WOMEN','MODEL_ONE','TEREZA','MIN_AGE','FILTER_ENABLING',1,'Y','MINIMUM AGE AT STUDY BEGIN',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_YES_Y_NO_N_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_WOMEN','MODEL_ONE','TEREZA','MAX_AGE','FILTER_ENABLING',1,'Y','MAXIMUM AGE AT STUDY END',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_YES_Y_NO_N_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_WOMEN','MODEL_ONE','TEREZA','LABORATORY','FILTER_ENABLING',1,'Y','SELECTED LAB EXAMS',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_YES_Y_NO_N_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_WOMEN','MODEL_ONE','TEREZA','LAB_TEST_DATE_ON_STUDY_INTERVAL','FILTER_ENABLING',1,'Y','ENABLE LAB EXAMS DATE FILTERING',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_YES_Y_NO_N_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_WOMEN','MODEL_ONE','TEREZA','SURGERY_DIAG_SELECTION','FILTER_ENABLING',1,'Y','ENABLE SURGERY SELECTION BY DIAGNOSIS FILTERING',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_YES_Y_NO_N_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_WOMEN','MODEL_ONE','TEREZA','OUTCOME_SELECTION','FILTER_ENABLING',1,'Y','ENABLE SURGERY SELECTION BY DIAGNOSIS FILTERING',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_YES_Y_NO_N_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_WOMEN','MODEL_ONE','TEREZA','ENCOUNTER_SELECTION','FILTER_ENABLING',1,'Y','ENABLE OUTCOME SELECTION BY DIAGNOSIS FILTERING',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));


--------------------------------------------------------
--  DDL for Table STUDY_PARAMS_STRING_TYPE
--------------------------------------------------------

CREATE TABLE STUDY_PARAMS_STRING_TYPE
       (  
          RESEARCH_ID         VARCHAR2(40)  NOT NULL
        , STUDY_ID            VARCHAR2(40)  NOT NULL
        , RESEARCHER_ID       VARCHAR2(40)  NOT NULL
        , CRITERIA_ID         VARCHAR2(40)  NOT NULL
        , PARAMETER_TYPE      VARCHAR2(40)  NOT NULL 
        , PARAMETER_ID        NUMBER(4)     NOT NULL
        , PARAMETER_VALUE     VARCHAR2(80)
        , INCLUSION_EXCLUSION VARCHAR2(1 BYTE) CHECK (INCLUSION_EXCLUSION IN ('I','E'))
        , COMMENTS            VARCHAR2(80)
        , INCLUSION_DATE DATE
        , MODIFICATION_DATE DATE
        , CONSTRAINT STR_PARAMETERS_PK    PRIMARY KEY (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID) /* using tablespace placeholder */ ENABLE
        , CONSTRAINT STR_PARAMETER_TYPE_CHK CHECK (PARAMETER_TYPE IN ('ICD10_CATEGORY_PARTIAL','ICD10_CATEGORY_FULL', 'ICD10_SUBCATEGORY', 'ICD10_ETIOLOGY', 'ICD10_EXTENSION','GENDER','LAB_TEST_ID','SURGERY_PROCEDURE','ENCOUNTER_TYPE')) ENABLE
        , CONSTRAINT "MSP_RESEARCH_FK" FOREIGN KEY (RESEARCH_ID) REFERENCES STUDY_RESEARCH (RESEARCH_ID) ENABLE
        , CONSTRAINT "MSP_MODEL_FK" FOREIGN KEY (STUDY_ID) REFERENCES STUDY (STUDY_ID) ENABLE
        , CONSTRAINT "MSP_RESEARCHER_FK" FOREIGN KEY (RESEARCHER_ID) REFERENCES STUDY_RESEARCHER (RESEARCHER_ID) ENABLE

       );
/

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','SURGERY_SELECTION','SURGERY_PROCEDURE',1,'%REVASC%','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

--- VIEW 21 - DIAGNOSIS_BY_STUDY_ICD: ICD10_CATEGORY_PARTIAL (matches just 3 chars long): Ex I20 is just I20 , I20.0 (I20.x) is excluded

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','DIAGNOSIS_SELECTION','ICD10_CATEGORY_PARTIAL',1,'I65','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','DIAGNOSIS_SELECTION','ICD10_CATEGORY_PARTIAL',2,'I70','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','DIAGNOSIS_SELECTION','ICD10_CATEGORY_PARTIAL',3,'G45','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','ENCOUNTER_SELECTION','ENCOUNTER_TYPE',1,'AM','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

---- DCV_WOMEN


--- VIEW 21 - DIAGNOSIS_BY_STUDY_ICD: ICD10_CATEGORY_FULL (matches 3 chars long or more): Ex: I20 implies: !20.x 

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','DIAGNOSIS_SELECTION','ICD10_CATEGORY_FULL',1,'I20','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','DIAGNOSIS_SELECTION','ICD10_CATEGORY_FULL',2,'I21','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','DIAGNOSIS_SELECTION','ICD10_CATEGORY_FULL',3,'I22','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','DIAGNOSIS_SELECTION','ICD10_CATEGORY_FULL',4,'I23','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','DIAGNOSIS_SELECTION','ICD10_CATEGORY_FULL',5,'I24','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','DIAGNOSIS_SELECTION','ICD10_CATEGORY_FULL',6,'I25','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','DIAGNOSIS_SELECTION','ICD10_CATEGORY_FULL',7,'I64','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

-- DCV_WOMEN
INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_WOMEN','MODEL_ONE','TEREZA','DIAGNOSIS_SELECTION','ICD10_CATEGORY_FULL',1,'I20','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_WOMEN','MODEL_ONE','TEREZA','DIAGNOSIS_SELECTION','ICD10_CATEGORY_FULL',2,'I21','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_WOMEN','MODEL_ONE','TEREZA','DIAGNOSIS_SELECTION','ICD10_CATEGORY_FULL',3,'I22','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_WOMEN','MODEL_ONE','TEREZA','DIAGNOSIS_SELECTION','ICD10_CATEGORY_FULL',4,'I23','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_WOMEN','MODEL_ONE','TEREZA','DIAGNOSIS_SELECTION','ICD10_CATEGORY_FULL',5,'I24','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_WOMEN','MODEL_ONE','TEREZA','DIAGNOSIS_SELECTION','ICD10_CATEGORY_FULL',6,'I25','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));


--- VIEW 21 - DIAGNOSIS_BY_STUDY_ICD: ICD10_SUBCATEGORY (matches 5 chars or more): Ex I20.1xxx

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','DIAGNOSIS_SELECTION','ICD10_SUBCATEGORY',1,'I65.2','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
    STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','DIAGNOSIS_SELECTION','ICD10_SUBCATEGORY',2,'I67.2','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','DIAGNOSIS_SELECTION','ICD10_SUBCATEGORY',3,'I69.4','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','DIAGNOSIS_SELECTION','ICD10_SUBCATEGORY',4,'I70.9','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','DIAGNOSIS_SELECTION','ICD10_SUBCATEGORY',5,'G45.8','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','DIAGNOSIS_SELECTION','ICD10_SUBCATEGORY',6,'G45.9','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));


--- VIEW 21 - DIAGNOSIS_BY_STUDY_ICD: ICD10_ETIOLOGY (matches 7 chars or more): Ex I20.198

--- VIEW 21 - DIAGNOSIS_BY_STUDY_ICD: ICD10_EXTENSION (matches 7 chars or more): Ex I20.198C


--- VIEW 22 - DIAGNOSIS_BY_STUDY_OUTCOME: ICD10_CATEGORY_FULL

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','OUTCOME_SELECTION','ICD10_CATEGORY_FULL',1,'I21','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','OUTCOME_SELECTION','ICD10_CATEGORY_FULL',2,'I22','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','OUTCOME_SELECTION','ICD10_CATEGORY_FULL',3,'I50','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','OUTCOME_SELECTION','ICD10_CATEGORY_FULL',4,'I64','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));


--- VIEW 22 - DIAGNOSIS_BY_STUDY_OUTCOME: ICD10_CATEGORY_PARTIAL

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','OUTCOME_SELECTION','ICD10_CATEGORY_PARTIAL',1,'I23','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','OUTCOME_SELECTION','ICD10_CATEGORY_PARTIAL',2,'I63','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','OUTCOME_SELECTION','ICD10_CATEGORY_PARTIAL',3,'I65','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','OUTCOME_SELECTION','ICD10_CATEGORY_PARTIAL',4,'I69','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','OUTCOME_SELECTION','ICD10_CATEGORY_PARTIAL',5,'G45','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));


--- VIEW 22 - DIAGNOSIS_BY_STUDY_OUTCOME: ICD10_SUBCATEGORY

INSERT INTO 
    STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','OUTCOME_SELECTION','ICD10_SUBCATEGORY',1,'I23.0','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
    STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','OUTCOME_SELECTION','ICD10_SUBCATEGORY',2,'I23.1','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
    STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','OUTCOME_SELECTION','ICD10_SUBCATEGORY',3,'I23.6','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
    STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','OUTCOME_SELECTION','ICD10_SUBCATEGORY',4,'I23.8','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','OUTCOME_SELECTION','ICD10_SUBCATEGORY',5,'I63.0','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','OUTCOME_SELECTION','ICD10_SUBCATEGORY',6,'I63.2','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','OUTCOME_SELECTION','ICD10_SUBCATEGORY',7,'I63.3','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','OUTCOME_SELECTION','ICD10_SUBCATEGORY',8,'I63.5','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','OUTCOME_SELECTION','ICD10_SUBCATEGORY',9,'I63.9','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','OUTCOME_SELECTION','ICD10_SUBCATEGORY',10,'I65.0','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','OUTCOME_SELECTION','ICD10_SUBCATEGORY',11,'I65.2','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','OUTCOME_SELECTION','ICD10_SUBCATEGORY',12,'I65.3','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','OUTCOME_SELECTION','ICD10_SUBCATEGORY',13,'I65.9','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','OUTCOME_SELECTION','ICD10_SUBCATEGORY',14,'I66.4','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','OUTCOME_SELECTION','ICD10_SUBCATEGORY',15,'I66.9','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','OUTCOME_SELECTION','ICD10_SUBCATEGORY',16,'I69.3','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','OUTCOME_SELECTION','ICD10_SUBCATEGORY',17,'I69.4','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','OUTCOME_SELECTION','ICD10_SUBCATEGORY',18,'G45.8','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','OUTCOME_SELECTION','ICD10_SUBCATEGORY',19,'G45.9','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));


--- VIEW 28 - MODEL_TWO: FIRST DIAGNOSIS ICD10 GROUPS
-- SURGERY_DIAG_SELECTION

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','SURGERY_DIAG_SELECTION','ICD10_CATEGORY_FULL',1,'I20','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','SURGERY_DIAG_SELECTION','ICD10_CATEGORY_FULL',2,'I21','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','SURGERY_DIAG_SELECTION','ICD10_CATEGORY_FULL',3,'I22','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','SURGERY_DIAG_SELECTION','ICD10_CATEGORY_FULL',4,'I23','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','SURGERY_DIAG_SELECTION','ICD10_CATEGORY_FULL',5,'I24','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','SURGERY_DIAG_SELECTION','ICD10_CATEGORY_FULL',6,'I25','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','SURGERY_DIAG_SELECTION','ICD10_CATEGORY_FULL',7,'I63','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','SURGERY_DIAG_SELECTION','ICD10_CATEGORY_FULL',8,'I64','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','SURGERY_DIAG_SELECTION','ICD10_CATEGORY_FULL',9,'I65','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','SURGERY_DIAG_SELECTION','ICD10_CATEGORY_FULL',10,'I66','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','SURGERY_DIAG_SELECTION','ICD10_SUBCATEGORY',1,'I67.2','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','SURGERY_DIAG_SELECTION','ICD10_CATEGORY_FULL',11,'I70','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','SURGERY_DIAG_SELECTION','ICD10_CATEGORY_FULL',12,'G45','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

-- LAB EXAMS

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','LABORATORY','LAB_TEST_ID',1,'HDL COL','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','LABORATORY','LAB_TEST_ID',2,'GLICOSE','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','LABORATORY','LAB_TEST_ID',3,'HB GLICADA','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','LABORATORY','LAB_TEST_ID',4,'LDL COL','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','LABORATORY','LAB_TEST_ID',5,'COLESTEROL','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

-- MVIEW 02 - ES_PATIENT
INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','STUDY_GENDER','GENDER',1,'M','I','MALE',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','STUDY_GENDER','GENDER',2,'F','I','FEMALE',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

-- DCV_WOMEN

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_WOMEN','MODEL_ONE','TEREZA','STUDY_GENDER','GENDER',2,'F','I','FEMALE',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_STRING_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,INCLUSION_EXCLUSION,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_WOMEN','MODEL_ONE','TEREZA','ENCOUNTER_SELECTION','ENCOUNTER_TYPE',1,'AM','I','',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

--------------------------------------------------------
--  DDL for Table STUDY_PARAMS_DATE_TYPE
--------------------------------------------------------

CREATE TABLE STUDY_PARAMS_DATE_TYPE
     (  
        RESEARCH_ID         VARCHAR2(40)  NOT NULL
      , STUDY_ID            VARCHAR2(40)  NOT NULL
      , RESEARCHER_ID       VARCHAR2(40)  NOT NULL
      , CRITERIA_ID         VARCHAR2(40)  NOT NULL
      , PARAMETER_TYPE      VARCHAR2(40)  NOT NULL 
      , PARAMETER_ID        NUMBER(4)     NOT NULL
      , PARAMETER_VALUE     DATE
      , COMMENTS            VARCHAR2(80)
      , INCLUSION_DATE DATE
      , MODIFICATION_DATE DATE
      , CONSTRAINT DATE_PARAMETERS_PK    PRIMARY KEY (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID) /* using tablespace placeholder */ ENABLE
      , CONSTRAINT "MDP_RESEARCH_FK" FOREIGN KEY (RESEARCH_ID) REFERENCES STUDY_RESEARCH (RESEARCH_ID) ENABLE
      , CONSTRAINT "MDP_MODEL_FK" FOREIGN KEY (STUDY_ID) REFERENCES STUDY (STUDY_ID) ENABLE
      , CONSTRAINT "MDP_RESEARCHER_FK" FOREIGN KEY (RESEARCHER_ID) REFERENCES STUDY_RESEARCHER (RESEARCHER_ID) ENABLE
      , CONSTRAINT DATE_PARAMETER_TYPE_CHK CHECK (PARAMETER_TYPE IN (   'INTERVAL_DATE'
                                                                      , 'BIRTH_DATE'
                                                                      , 'ADMISSION_INTERVAL'
                                                                      ,'FIRST_DIAGNOSIS_INTERVAL'
                                                                      ,'LAB_RESULT_INTERVAL'
                                                                      ,'PRESCRIPTION_INTERVAL')) ENABLE

     );
/

-- MVIEW 02 - ES_PATIENT

INSERT INTO 
  STUDY_PARAMS_DATE_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','STUDY_BEGIN','INTERVAL_DATE',1,TO_DATE('01-01-2003','DD-MM-YYYY'),'',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_DATE_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','STUDY_END','INTERVAL_DATE',1,TO_DATE('01-JAN-2014 00:00:00'),'',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_DATE_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','MIN_BIRTH_DATE','BIRTH_DATE',1,TO_DATE('31-12-1899','DD-MM-YYYY'),'BORN AFTER 01/01/1900',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

-- TABLE 01 - ES_PATIENT
INSERT INTO 
  STUDY_PARAMS_DATE_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','MIN_ADMISSION','ADMISSION_INTERVAL',1,TO_DATE('01-01-1985','DD-MM-YYYY'),'',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));
-- 25-MAR-2014 07:56:23
INSERT INTO 
  STUDY_PARAMS_DATE_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','MAX_ADMISSION','ADMISSION_INTERVAL',1,TO_DATE('01-JAN-2014 00:00:00'),'',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

-- TABLE 01 - STUDY_PATIENT
INSERT INTO 
  STUDY_PARAMS_DATE_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','MIN_DIAGNOSIS','FIRST_DIAGNOSIS_INTERVAL',1,TO_DATE('01-01-1985','DD-MM-YYYY'),'',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_DATE_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','MAX_DIAGNOSIS','FIRST_DIAGNOSIS_INTERVAL',1,TO_DATE('01-01-2014','DD-MM-YYYY'),'',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));


-- DCV_WOMEN
INSERT INTO 
  STUDY_PARAMS_DATE_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_WOMEN','MODEL_ONE','TEREZA','STUDY_BEGIN','INTERVAL_DATE',1,TO_DATE('01-01-2008','DD-MM-YYYY'),'',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_DATE_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_WOMEN','MODEL_ONE','TEREZA','STUDY_END','INTERVAL_DATE',1,TO_DATE('01-JAN-2015 00:00:00'),'',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_DATE_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_WOMEN','MODEL_ONE','TEREZA','MIN_BIRTH_DATE','BIRTH_DATE',1,TO_DATE('31-12-1899','DD-MM-YYYY'),'BORN AFTER 01/01/1900',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

-- TABLE 01 - ES_PATIENT
INSERT INTO 
  STUDY_PARAMS_DATE_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_WOMEN','MODEL_ONE','TEREZA','MIN_ADMISSION','ADMISSION_INTERVAL',1,TO_DATE('01-01-1985','DD-MM-YYYY'),'',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));
-- 25-MAR-2014 07:56:23
INSERT INTO 
  STUDY_PARAMS_DATE_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_WOMEN','MODEL_ONE','TEREZA','MAX_ADMISSION','ADMISSION_INTERVAL',1,TO_DATE('01-JAN-2015 00:00:00'),'',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));


-- VIEW 03 - CHOLESTEROL_RESULTS_INTERVAL
INSERT INTO 
  STUDY_PARAMS_DATE_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','MAX_LAB_RESULT','LAB_RESULT_INTERVAL',1,TO_DATE('01-01-2014','DD-MM-YYYY'),'RESULTS FROM DATES UP TO THIS ONE',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

--- VIEW 17 - STUDY_PHRMCY_PRESCRIPTION_ALL
INSERT INTO 
  STUDY_PARAMS_DATE_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','MIN_PRESCRIPTION','PRESCRIPTION_INTERVAL',1,TO_DATE('01-01-1985','DD-MM-YYYY'),'PRESCRIPTION FOR ADULTS (> 18)',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

-- DCV_WOMEN
-- VIEW 03 - CHOLESTEROL_RESULTS_INTERVAL
INSERT INTO 
  STUDY_PARAMS_DATE_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_WOMEN','MODEL_ONE','TEREZA','MAX_LAB_RESULT','LAB_RESULT_INTERVAL',1,TO_DATE('01-01-2015','DD-MM-YYYY'),'RESULTS FROM DATES UP TO THIS ONE',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

--- VIEW 17 - STUDY_PHRMCY_PRESCRIPTION_ALL
INSERT INTO 
  STUDY_PARAMS_DATE_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_WOMEN','MODEL_ONE','TEREZA','MIN_PRESCRIPTION','PRESCRIPTION_INTERVAL',1,TO_DATE('01-01-1985','DD-MM-YYYY'),'PRESCRIPTION FOR ADULTS (> 18)',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));


COMMIT;

-------------------------------------------------------
--  DDL for Table STUDY_PARAMS_NUMBER_TYPE
--------------------------------------------------------

CREATE TABLE STUDY_PARAMS_NUMBER_TYPE
       (  
          RESEARCH_ID         VARCHAR2(40)  NOT NULL
        , STUDY_ID            VARCHAR2(40)  NOT NULL
        , RESEARCHER_ID       VARCHAR2(40)  NOT NULL
        , CRITERIA_ID         VARCHAR2(40)  NOT NULL
        , PARAMETER_TYPE      VARCHAR2(40)  NOT NULL 
        , PARAMETER_ID        NUMBER(4)     NOT NULL
        , PARAMETER_VALUE     NUMBER
        , COMMENTS            VARCHAR2(80)
        , INCLUSION_DATE DATE
        , MODIFICATION_DATE DATE
        , CONSTRAINT NUM_PARAMETERS_PK    PRIMARY KEY (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID) /* using tablespace placeholder */ ENABLE
        , CONSTRAINT "MNP_RESEARCH_FK" FOREIGN KEY (RESEARCH_ID) REFERENCES STUDY_RESEARCH (RESEARCH_ID) ENABLE
        , CONSTRAINT "MNP_MODEL_FK" FOREIGN KEY (STUDY_ID) REFERENCES STUDY (STUDY_ID) ENABLE
        , CONSTRAINT "MNP_RESEARCHER_FK" FOREIGN KEY (RESEARCHER_ID) REFERENCES STUDY_RESEARCHER (RESEARCHER_ID) ENABLE
        , CONSTRAINT NUM_PARAMETER_TYPE_CHK CHECK (PARAMETER_TYPE IN (  'STUDY_AGE'
                                                                      , 'ADMISSION_CODE'
                                                                      , 'PCI_DIAGNOSIS'
                                                                      , 'CABG_DIAGNOSIS'
                                                                      , 'DISCHARGE_CODE'
                                                                      , 'DIAGNOSIS_OUTCOME'
                                                                      , 'PCI_OUTCOME'
                                                                      , 'SURGERY_OUTCOME'
                                                                      , 'ENCOUNTERS_QUANTITY'
                                                                      )) ENABLE

       );
/

-- MVIEW 02 - ES_PATIENT

INSERT INTO 
  STUDY_PARAMS_NUMBER_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','ENCOUNTER_SELECTION','ENCOUNTERS_QUANTITY',1,1,'ONLY ADULTS',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_NUMBER_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','MIN_AGE','STUDY_AGE',1,18,'ONLY ADULTS',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_NUMBER_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','MAX_AGE','STUDY_AGE',1,110,'ONLY ADULTS',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

-- VIEW 06 - STUDY_PCI_LEAST

INSERT INTO 
  STUDY_PARAMS_NUMBER_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','DAYS_AFTER_INDEX_EVENT','PCI_OUTCOME',1,30,'OUTCOME BY PCI, AT LEAST 1 MONTH AFTER FIRST DIAGNOSIS',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

-- VIEW 08 - STUDY_CABG_LEAST

INSERT INTO 
  STUDY_PARAMS_NUMBER_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','DAYS_AFTER_INDEX_EVENT','SURGERY_OUTCOME',1,30,'OUTCOME BY CABG, AT LEAST 1 MONTH AFTER FIRST DIAGNOSIS',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));


-- VIEW 22 - DIAGNOSIS_BY_STUDY_OUTCOME

INSERT INTO 
  STUDY_PARAMS_NUMBER_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_DISEASE','MODEL_ONE','TEREZA','DAYS_AFTER_INDEX_EVENT','DIAGNOSIS_OUTCOME',1,60,'OUTCOME BY SECOND DIAGNOSIS, AT LEAST 2 MONTH AFTER FIRST DIAGNOSIS',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

-- DCV_WOMEN
INSERT INTO 
  STUDY_PARAMS_NUMBER_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_WOMEN','MODEL_ONE','TEREZA','ENCOUNTER_SELECTION','ENCOUNTERS_QUANTITY',1,1,'ONLY ADULTS',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_NUMBER_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_WOMEN','MODEL_ONE','TEREZA','MIN_AGE','STUDY_AGE',1,18,'ONLY ADULTS',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

INSERT INTO 
  STUDY_PARAMS_NUMBER_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_WOMEN','MODEL_ONE','TEREZA','MAX_AGE','STUDY_AGE',1,56,'UP TO 56',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

-- VIEW 06 - STUDY_PCI_LEAST

INSERT INTO 
  STUDY_PARAMS_NUMBER_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_WOMEN','MODEL_ONE','TEREZA','DAYS_AFTER_INDEX_EVENT','PCI_OUTCOME',1,30,'OUTCOME BY PCI, AT LEAST 1 MONTH AFTER FIRST DIAGNOSIS',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));

-- VIEW 08 - STUDY_CABG_LEAST

INSERT INTO 
  STUDY_PARAMS_NUMBER_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_WOMEN','MODEL_ONE','TEREZA','DAYS_AFTER_INDEX_EVENT','SURGERY_OUTCOME',1,30,'OUTCOME BY CABG, AT LEAST 1 MONTH AFTER FIRST DIAGNOSIS',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));


-- VIEW 22 - DIAGNOSIS_BY_STUDY_OUTCOME

INSERT INTO 
  STUDY_PARAMS_NUMBER_TYPE (RESEARCH_ID,STUDY_ID,RESEARCHER_ID,CRITERIA_ID,PARAMETER_TYPE,PARAMETER_ID,PARAMETER_VALUE,COMMENTS,INCLUSION_DATE,MODIFICATION_DATE) 
  VALUES 
    ('DCV_WOMEN','MODEL_ONE','TEREZA','DAYS_AFTER_INDEX_EVENT','DIAGNOSIS_OUTCOME',1,60,'OUTCOME BY SECOND DIAGNOSIS, AT LEAST 2 MONTH AFTER FIRST DIAGNOSIS',(SELECT TRUNC(SYSDATE) FROM DUAL),(SELECT TRUNC(SYSDATE) FROM DUAL));



COMMIT;

-- **********************************************
-- TABELA 12 - STUDY_DRUG

-- DROP TABLE STUDY_DRUG;
-- **********************************************
  CREATE TABLE "STUDY_DRUG" 
         (  
            "GROUP_ID"          VARCHAR2(1)
          , "GROUP_NAME"        VARCHAR2(20) 
          , "DRUG_ID"           VARCHAR2(15) NOT NULL ENABLE
          , "INTERVENTION_DRUG" NUMBER(1)
          , "RESEARCH_ID"       VARCHAR2(40) NOT NULL ENABLE
          , "RESEARCHER_ID"     VARCHAR2(40) NOT NULL ENABLE
          , CONSTRAINT "DRUG_STDY_PK"     PRIMARY KEY (DRUG_ID, RESEARCH_ID, RESEARCHER_ID) /* using tablespace placeholder */  ENABLE
          , CONSTRAINT "DRUG_ID_FK"       FOREIGN KEY (DRUG_ID)       REFERENCES DRUG_SELECTION   (DRUG_ID)       ENABLE
          , CONSTRAINT "SD_RESEARCH_FK"   FOREIGN KEY (RESEARCH_ID)   REFERENCES STUDY_RESEARCH   (RESEARCH_ID)   ENABLE
          , CONSTRAINT "SD_RESEARCHER_FK" FOREIGN KEY (RESEARCHER_ID) REFERENCES STUDY_RESEARCHER (RESEARCHER_ID) ENABLE
         );
/

REM INSERTING into STUDY_DRUG

INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('1','HIPOLIPIMIANTES','11290311',1,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('1','HIPOLIPIMIANTES','11290321',1,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('1','HIPOLIPIMIANTES','1141263X',1,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('1','HIPOLIPIMIANTES','11290802',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('1','HIPOLIPIMIANTES','11292169',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('1','HIPOLIPIMIANTES','11296365',1,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('1','HIPOLIPIMIANTES','11297001',1,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('1','HIPOLIPIMIANTES','11415051',1,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('1','HIPOLIPIMIANTES','11297016',1,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('1','HIPOLIPIMIANTES','87118550',1,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('1','HIPOLIPIMIANTES','87114070',1,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('1','HIPOLIPIMIANTES','87114045',1,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('1','HIPOLIPIMIANTES','87117747',1,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('1','HIPOLIPIMIANTES','87117752',1,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('1','HIPOLIPIMIANTES','87117757',1,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('1','HIPOLIPIMIANTES','87115580',1,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('1','HIPOLIPIMIANTES','87115384',1,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('1','HIPOLIPIMIANTES','11290208',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('2','ANTIAGREGANTES','11170207',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('2','ANTIAGREGANTES','1103092X',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('3','HIPOGLICEMIANTES','11412501',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('3','HIPOGLICEMIANTES','11292908',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('3','HIPOGLICEMIANTES','11292929',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('3','HIPOGLICEMIANTES','11293676',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('3','HIPOGLICEMIANTES','11293688',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('3','HIPOGLICEMIANTES','11295700',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('4','HIPOTENSORES','11010216',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('4','HIPOTENSORES','11010356',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('4','HIPOTENSORES','11010342',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('4','HIPOTENSORES','1101085X',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('4','HIPOTENSORES','11010836',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('4','HIPOTENSORES','1101099X',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('4','HIPOTENSORES','11011191',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('4','HIPOTENSORES','11052872',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('4','HIPOTENSORES','11052880',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('4','HIPOTENSORES','11051105',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('4','HIPOTENSORES','11011778',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('4','HIPOTENSORES','11011790',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('4','HIPOTENSORES','11052363',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('4','HIPOTENSORES','11012808',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('4','HIPOTENSORES','11053976',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('4','HIPOTENSORES','11014131',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('4','HIPOTENSORES','11014155',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('4','HIPOTENSORES','11014404',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('4','HIPOTENSORES','11014179',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('4','HIPOTENSORES','1101457X',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('4','HIPOTENSORES','1101460X',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('4','HIPOTENSORES','11014660',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('4','HIPOTENSORES','11014209',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('4','HIPOTENSORES','11016474',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('4','HIPOTENSORES','11016486',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('4','HIPOTENSORES','11016504',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('4','HIPOTENSORES','11018161',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('4','HIPOTENSORES','11010873',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('4','HIPOTENSORES','11010861',0,'DCV_DISEASE','TEREZA');
INSERT INTO STUDY_DRUG (GROUP_ID,GROUP_NAME,DRUG_ID,INTERVENTION_DRUG,RESEARCH_ID,RESEARCHER_ID) VALUES ('4','HIPOTENSORES','11011439',0,'DCV_DISEASE','TEREZA');

COMMIT;

CREATE INDEX SD_DID ON STUDY_DRUG(DRUG_ID) /* tablespace index placeholder */;
CREATE INDEX SD_DIDID ON STUDY_DRUG(DRUG_ID,INTERVENTION_DRUG) /* tablespace index placeholder */;
-- **********************************************

--------------------------------------------------------
--
--
--
--
--  CREATE PARAMS CACHE
--
--
--
--------------------------------------------------------
CREATE MATERIALIZED VIEW CURRENT_RUN_STR_PARAMS AS
(
  SELECT A.* 
  FROM 
    STUDY_PARAMS_STRING_TYPE A
  INNER JOIN 
    STUDY_CURRENT_RUN B
  ON
          A.RESEARCH_ID   =  B.RESEARCH_ID
      AND A.STUDY_ID      = B.STUDY_ID
      AND A.RESEARCHER_ID = B.RESEARCHER_ID
  WHERE
       ACTIVE = 1
);

CREATE INDEX CRSP_CPIE ON CURRENT_RUN_STR_PARAMS (CRITERIA_ID,PARAMETER_TYPE,INCLUSION_EXCLUSION) /* tablespace index placeholder */ ;

CREATE MATERIALIZED VIEW CURRENT_RUN_NUMBER_PARAMS AS
(
  SELECT A.* 
  FROM 
    STUDY_PARAMS_NUMBER_TYPE A
  INNER JOIN 
    STUDY_CURRENT_RUN B
  ON
          A.RESEARCH_ID   =  B.RESEARCH_ID
      AND A.STUDY_ID      = B.STUDY_ID
      AND A.RESEARCHER_ID = B.RESEARCHER_ID
  WHERE
       ACTIVE = 1
);

CREATE MATERIALIZED VIEW CURRENT_RUN_DATE_PARAMS AS
(
  SELECT A.* 
  FROM 
    STUDY_PARAMS_DATE_TYPE A
  INNER JOIN 
    STUDY_CURRENT_RUN B
  ON
          A.RESEARCH_ID   =  B.RESEARCH_ID
      AND A.STUDY_ID      = B.STUDY_ID
      AND A.RESEARCHER_ID = B.RESEARCHER_ID
  WHERE
       ACTIVE = 1
);

CREATE MATERIALIZED VIEW CURRENT_RUN_YESNO_PARAMS AS
(
  SELECT A.* 
  FROM 
    STUDY_PARAMS_YES_Y_NO_N_TYPE A
  INNER JOIN 
    STUDY_CURRENT_RUN B
  ON
          A.RESEARCH_ID   =  B.RESEARCH_ID
      AND A.STUDY_ID      = B.STUDY_ID
      AND A.RESEARCHER_ID = B.RESEARCHER_ID
  WHERE
       ACTIVE = 1
);

COMMIT;

--------------------------------------------------------
--
--
--
--
--  CREATE VIEWS IN ORDER - EXTERNAL SCHEMA MUST BE ALREADY IN PLACE
--
--
--
--------------------------------------------------------

-- **********************************************
-- CREATE FILTERS
-- **********************************************

CREATE MATERIALIZED VIEW FILTER_PATIENT_ENROLLMENT 
AS
(
  SELECT * 
  FROM
    ES_PATIENT
  WHERE
    (
      (
        -- INCLUDE FILTER (ENABLE)
        (
          'Y' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MIN_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      AND
        (
          RECORD_INCLUSION_DATE >= (SELECT MAX (PARAMETER_VALUE) 
          FROM CURRENT_RUN_DATE_PARAMS 
          WHERE 
              CRITERIA_ID = 'MIN_ADMISSION' 
          AND PARAMETER_TYPE = 'ADMISSION_INTERVAL'
          )
        ) 
      OR
        -- EXCLUDE FILTER (DISABLE)
        (
          'N' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MIN_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      )
      AND
      (
        -- INCLUDE FILTER (ENABLE)
        (
          'Y' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MAX_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      AND
        (
          RECORD_INCLUSION_DATE < (SELECT MAX (PARAMETER_VALUE) 
          FROM CURRENT_RUN_DATE_PARAMS 
          WHERE 
              CRITERIA_ID = 'MAX_ADMISSION' 
          AND PARAMETER_TYPE = 'ADMISSION_INTERVAL'
          )
        )
      OR
        -- EXCLUDE FILTER (DISABLE)
        (
          'N' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MAX_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      )
    )
);

CREATE INDEX FPE_PATIENTID  ON FILTER_PATIENT_ENROLLMENT (PATIENT_ID)             /* tablespace index placeholder */ ;
CREATE INDEX FPE_DEIDENTID  ON FILTER_PATIENT_ENROLLMENT (DEIDENTIFIED_ID)        /* tablespace index placeholder */ ;
CREATE INDEX FPE_RID        ON FILTER_PATIENT_ENROLLMENT (RECORD_INCLUSION_DATE)  /* tablespace index placeholder */ ;
CREATE INDEX FPE_BD         ON FILTER_PATIENT_ENROLLMENT (BIRTH_DATE)             /* tablespace index placeholder */ ;
CREATE INDEX FPE_PN         ON FILTER_PATIENT_ENROLLMENT (PATIENT_NAME)           /* tablespace index placeholder */ ;
CREATE INDEX FPE_PMN        ON FILTER_PATIENT_ENROLLMENT (PATIENT_MOTHER_NAME)    /* tablespace index placeholder */ ;

COMMIT;

-- ******************************************************

CREATE MATERIALIZED VIEW FILTER_DIAGNOSIS_ENROLLMENT 
AS
(
  SELECT * 
  FROM
    ES_DIAGNOSIS
  WHERE
    (
      (
        -- INCLUDE FILTER (ENABLE)
        (
          'Y' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MIN_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      AND
        (
          DIAGNOSIS_DATE >= (SELECT MAX (PARAMETER_VALUE) 
          FROM CURRENT_RUN_DATE_PARAMS 
          WHERE 
              CRITERIA_ID = 'MIN_ADMISSION' 
          AND PARAMETER_TYPE = 'ADMISSION_INTERVAL'
          )
        ) 
      OR
        -- EXCLUDE FILTER (DISABLE)
        (
          'N' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MIN_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      )
      AND
      (
        -- INCLUDE FILTER (ENABLE)
        (
          'Y' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MAX_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      AND
        (
          DIAGNOSIS_DATE < (SELECT MAX (PARAMETER_VALUE) 
          FROM CURRENT_RUN_DATE_PARAMS 
          WHERE 
              CRITERIA_ID = 'MAX_ADMISSION' 
          AND PARAMETER_TYPE = 'ADMISSION_INTERVAL'
          )
        )
      OR
        -- EXCLUDE FILTER (DISABLE)
        (
          'N' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MAX_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      )
    )
);

CREATE INDEX FDE_PATIENTID  ON FILTER_DIAGNOSIS_ENROLLMENT (PATIENT_ID)               /* tablespace index placeholder */ ;
CREATE INDEX FDE_DIAGID     ON FILTER_DIAGNOSIS_ENROLLMENT (DIAGNOSIS_ID)             /* tablespace index placeholder */ ;
CREATE INDEX FDE_PATDIAGID  ON FILTER_DIAGNOSIS_ENROLLMENT (PATIENT_ID,DIAGNOSIS_ID)  /* tablespace index placeholder */ ;
CREATE INDEX FDE_ICD10      ON FILTER_DIAGNOSIS_ENROLLMENT (ICD10)                    /* tablespace index placeholder */ ;

COMMIT;

-- ******************************************************

CREATE MATERIALIZED VIEW FILTER_ADM_DISCH_ENROLLMENT 
AS
(
  SELECT * 
  FROM
    ES_ADMISSION_DISCHARGE
  WHERE
    (
      (
        -- INCLUDE FILTER (ENABLE)
        (
          'Y' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MIN_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      AND
        (
          ADMISSION_DATE >= (SELECT MAX (PARAMETER_VALUE) 
          FROM CURRENT_RUN_DATE_PARAMS 
          WHERE 
              CRITERIA_ID = 'MIN_ADMISSION' 
          AND PARAMETER_TYPE = 'ADMISSION_INTERVAL'
          )
        ) 
      OR
        -- EXCLUDE FILTER (DISABLE)
        (
          'N' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MIN_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      )
      AND
      (
        -- INCLUDE FILTER (ENABLE)
        (
          'Y' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MAX_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      AND
        (
          ADMISSION_DATE < (SELECT MAX (PARAMETER_VALUE) 
          FROM CURRENT_RUN_DATE_PARAMS 
          WHERE 
              CRITERIA_ID = 'MAX_ADMISSION' 
          AND PARAMETER_TYPE = 'ADMISSION_INTERVAL'
          )
        )
      OR
        -- EXCLUDE FILTER (DISABLE)
        (
          'N' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MAX_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      )
    )
);

CREATE INDEX FADE_PATIENTID   ON FILTER_ADM_DISCH_ENROLLMENT (PATIENT_ID)                               /* tablespace index placeholder */ ;
CREATE INDEX FADE_PATADYADID  ON FILTER_ADM_DISCH_ENROLLMENT (PATIENT_ID,ADMISSION_YEAR,ADMISSION_ID)   /* tablespace index placeholder */ ;

COMMIT;

-- **********************************************
CREATE MATERIALIZED VIEW FILTER_SURGERY_ENROLLMENT AS
(
  SELECT * 
  FROM
    ES_SURGERY
  WHERE
    (
      (
        -- INCLUDE FILTER (ENABLE)
        (
          'Y' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MIN_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      AND
        (
          SURGERY_DATE >= (SELECT MAX (PARAMETER_VALUE) 
          FROM CURRENT_RUN_DATE_PARAMS 
          WHERE 
              CRITERIA_ID = 'MIN_ADMISSION' 
          AND PARAMETER_TYPE = 'ADMISSION_INTERVAL'
          )
        ) 
      OR
        -- EXCLUDE FILTER (DISABLE)
        (
          'N' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MIN_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      )
      AND
      (
        -- INCLUDE FILTER (ENABLE)
        (
          'Y' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MAX_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      AND
        (
          SURGERY_DATE < (SELECT MAX (PARAMETER_VALUE) 
          FROM CURRENT_RUN_DATE_PARAMS 
          WHERE 
              CRITERIA_ID = 'MAX_ADMISSION' 
          AND PARAMETER_TYPE = 'ADMISSION_INTERVAL'
          )
        )
      OR
        -- EXCLUDE FILTER (DISABLE)
        (
          'N' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MAX_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      )
    )
);

-- **********************************************
CREATE MATERIALIZED VIEW FILTER_LABORATORY_ENROLLMENT AS
(
  SELECT * 
  FROM
    ES_LABORATORY
  WHERE
    (
      (
        -- INCLUDE FILTER (ENABLE)
        (
          'Y' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MIN_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      AND
        (
          LAB_TEST_DATE >= (SELECT MAX (PARAMETER_VALUE) 
          FROM CURRENT_RUN_DATE_PARAMS 
          WHERE 
              CRITERIA_ID = 'MIN_ADMISSION' 
          AND PARAMETER_TYPE = 'ADMISSION_INTERVAL'
          )
        ) 
      OR
        -- EXCLUDE FILTER (DISABLE)
        (
          'N' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MIN_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      )
      AND
      (
        -- INCLUDE FILTER (ENABLE)
        (
          'Y' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MAX_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      AND
        (
          LAB_TEST_DATE < (SELECT MAX (PARAMETER_VALUE) 
          FROM CURRENT_RUN_DATE_PARAMS 
          WHERE 
              CRITERIA_ID = 'MAX_ADMISSION' 
          AND PARAMETER_TYPE = 'ADMISSION_INTERVAL'
          )
        )
      OR
        -- EXCLUDE FILTER (DISABLE)
        (
          'N' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MAX_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      )
    )
);

CREATE INDEX FLE_PATIDLABIDTN  ON FILTER_LABORATORY_ENROLLMENT (PATIENT_ID,LAB_TEST_ID,LAB_TEST_CODE)   /* tablespace index placeholder */ ;

-- **********************************************
CREATE MATERIALIZED VIEW FILTER_PCI_ENROLLMENT AS
(
  SELECT * 
  FROM
    ES_PCI
  WHERE
    (
      (
        -- INCLUDE FILTER (ENABLE)
        (
          'Y' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MIN_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      AND
        (
          PCI_DATE >= (SELECT MAX (PARAMETER_VALUE) 
          FROM CURRENT_RUN_DATE_PARAMS 
          WHERE 
              CRITERIA_ID = 'MIN_ADMISSION' 
          AND PARAMETER_TYPE = 'ADMISSION_INTERVAL'
          )
        ) 
      OR
        -- EXCLUDE FILTER (DISABLE)
        (
          'N' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MIN_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      )
      AND
      (
        -- INCLUDE FILTER (ENABLE)
        (
          'Y' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MAX_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      AND
        (
          PCI_DATE < (SELECT MAX (PARAMETER_VALUE) 
          FROM CURRENT_RUN_DATE_PARAMS 
          WHERE 
              CRITERIA_ID = 'MAX_ADMISSION' 
          AND PARAMETER_TYPE = 'ADMISSION_INTERVAL'
          )
        )
      OR
        -- EXCLUDE FILTER (DISABLE)
        (
          'N' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MAX_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      )
    )
);
-- **********************************************
CREATE MATERIALIZED VIEW FILTER_FSTOUTPTENC_ENROLLMENT AS
(
  SELECT * 
  FROM
    ES_FIRST_OUTPATIENT_ENCOUNTER
  WHERE
    (
      (
        -- INCLUDE FILTER (ENABLE)
        (
          'Y' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MIN_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      AND
        (
          REGISTRATION_DATE >= (SELECT MAX (PARAMETER_VALUE) 
          FROM CURRENT_RUN_DATE_PARAMS 
          WHERE 
              CRITERIA_ID = 'MIN_ADMISSION' 
          AND PARAMETER_TYPE = 'ADMISSION_INTERVAL'
          )
        ) 
      OR
        -- EXCLUDE FILTER (DISABLE)
        (
          'N' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MIN_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      )
      AND
      (
        -- INCLUDE FILTER (ENABLE)
        (
          'Y' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MAX_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      AND
        (
          REGISTRATION_DATE < (SELECT MAX (PARAMETER_VALUE) 
          FROM CURRENT_RUN_DATE_PARAMS 
          WHERE 
              CRITERIA_ID = 'MAX_ADMISSION' 
          AND PARAMETER_TYPE = 'ADMISSION_INTERVAL'
          )
        )
      OR
        -- EXCLUDE FILTER (DISABLE)
        (
          'N' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MAX_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      )
    )
);

-- **********************************************
CREATE MATERIALIZED VIEW FILTER_HEARTRISKF_ENROLLMENT AS
(
  SELECT * 
  FROM
    ES_HEART_RISK_FACTOR
  WHERE
    (
      (
        -- INCLUDE FILTER (ENABLE)
        (
          'Y' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MIN_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      AND
        (
          ENCOUNTER_DATE >= (SELECT MAX (PARAMETER_VALUE) 
          FROM CURRENT_RUN_DATE_PARAMS 
          WHERE 
              CRITERIA_ID = 'MIN_ADMISSION' 
          AND PARAMETER_TYPE = 'ADMISSION_INTERVAL'
          )
        ) 
      OR
        -- EXCLUDE FILTER (DISABLE)
        (
          'N' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MIN_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      )
      AND
      (
        -- INCLUDE FILTER (ENABLE)
        (
          'Y' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MAX_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      AND
        (
          ENCOUNTER_DATE < (SELECT MAX (PARAMETER_VALUE) 
          FROM CURRENT_RUN_DATE_PARAMS 
          WHERE 
              CRITERIA_ID = 'MAX_ADMISSION' 
          AND PARAMETER_TYPE = 'ADMISSION_INTERVAL'
          )
        )
      OR
        -- EXCLUDE FILTER (DISABLE)
        (
          'N' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MAX_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      )
    )
);

-- **********************************************
CREATE MATERIALIZED VIEW FILTER_DRUGS_ENROLLMENT AS
(
  SELECT * 
  FROM
    ES_DRUGS
  WHERE
    (
      (
        -- INCLUDE FILTER (ENABLE)
        (
          'Y' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MIN_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      AND
        (
          PRESCRIPTION_DATE >= (SELECT MAX (PARAMETER_VALUE) 
          FROM CURRENT_RUN_DATE_PARAMS 
          WHERE 
              CRITERIA_ID = 'MIN_ADMISSION' 
          AND PARAMETER_TYPE = 'ADMISSION_INTERVAL'
          )
        ) 
      OR
        -- EXCLUDE FILTER (DISABLE)
        (
          'N' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MIN_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      )
      AND
      (
        -- INCLUDE FILTER (ENABLE)
        (
          'Y' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MAX_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      AND
        (
          PRESCRIPTION_DATE < (SELECT MAX (PARAMETER_VALUE) 
          FROM CURRENT_RUN_DATE_PARAMS 
          WHERE 
              CRITERIA_ID = 'MAX_ADMISSION' 
          AND PARAMETER_TYPE = 'ADMISSION_INTERVAL'
          )
        )
      OR
        -- EXCLUDE FILTER (DISABLE)
        (
          'N' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MAX_ADMISSION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      )
    )
);

-- ******************************************************
-- ******************************************************
-- **********************************************
-- DETECT INVALID
-- **********************************************
-- ******************************************************
-- ******************************************************

-- DETECT_INVALID_PATIENT
-- PATIENTS WITH NAME == NUL 

CREATE OR REPLACE VIEW DETECT_INVALID_NAME 
AS 
(
  SELECT 
    PATIENT_ID
    -- , RECORD_INCLUSION_DATE, RECORD_MODIFICATION_DATE, PATIENT_NAME, BIRTH_DATE 
  FROM 
    FILTER_PATIENT_ENROLLMENT
  WHERE 
        PATIENT_NAME IS NULL 
 );

-- DETECT_INVALID_PATIENT
-- PATIENTS WITH BIRDTH DATE == NULL

CREATE OR REPLACE VIEW DETECT_INVALID_NULL_BIRTH_DATE
AS 
(
  SELECT 
    PATIENT_ID
    -- , RECORD_INCLUSION_DATE, RECORD_MODIFICATION_DATE, PATIENT_NAME, BIRTH_DATE 
  FROM 
    FILTER_PATIENT_ENROLLMENT
  WHERE 
        BIRTH_DATE IS NULL 
 );

-- DETECT_INVALID_PATIENT
-- PATIENTS WITH BIRDTH DATE IN THE FUTURE

CREATE OR REPLACE VIEW DETECT_INVALID_FUTURE_BIRTH
AS 
(
  SELECT 
    PATIENT_ID 
    -- , RECORD_INCLUSION_DATE, RECORD_MODIFICATION_DATE, PATIENT_NAME, BIRTH_DATE 
  FROM 
    FILTER_PATIENT_ENROLLMENT
  WHERE 
    BIRTH_DATE > RECORD_MODIFICATION_DATE 
 );

-- ******************************************************
--------------------------------------------------------
--
--
--
--
--  CREATE VIEWS IN ORDER - INVALID RECORDS
--
--
--
--------------------------------------------------------
-- ******************************************************
CREATE OR REPLACE VIEW DETECT_INVALID_BIRTH_DATE
AS 
(
  SELECT PATIENT_ID FROM DETECT_INVALID_NULL_BIRTH_DATE
  UNION
  SELECT PATIENT_ID FROM DETECT_INVALID_FUTURE_BIRTH
 );

-- ******************************************************
CREATE OR REPLACE VIEW INVALID_PATIENT AS
(
  SELECT PATIENT_ID FROM DETECT_INVALID_NAME
  UNION
  SELECT PATIENT_ID FROM DETECT_INVALID_BIRTH_DATE
);

--------------------------------------------------------
--
--
--
--
--  CREATE VIEWS IN ORDER - VALID RECORDS
--
--
--
--------------------------------------------------------
-- ******************************************************
CREATE OR REPLACE FORCE VIEW DETECT_DUPLICATE_DEATH
AS
(
  SELECT PATIENT_ID, QTY AS QUANTITY
  FROM
    (
        SELECT   PATIENT_ID
            , COUNT(*) QTY 
        FROM 
          ES_DEATH
        GROUP BY 
          PATIENT_ID
    )
  WHERE QTY > 1
);

-- ******************************************************
CREATE OR REPLACE VIEW VALID_DEATH AS
(
  SELECT 
    A.* 
  FROM 
    ES_DEATH A
  INNER JOIN 
    (
      SELECT 
        PATIENT_ID
      FROM 
        ES_DEATH
      MINUS 
      SELECT 
        PATIENT_ID 
      FROM 
        DETECT_DUPLICATE_DEATH
    ) B
  ON
    A.PATIENT_ID = B.PATIENT_ID
);

-- ******************************************************
-- VIEW 29 - VALID_PATIENT
------- CLEAN-UP VIEW ----
-- VALID (NOT NULL) PATIENTS = PATIENTS WITH NAME AND BIRDTH DATE

CREATE MATERIALIZED VIEW VALID_PATIENT 
AS 
(
  SELECT 
      PATIENT_ID
    , DEIDENTIFIED_ID
    , PATIENT_NAME
    , BIRTH_DATE
  FROM 
    FILTER_PATIENT_ENROLLMENT 
  WHERE 
    PATIENT_ID NOT IN (SELECT PATIENT_ID FROM INVALID_PATIENT )
);

CREATE INDEX VP_PATID ON VALID_PATIENT(PATIENT_ID) /* tablespace index placeholder */ ;
 -- ******************************************************

CREATE OR REPLACE VIEW DETECT_DUPLICATE_ADMISSION AS (
                                    SELECT 
                                        PATIENT_ID
                                      , ADMISSION_YEAR
                                      , ADMISSION_ID
                                      , ADMCNT 
                                    FROM 
                                      (
                                        SELECT 
                                            PATIENT_ID
                                          , ADMISSION_YEAR
                                          , ADMISSION_ID
                                          , COUNT(ADMISSION_ID) ADMCNT
                                        FROM 
                                          FILTER_ADM_DISCH_ENROLLMENT
                                        GROUP BY 
                                            PATIENT_ID
                                          , ADMISSION_YEAR
                                          , ADMISSION_ID
                                      ) PATIENT
                                    WHERE 
                                      PATIENT.ADMCNT > 1
) order by ADMCNT desc,ADMISSION_YEAR,PATIENT_ID;

-- ******************************************************
CREATE OR REPLACE VIEW DETECT_DUPLICATE_HASH AS
(
SELECT T1.* 
FROM 
  FILTER_PATIENT_ENROLLMENT T1 
INNER JOIN 
  (
  select * 
  from
    (select DEIDENTIFIED_ID, count(*) qty from FILTER_PATIENT_ENROLLMENT group by DEIDENTIFIED_ID)
  where qty > 1
  ) T2
ON T1.DEIDENTIFIED_ID = T2.DEIDENTIFIED_ID
);

-- ******************************************************
CREATE OR REPLACE VIEW DETECT_DUP_PATIENT_NAME_BD AS
( 
  SELECT 
    DISTINCT  A.PATIENT_ID
  FROM 
    VALID_PATIENT A
  INNER JOIN
    VALID_PATIENT B
  ON 
        A.PATIENT_NAME  = B.PATIENT_NAME
    AND A.BIRTH_DATE    = B.BIRTH_DATE
  WHERE
      A.PATIENT_ID    != B.PATIENT_ID
);

-- ******************************************************
CREATE OR REPLACE VIEW DETECT_DUPLICATE_PATIENT_ID AS
( 
  SELECT 
        PATIENT_ID
  FROM
    (
      SELECT 
        PATIENT_ID, count(PATIENT_ID) QTY
      FROM 
        VALID_PATIENT
      GROUP BY 
        PATIENT_ID
    )
    WHERE QTY > 1
);

-- CREATE INDEX DDP_PATIENTID ON DETECT_DUPLICATE_PATIENT_ID (PATIENT_ID) /* tablespace index placeholder */ ;


COMMIT;

-- ******************************************************

CREATE MATERIALIZED VIEW DETECT_PATIENT_DUPLICATES AS
  (
  SELECT PATIENT_ID FROM DETECT_DUPLICATE_PATIENT_ID
  UNION
  SELECT PATIENT_ID FROM DETECT_DUP_PATIENT_NAME_BD
  );

CREATE INDEX DPD_PATIENTID ON DETECT_PATIENT_DUPLICATES (PATIENT_ID) /* tablespace index placeholder */ ;

-- ******************************************************
CREATE OR REPLACE VIEW DETECT_INVALID_ICD10_STRICT AS 
(
  SELECT 
      PATIENT_ID
    , DIAGNOSIS_ID
    , ICD10
  FROM 
    FILTER_DIAGNOSIS_ENROLLMENT 
  WHERE 
    NOT REGEXP_LIKE(ICD10,'^[a-tA-Tv-zV-Z][0-9][a-zA-Z0-9]\.[a-zA-Z0-9]([a-zA-Z0-9]{1,3})?$')
);

-- ******************************************************
CREATE OR REPLACE VIEW DETECT_INVALID_ICD10_RELAX AS
(
  SELECT 
      PATIENT_ID
    , DIAGNOSIS_ID
    , ICD10
  FROM 
    FILTER_DIAGNOSIS_ENROLLMENT 
  WHERE 
    NOT REGEXP_LIKE(ICD10,'^[a-tA-Tv-zV-Z][0-9][a-zA-Z0-9](\.[a-zA-Z0-9]{0,4})?$')
); 

-- ******************************************************
CREATE OR REPLACE VIEW DETECT_INVALID_LABNUM_RESULT AS
(
  SELECT 
      PATIENT_ID
    , LAB_TEST_ID
    , LAB_TEST_CODE
    , RESULT_IS_NUMBER
    , LABTST_RESULT_VALUE
    , REPLACE(LABTST_RESULT_VALUE,',','.') AS REPLACED_COMMAS

  FROM
    FILTER_LABORATORY_ENROLLMENT
  WHERE
        RESULT_IS_NUMBER = 1
    AND NOT REGEXP_LIKE(TRIM(REPLACE(LABTST_RESULT_VALUE,',','.')),'^[+|-]?(\d*)?(\.\d*)?(?[eE][+-]?[0-9]+)?$')
);
-- Regexp:
-- '^[+|-]?(([1-9]\d{0,2}(,?\d{3})*)|0)?(\.\d*)?( ?[eE][+-]?[0-9]+)?$'
-- Valid: +123,456.0023e-2 123 e2 0 0.9 .9 12345 12345. 12345.54
-- Problem: Also valid 123456,789.09
-- Not a problem for oracle. The only valid numbers doesn't have thousand separators
-- For Oracle: ^[+|-]?(\d*)?(\.\d*)?([eE][+-]?[0-9]+)?$
--------------------------------------------------------
--
--
--
--
--  CREATE VIEWS IN ORDER - INDICATORS
--
--
--
--------------------------------------------------------
-- ******************************************************
CREATE OR REPLACE VIEW INDICATOR_PATIENT AS
(
    SELECT
      (SELECT count(PATIENT_ID) FROM FILTER_PATIENT_ENROLLMENT WHERE PATIENT_NAME IS NULL)                                 AS NULL_PATIENT_NAME
   ,  (SELECT count(PATIENT_ID) FROM FILTER_PATIENT_ENROLLMENT WHERE PATIENT_MOTHER_NAME IS NULL)                          AS NULL_MOTHER_NAME
   ,  (SELECT count(PATIENT_ID) FROM FILTER_PATIENT_ENROLLMENT WHERE BIRTH_DATE IS NULL)                                   AS NULL_BIRTH_DATE
   ,  (SELECT count(PATIENT_ID) FROM FILTER_PATIENT_ENROLLMENT WHERE  BIRTH_DATE > RECORD_MODIFICATION_DATE)               AS BIRTH_DATE_IN_FUTURE
   ,  (SELECT count(PATIENT_ID) FROM FILTER_PATIENT_ENROLLMENT WHERE  (RECORD_INCLUSION_DATE + 7) < RECORD_MODIFICATION_DATE)   AS RECORDS_MODIFIED
   ,  (SELECT count(PATIENT_ID) FROM FILTER_PATIENT_ENROLLMENT)                                                            AS RECORDS_TOTAL_COUNT
   FROM DUAL
);


-- ******************************************************
CREATE OR REPLACE VIEW INDICATOR_PATIENT_PT AS
(
    SELECT
      (SELECT count(PATIENT_ID) FROM FILTER_PATIENT_ENROLLMENT WHERE PATIENT_NAME IS NULL)                                 AS NOME_NULO
   ,  (SELECT count(PATIENT_ID) FROM FILTER_PATIENT_ENROLLMENT WHERE PATIENT_MOTHER_NAME IS NULL)                          AS NOME_MAE_NULO
   ,  (SELECT count(PATIENT_ID) FROM FILTER_PATIENT_ENROLLMENT WHERE BIRTH_DATE IS NULL)                                   AS DATA_NASCIMENTO_NULA
   ,  (SELECT count(PATIENT_ID) FROM FILTER_PATIENT_ENROLLMENT WHERE  BIRTH_DATE > RECORD_MODIFICATION_DATE)               AS DATA_NASCIMENTO_FUTURA
   ,  (SELECT count(PATIENT_ID) FROM FILTER_PATIENT_ENROLLMENT WHERE  (RECORD_INCLUSION_DATE + 7) < RECORD_MODIFICATION_DATE)   AS REGISTROS_ALTERADOS
   ,  (SELECT count(PATIENT_ID) FROM FILTER_PATIENT_ENROLLMENT)                                                            AS TOTAL_REGISTROS
   FROM DUAL
);


COMMIT;

-- ******************************************************
CREATE OR REPLACE VIEW INDICATOR_PATIENT_GENDER AS 
(
SELECT 
        "GENDER"
      , "QUANTITY"
      , "PERCENT"
FROM 
    (
      SELECT 
          B.SEXO_DS AS "GENDER"
        , COUNT(*)  AS "QUANTITY" 
        , TRUNC(COUNT(*)*100/(SELECT COUNT(*) FROM FILTER_PATIENT_ENROLLMENT ),2) AS "PERCENT"
      FROM 
        FILTER_PATIENT_ENROLLMENT A
      INNER JOIN 
        RAW_THS_BAS_SEXO B
      ON 
        A.GENDER = B.SEXO_TP_SEXO                                             
      GROUP BY 
        B.SEXO_DS 

    UNION 

      SELECT 
        'Total' as "GENDER"
      , (SELECT COUNT(*) FROM FILTER_PATIENT_ENROLLMENT ) as "QUANTITY" 
      , 100.00 AS "PERCENT"
      FROM 
        DUAL
    )
) ORDER BY 
    CASE 
       WHEN "GENDER" = 'MASCULINO'  THEN '001' 
       WHEN "GENDER" = 'FEMININO'   THEN '002' 
       WHEN "GENDER" = 'INDEFINIDO' THEN '003' 
       WHEN "GENDER" = 'OUTROS'     THEN '004' 
       ELSE "GENDER"
    END
;

CREATE OR REPLACE VIEW INDICATOR_PATIENT_GENDER_PT AS 
(
SELECT 
        "Género"
      , "Quantidade"
      , "Percentual"
FROM 
    (
      SELECT 
          B.SEXO_DS AS "Género"
        , COUNT(*)  AS "Quantidade" 
        , TRUNC(COUNT(*)*100/(SELECT COUNT(*) FROM FILTER_PATIENT_ENROLLMENT ),2) AS "Percentual"
      FROM 
        FILTER_PATIENT_ENROLLMENT A
      INNER JOIN 
        RAW_THS_BAS_SEXO B
      ON 
        A.GENDER = B.SEXO_TP_SEXO                                             
      GROUP BY 
        B.SEXO_DS 

    UNION 

      SELECT 
        'Total' as "Género"
      , (SELECT COUNT(*) FROM FILTER_PATIENT_ENROLLMENT ) as "Quantidade" 
      , 100.00 AS "Percentual"
      FROM 
        DUAL
    )
) ORDER BY 
    CASE 
       WHEN "Género" = 'MASCULINO'  THEN '001' 
       WHEN "Género" = 'FEMININO'   THEN '002' 
       WHEN "Género" = 'INDEFINIDO' THEN '003' 
       WHEN "Género" = 'OUTROS'     THEN '004' 
       ELSE "Género"
    END
;

-- ******************************************************
CREATE OR REPLACE VIEW INDICATOR_ENCOUNTER_GENDER AS 
(
SELECT 
        "GENDER"
      , "PATIENT_WITH_ENCOUNTER"
      , "PERCENT"
FROM 
    (
      SELECT 
          C.SEXO_DS AS "GENDER"
        , COUNT(DISTINCT (A.PATIENT_ID))  AS "PATIENT_WITH_ENCOUNTER" 
        , TRUNC((COUNT(DISTINCT (A.PATIENT_ID)) * 100 / (SELECT COUNT(DISTINCT (PATIENT_ID)) FROM FILTER_ADM_DISCH_ENROLLMENT )),2) AS "PERCENT"
      FROM 
        FILTER_ADM_DISCH_ENROLLMENT A
      INNER JOIN
        FILTER_PATIENT_ENROLLMENT B
      ON
        A.PATIENT_ID = B.PATIENT_ID
      INNER JOIN 
        RAW_THS_BAS_SEXO C
      ON 
        B.GENDER = C.SEXO_TP_SEXO                                             
      GROUP BY 
        C.SEXO_DS 

    UNION 

      SELECT 
        'Total' as "GENDER"
      , (SELECT COUNT(DISTINCT (PATIENT_ID)) FROM FILTER_ADM_DISCH_ENROLLMENT ) as "PATIENT_WITH_ENCOUNTER" 
      , 100.00
      FROM 
        DUAL
    )
) ORDER BY 
    CASE 
       WHEN "GENDER" = 'MASCULINO' THEN '001' 
       WHEN "GENDER" = 'FEMININO'  THEN '002' 
       ELSE "GENDER"
    END
;


-- **********************************************
CREATE OR REPLACE VIEW INDICATOR_ENCOUNTER_GENDER_PT AS 
(
SELECT 
        "Género"
      , "Paciente com admissão"
      , "Percentual"
FROM 
    (
      SELECT 
          C.SEXO_DS AS "Género"
        , COUNT(DISTINCT (A.PATIENT_ID))  AS "Paciente com admissão" 
        , TRUNC((COUNT(DISTINCT (A.PATIENT_ID)) * 100 / (SELECT COUNT(DISTINCT (PATIENT_ID)) FROM FILTER_ADM_DISCH_ENROLLMENT )),2) AS "Percentual"
      FROM 
        FILTER_ADM_DISCH_ENROLLMENT A
      INNER JOIN
        FILTER_PATIENT_ENROLLMENT B
      ON
        A.PATIENT_ID = B.PATIENT_ID
      INNER JOIN 
        RAW_THS_BAS_SEXO C
      ON 
        B.GENDER = C.SEXO_TP_SEXO                                             
      GROUP BY 
        C.SEXO_DS 

    UNION 

      SELECT 
        'Total' as "Género"
      , (SELECT COUNT(DISTINCT (PATIENT_ID)) FROM FILTER_ADM_DISCH_ENROLLMENT ) as "Paciente com admissão" 
      , 100.00
      FROM 
        DUAL
    )
) ORDER BY 
    CASE 
       WHEN "Género" = 'MASCULINO' THEN '001' 
       WHEN "Género" = 'FEMININO'  THEN '002' 
       ELSE "Género"
    END
;


-- **********************************************
CREATE OR REPLACE VIEW "INDICATOR_DIAGNOSIS_PROFILE" AS
(
SELECT 
          "ICD10_CHAPTER"
        , "DESCRIPTION" 
        , "QUANTITY"
        , "PERCENT" 
FROM
        (
        SELECT 
                  "ORDER"
                , "ICD10_CHAPTER"
                , "DESCRIPTION"
                , count(*) as "QUANTITY"
                , TRUNC(count(*) * 100/(select count(*) from FILTER_DIAGNOSIS_ENROLLMENT),2) AS "PERCENT"
        FROM 
                (
                SELECT 
                      (
                      CASE 
                        WHEN ('A00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'B99') THEN 1 
                        WHEN ('C00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'D49') THEN 2 
                        WHEN ('D50' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'D89') THEN 3 
                        WHEN ('E00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'E90') THEN 4 
                        WHEN ('F00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'F99') THEN 5 
                        WHEN ('G00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'G99') THEN 6 
                        WHEN ('H00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'H59') THEN 7 
                        WHEN ('H60' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'H95') THEN 8 
                        WHEN ('I00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'I99') THEN 9 
                        WHEN ('J00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'J99') THEN 10 
                        WHEN ('K00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'K95') THEN 11
                        WHEN ('L00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'L99') THEN 12 
                        WHEN ('M00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'M99') THEN 13 
                        WHEN ('N00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'N99') THEN 14 
                        WHEN ('O00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'O9A') THEN 15 
                        WHEN ('P00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'P96') THEN 16 
                        WHEN ('Q00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'Q99') THEN 17 
                        WHEN ('R00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'R99') THEN 18 
                        WHEN ('S00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'T98') THEN 19 
                        WHEN ('V00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'Y99') THEN 20
                        WHEN ('Z00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'Z99') THEN 21 ELSE 22 END) AS "ORDER" 
                      ,(
                      CASE 
                        WHEN ('A00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'B99') THEN 'I' 
                        WHEN ('C00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'D49') THEN 'II' 
                        WHEN ('D50' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'D89') THEN 'III' 
                        WHEN ('E00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'E90') THEN 'IV' 
                        WHEN ('F00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'F99') THEN 'V' 
                        WHEN ('G00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'G99') THEN 'VI' 
                        WHEN ('H00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'H59') THEN 'VII' 
                        WHEN ('H60' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'H95') THEN 'VIII' 
                        WHEN ('I00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'I99') THEN 'IX' 
                        WHEN ('J00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'J99') THEN 'X' 
                        WHEN ('K00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'K95') THEN 'XI' 
                        WHEN ('L00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'L99') THEN 'XII' 
                        WHEN ('M00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'M99') THEN 'XIII' 
                        WHEN ('N00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'N99') THEN 'XIV' 
                        WHEN ('O00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'O9A') THEN 'XV' 
                        WHEN ('P00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'P96') THEN 'XVI' 
                        WHEN ('Q00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'Q99') THEN 'XVII' 
                        WHEN ('R00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'R99') THEN 'XVIII' 
                        WHEN ('S00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'T98') THEN 'XIX' 
                        WHEN ('V00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'Y99') THEN 'XX'
                        WHEN ('Z00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'Z99') THEN 'XXI' ELSE 'UNKNOWN' END) AS "ICD10_CHAPTER" 
                      ,(
                      CASE 
                        WHEN ('A00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'B99') THEN 'Certain infectious and parasitic diseases' 
                        WHEN ('C00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'D49') THEN 'Neoplasms' 
                        WHEN ('D50' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'D89') THEN 'Diseases of the blood and blood-forming organs and certain disorders involving the immune mechanism' 
                        WHEN ('E00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'E90') THEN 'Endocrine, nutritional and metabolic diseases' 
                        WHEN ('F00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'F99') THEN 'Mental and behavioural disorders' 
                        WHEN ('G00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'G99') THEN 'Diseases of the nervous system' 
                        WHEN ('H00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'H59') THEN 'Diseases of the eye and adnexa' 
                        WHEN ('H60' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'H95') THEN 'Diseases of the ear and mastoid process' 
                        WHEN ('I00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'I99') THEN 'Diseases of the circulatory system' 
                        WHEN ('J00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'J99') THEN 'Diseases of the respiratory system' 
                        WHEN ('K00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'K95') THEN 'Diseases of the digestive system' 
                        WHEN ('L00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'L99') THEN 'Diseases of the skin and subcutaneous tissue' 
                        WHEN ('M00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'M99') THEN 'Diseases of the musculoskeletal system and connective tissue' 
                        WHEN ('N00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'N99') THEN 'Diseases of the genitourinary system' 
                        WHEN ('O00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'O9A') THEN 'Pregnancy, childbirth and the puerperium' 
                        WHEN ('P00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'P96') THEN 'Certain conditions originating in the perinatal period' 
                        WHEN ('Q00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'Q99') THEN 'Congenital malformations, deformations and chromosomal abnormalities' 
                        WHEN ('R00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'R99') THEN 'Symptoms, signs and abnormal clinical and laboratory findings, not elsewhere classified' 
                        WHEN ('S00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'T98') THEN 'Injury, poisoning and certain other consequences of external causes' 
                        WHEN ('V00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'Y99') THEN 'External causes of morbidity and mortality'
                        WHEN ('Z00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'Z99') THEN 'Factors influencing health status and contact with health services' 
                        ELSE 'Not specified, invalid or unknown' END) AS "DESCRIPTION" 
                      FROM  (  
                              SELECT 
                                  PATIENT_ID
                                , UPPER(ICD10) AS ICD10
                              FROM 
                                FILTER_DIAGNOSIS_ENROLLMENT 
                              WHERE 
                                REGEXP_LIKE(ICD10,'^[a-tA-Tv-zV-Z][0-9][a-zA-Z0-9](\.[a-zA-Z0-9]{0,4})?$')
                            )
            )  GROUP BY "ORDER", "ICD10_CHAPTER", "DESCRIPTION"
        UNION
            SELECT 
                  24
                , 'UNKNOWN'
                , 'NOT SPECIFIED OR INVALID'
                , (select count(*)        FROM FILTER_DIAGNOSIS_ENROLLMENT WHERE NOT REGEXP_LIKE(ICD10,'^[a-tA-Tv-zV-Z][0-9][a-zA-Z0-9](\.[a-zA-Z0-9]{0,4})?$'))
                , TRUNC((select count(*)  FROM FILTER_DIAGNOSIS_ENROLLMENT WHERE NOT REGEXP_LIKE(ICD10,'^[a-tA-Tv-zV-Z][0-9][a-zA-Z0-9](\.[a-zA-Z0-9]{0,4})?$'))*100/(select count(*) FROM FILTER_DIAGNOSIS_ENROLLMENT),2)
            FROM dual
        UNION
            SELECT 
                  25
                , 'TOTAL'
                , ''
                , (select count(*) FROM FILTER_DIAGNOSIS_ENROLLMENT)
                , 100 
            FROM dual
        
      )
) ORDER BY "ORDER";

-- **********************************************
CREATE OR REPLACE VIEW "INDICATOR_DIAGNOSIS_PROFILE_PT" AS
(
SELECT 
          "Capítulo CID"
        , "Descrição" 
        , "Quantidade"
        , "Percentual" 
FROM
        (
        SELECT 
                  "ORDEM"
                , "Capítulo CID"
                , "Descrição"
                , count(*) as "Quantidade"
                , TRUNC(count(*) * 100/(select count(*) from FILTER_DIAGNOSIS_ENROLLMENT),2) AS "Percentual"
        FROM 
                (
                SELECT 
                      (
                      CASE 
                        WHEN ('A00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'B99') THEN 1 
                        WHEN ('C00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'D49') THEN 2 
                        WHEN ('D50' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'D89') THEN 3 
                        WHEN ('E00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'E90') THEN 4 
                        WHEN ('F00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'F99') THEN 5 
                        WHEN ('G00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'G99') THEN 6 
                        WHEN ('H00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'H59') THEN 7 
                        WHEN ('H60' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'H95') THEN 8 
                        WHEN ('I00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'I99') THEN 9 
                        WHEN ('J00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'J99') THEN 10 
                        WHEN ('K00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'K95') THEN 11
                        WHEN ('L00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'L99') THEN 12 
                        WHEN ('M00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'M99') THEN 13 
                        WHEN ('N00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'N99') THEN 14 
                        WHEN ('O00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'O9A') THEN 15 
                        WHEN ('P00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'P96') THEN 16 
                        WHEN ('Q00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'Q99') THEN 17 
                        WHEN ('R00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'R99') THEN 18 
                        WHEN ('S00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'T98') THEN 19 
                        WHEN ('V00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'Y99') THEN 20
                        WHEN ('Z00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'Z99') THEN 21 ELSE 22 END) AS "ORDEM" 
                      ,(
                      CASE 
                        WHEN ('A00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'B99') THEN 'I' 
                        WHEN ('C00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'D49') THEN 'II' 
                        WHEN ('D50' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'D89') THEN 'III' 
                        WHEN ('E00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'E90') THEN 'IV' 
                        WHEN ('F00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'F99') THEN 'V' 
                        WHEN ('G00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'G99') THEN 'VI' 
                        WHEN ('H00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'H59') THEN 'VII' 
                        WHEN ('H60' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'H95') THEN 'VIII' 
                        WHEN ('I00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'I99') THEN 'IX' 
                        WHEN ('J00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'J99') THEN 'X' 
                        WHEN ('K00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'K95') THEN 'XI' 
                        WHEN ('L00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'L99') THEN 'XII' 
                        WHEN ('M00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'M99') THEN 'XIII' 
                        WHEN ('N00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'N99') THEN 'XIV' 
                        WHEN ('O00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'O9A') THEN 'XV' 
                        WHEN ('P00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'P96') THEN 'XVI' 
                        WHEN ('Q00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'Q99') THEN 'XVII' 
                        WHEN ('R00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'R99') THEN 'XVIII' 
                        WHEN ('S00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'T98') THEN 'XIX' 
                        WHEN ('V00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'Y99') THEN 'XX'
                        WHEN ('Z00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'Z99') THEN 'XXI' ELSE 'Ignorado' END) AS "Capítulo CID" 
                      ,(
                      CASE 
                        WHEN ('A00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'B99') THEN 'Algumas doenças infecciosas e parasitárias' 
                        WHEN ('C00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'D49') THEN 'Neoplasias [Tumores]' 
                        WHEN ('D50' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'D89') THEN 'Doenças do sangue e dos órgãos hematopoiéticos e alguns transtornos imunitários' 
                        WHEN ('E00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'E90') THEN 'Doenças endócrinas, nutricionais e metabólicas' 
                        WHEN ('F00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'F99') THEN 'Transtornos mentais e comportamentais' 
                        WHEN ('G00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'G99') THEN 'Doenças do sistema nervoso' 
                        WHEN ('H00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'H59') THEN 'Doenças do olho e anexos' 
                        WHEN ('H60' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'H95') THEN 'Doenças do ouvido e da apófise mastóide' 
                        WHEN ('I00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'I99') THEN 'Doenças do aparelho circulatório' 
                        WHEN ('J00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'J99') THEN 'Doenças do aparelho respiratório' 
                        WHEN ('K00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'K95') THEN 'Doenças do aparelho digestivo' 
                        WHEN ('L00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'L99') THEN 'Doenças da pele e do tecido celular subcutâneo' 
                        WHEN ('M00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'M99') THEN 'Doenças do sistema osteomuscular e do tecido conjuntivo' 
                        WHEN ('N00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'N99') THEN 'Doenças do aparelho geniturinário' 
                        WHEN ('O00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'O9A') THEN 'Gravidez, parto e puerpério' 
                        WHEN ('P00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'P96') THEN 'Algumas afecções originadas no período perinatal' 
                        WHEN ('Q00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'Q99') THEN 'Malformações congênitas, deformidades e anomalias cromossômicas' 
                        WHEN ('R00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'R99') THEN 'Sintomas, sinais e achados anormais de exames clínicos e de laboratório, não classificados em outra parte' 
                        WHEN ('S00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'T98') THEN 'Lesões, envenenamentos e algumas outras consequências de causas externas' 
                        WHEN ('V00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'Y99') THEN 'Causas externas de morbidade e de mortalidade'
                        WHEN ('Z00' <= SUBSTR(ICD10,1,3) AND SUBSTR(ICD10,1,3) <= 'Z99') THEN 'Fatores que influenciam o estado de saúde e o contato com os serviços de saúde' 
                        ELSE 'Diagnóstico não especificado ou inválido' END) AS "Descrição" 
                      FROM  (  
                              SELECT 
                                  PATIENT_ID
                                , UPPER(ICD10) AS ICD10
                              FROM 
                                FILTER_DIAGNOSIS_ENROLLMENT 
                              WHERE 
                                REGEXP_LIKE(ICD10,'^[a-tA-Tv-zV-Z][0-9][a-zA-Z0-9](\.[a-zA-Z0-9]{0,4})?$')
                            )
            ) GROUP BY "ORDEM", "Capítulo CID", "Descrição"
        UNION
            SELECT 
                  24
                , 'Ignorado'
                , 'Diagnóstico não especificado ou inválido'
                , (select count(*)        FROM FILTER_DIAGNOSIS_ENROLLMENT WHERE NOT REGEXP_LIKE(ICD10,'^[a-tA-Tv-zV-Z][0-9][a-zA-Z0-9](\.[a-zA-Z0-9]{0,4})?$'))
                , TRUNC((select count(*)  FROM FILTER_DIAGNOSIS_ENROLLMENT WHERE NOT REGEXP_LIKE(ICD10,'^[a-tA-Tv-zV-Z][0-9][a-zA-Z0-9](\.[a-zA-Z0-9]{0,4})?$'))*100/(select count(*) FROM FILTER_DIAGNOSIS_ENROLLMENT),2)
            FROM dual
        UNION
            SELECT 
                  25
                , 'TOTAL'
                , 'Total dos diagnósticos'
                , (select count(*) FROM FILTER_DIAGNOSIS_ENROLLMENT)
                , 100 
            FROM dual
        )
)   ORDER BY "ORDEM";

-- **********************************************
CREATE OR REPLACE VIEW INDICATOR_ICD10_CONFORMITY as
(
select 
   (
    SELECT 
      COUNT (*) 
    FROM FILTER_DIAGNOSIS_ENROLLMENT) AS "DIAGNOSIS_TOTAL"
 , (
    SELECT 
      COUNT (distinct (PATIENT_ID)) 
    FROM FILTER_DIAGNOSIS_ENROLLMENT) AS "DIAGNOSTICATED_PATIENTS"
 ,  (
    SELECT 
        count(*) AS QTY
    FROM 
      FILTER_DIAGNOSIS_ENROLLMENT 
    WHERE 
      REGEXP_LIKE(ICD10,'^[a-tA-Tv-zV-Z][0-9][a-zA-Z0-9](\.[a-zA-Z0-9]{0,4})?$')
   ) AS "ICD10_COMPLAINT"
 , (
    SELECT 
        count(distinct PATIENT_ID) AS QTY
    FROM 
      FILTER_DIAGNOSIS_ENROLLMENT 
    WHERE 
      REGEXP_LIKE(ICD10,'^[a-tA-Tv-zV-Z][0-9][a-zA-Z0-9](\.[a-zA-Z0-9]{0,4})?$')
   ) AS "PATIENTS_WITH_ICD10_DIAG"
 , (
    SELECT 
        count(*) AS QTY
    FROM 
      FILTER_DIAGNOSIS_ENROLLMENT 
    WHERE 
      NOT REGEXP_LIKE(ICD10,'^[a-tA-Tv-zV-Z][0-9][a-zA-Z0-9](\.[a-zA-Z0-9]{0,4})?$')
   ) AS "ICD10_NOT_COMPLAINT"
 from dual
 );

-- **********************************************
CREATE OR REPLACE VIEW INDICATOR_ICD10_CONFORMITY_PT as
(
select 
   (
    SELECT 
      COUNT (*) 
    FROM FILTER_DIAGNOSIS_ENROLLMENT) AS "Total de Diagnósticos"
 , (
    SELECT 
      COUNT (distinct (PATIENT_ID)) 
    FROM FILTER_DIAGNOSIS_ENROLLMENT) AS "Pacientes com diagnóstico"
 ,  (
    SELECT 
        count(*) AS QTY
    FROM 
      FILTER_DIAGNOSIS_ENROLLMENT 
    WHERE 
      REGEXP_LIKE(ICD10,'^[a-tA-Tv-zV-Z][0-9][a-zA-Z0-9](\.[a-zA-Z0-9]{0,4})?$')
   ) AS "Diagnósticos CID10"
 , (
    SELECT 
        count(distinct PATIENT_ID) AS QTY
    FROM 
      FILTER_DIAGNOSIS_ENROLLMENT 
    WHERE 
      REGEXP_LIKE(ICD10,'^[a-tA-Tv-zV-Z][0-9][a-zA-Z0-9](\.[a-zA-Z0-9]{0,4})?$')
 ) AS "Pacientes com diag. CID10"
 , (
    SELECT 
        count(*) AS QTY
    FROM 
      FILTER_DIAGNOSIS_ENROLLMENT 
    WHERE 
      NOT REGEXP_LIKE(ICD10,'^[a-tA-Tv-zV-Z][0-9][a-zA-Z0-9](\.[a-zA-Z0-9]{0,4})?$')
 ) AS "Outras codificações"
 FROM 
  DUAL
 );

-- **********************************************
CREATE OR REPLACE VIEW INDICATOR_SURGERY AS
(
  SELECT 
      MAX(LOCAL_VOCABULARY_CODE) AS LOCAL_VOCABULARY_CODE
    , DESCRIPTION
    , SUM(SURGERIES_QUANTITY) AS SURGERIES_QUANTITY 
  FROM 
    (
      SELECT 
          SURGICAL_SPECIALITY AS "LOCAL_VOCABULARY_CODE"
        , (
          CASE 
            WHEN SURGICAL_SPECIALITY = 'CCOR' THEN 'Coronary Surgery'
            WHEN SURGICAL_SPECIALITY = 'CCON' THEN 'Congenital Cardiomyopathies'
            WHEN SURGICAL_SPECIALITY = 'CMPA' THEN 'Artificial Cardiac Stimulation'
            WHEN SURGICAL_SPECIALITY = 'CVAL' THEN 'Valvular Cardiopathies'
            WHEN SURGICAL_SPECIALITY = 'CGER' THEN 'General Surgery'
            WHEN SURGICAL_SPECIALITY = 'TNCA' THEN 'Thoracic Surgery'
            WHEN SURGICAL_SPECIALITY = 'CVAS' THEN 'Vascular Surgery'
            WHEN SURGICAL_SPECIALITY = 'CCAG' THEN 'Cardiac Surgery'
--            WHEN SURGICAL_SPECIALITY = 'CSEP' THEN 'SEPACO'
--            WHEN SURGICAL_SPECIALITY = 'COVA' THEN 'Coronary/Valve'
--            WHEN SURGICAL_SPECIALITY = 'CNPQ' THEN 'Neuropsychiatric Surgery'
--            WHEN SURGICAL_SPECIALITY = 'CPLA' THEN 'Plastic Surgery'
--            WHEN SURGICAL_SPECIALITY = 'CURO' THEN 'Urology Surgery'
--            WHEN SURGICAL_SPECIALITY = 'CICP' THEN 'Oral and Maxillofacial Surgery'
--            WHEN SURGICAL_SPECIALITY = 'TGER' THEN 'General Thoracic Surgery'
--            WHEN SURGICAL_SPECIALITY = 'CODO' THEN 'Dental Surgery'
--            WHEN SURGICAL_SPECIALITY = 'COTO' THEN 'Otolaryngologic Surgery'
--            WHEN SURGICAL_SPECIALITY = 'COBS' THEN 'Obstetric Surgery'
--            WHEN SURGICAL_SPECIALITY = 'TRA2' THEN 'Otolaryngologic Surgery more than 12yo'
--            WHEN SURGICAL_SPECIALITY = 'CORT' THEN 'Orthopaedic Surgery'
--            WHEN SURGICAL_SPECIALITY = 'CGIN' THEN 'Obstetrics and Gynecology Surgery'
--            WHEN SURGICAL_SPECIALITY = 'CTX'  THEN 'Transplant'
--            WHEN SURGICAL_SPECIALITY = 'NECI' THEN 'Neurological Surgery'
            ELSE 'OTHERS' END
            )                   AS "DESCRIPTION"
        , count(*)              AS "SURGERIES_QUANTITY"

      FROM 
        FILTER_SURGERY_ENROLLMENT

      GROUP BY 
          SURGICAL_SPECIALITY
    )
  GROUP BY 
    DESCRIPTION 
)
ORDER BY 
  SURGERIES_QUANTITY 
DESC
;
-- **********************************************
  CREATE OR REPLACE VIEW INDICATOR_SURGERY_PT AS
  (
  SELECT 
      A.SURGICAL_SPECIALITY AS "Código especialidade cirúrgica"
    , B.ESME_DS AS "Descrição"
    , count(*) AS "Quantidade de Cirurgias"

  FROM 
    FILTER_SURGERY_ENROLLMENT A
  INNER JOIN 
    RAW_THS_BAS_ESPE_MEDICA B
  ON 
    A.SURGICAL_SPECIALITY = B.ESME_CD

  GROUP BY 
      A.SURGICAL_SPECIALITY
    , B.ESME_DS 
  )
ORDER BY 
    "Quantidade de Cirurgias" DESC
 ;

--------------------------------------------------------
--
--
--
--
--  CREATE PAUA VIEWS 
--
--
--
--------------------------------------------------------
--
--  CREATE CLEAN VIEWS
--
--------------------------------------------------------
CREATE MATERIALIZED VIEW CLEAN_PATIENT AS 
(
  SELECT 
      PATIENT_ID
  FROM 
    VALID_PATIENT
  MINUS
    SELECT PATIENT_ID FROM DETECT_PATIENT_DUPLICATES
);

CREATE UNIQUE INDEX CLEANPAT ON CLEAN_PATIENT (PATIENT_ID) /* tablespace index placeholder */ ;

COMMIT;

-- **********************************************
CREATE MATERIALIZED VIEW CLEAN_DIAGNOSIS AS 
(
  SELECT 
      PATIENT_ID
    , DIAGNOSIS_ID 
  FROM 
    FILTER_DIAGNOSIS_ENROLLMENT
  WHERE
    (PATIENT_ID,DIAGNOSIS_ID) NOT IN (SELECT PATIENT_ID,DIAGNOSIS_ID FROM DETECT_INVALID_ICD10_RELAX)
);

CREATE UNIQUE INDEX CLEANDIAG ON CLEAN_DIAGNOSIS (PATIENT_ID,DIAGNOSIS_ID) /* tablespace index placeholder */ ;

COMMIT;

-- **********************************************
CREATE OR REPLACE VIEW CLEAN_LABORATORY AS 
(
  SELECT 
      PATIENT_ID
    , LAB_TEST_ID
    , LAB_TEST_CODE
  FROM 
    FILTER_LABORATORY_ENROLLMENT
  MINUS
  SELECT
      PATIENT_ID
    , LAB_TEST_ID
    , LAB_TEST_CODE
  FROM
    DETECT_INVALID_LABNUM_RESULT    
);


COMMIT;

--------------------------------------------------------
--
--  CREATE PAUA BASE
--
--------------------------------------------------------

CREATE MATERIALIZED VIEW BP_DIAGNOSIS AS 
(
  SELECT A.* 
  FROM 
    FILTER_DIAGNOSIS_ENROLLMENT A
  INNER JOIN
    CLEAN_DIAGNOSIS B
  ON
        A.PATIENT_ID    = B.PATIENT_ID
    AND A.DIAGNOSIS_ID  = B.DIAGNOSIS_ID
  WHERE
    A.PATIENT_ID IN (SELECT DISTINCT PATIENT_ID FROM CLEAN_PATIENT)
);

CREATE UNIQUE INDEX BPPATDIAG ON BP_DIAGNOSIS (PATIENT_ID,DIAGNOSIS_ID) /* tablespace index placeholder */ ;
CREATE INDEX BPDPAT ON BP_DIAGNOSIS (PATIENT_ID) /* tablespace index placeholder */ ;
CREATE INDEX BPICD10 ON BP_DIAGNOSIS (ICD10) /* tablespace index placeholder */ ;
CREATE INDEX BPICD10FC ON BP_DIAGNOSIS (SUBSTR(ICD10,1,3)) /* tablespace index placeholder */ ;
CREATE INDEX BPICD10SC ON BP_DIAGNOSIS (SUBSTR(ICD10,1,5)) /* tablespace index placeholder */ ;
CREATE INDEX BPICD10EL ON BP_DIAGNOSIS (SUBSTR(ICD10,1,7)) /* tablespace index placeholder */ ;
CREATE INDEX BPICD10EX ON BP_DIAGNOSIS (SUBSTR(ICD10,1,8)) /* tablespace index placeholder */ ;

COMMIT;

-- **********************************************
CREATE MATERIALIZED VIEW BP_PATIENT AS 
(
  SELECT A.*
  FROM 
    FILTER_PATIENT_ENROLLMENT A
  INNER JOIN
    CLEAN_PATIENT B
  ON
    A.PATIENT_ID = B.PATIENT_ID
  WHERE
    A.PATIENT_ID IN (SELECT DISTINCT(PATIENT_ID) FROM CLEAN_DIAGNOSIS)
);

CREATE UNIQUE INDEX BPPAT ON BP_PATIENT (PATIENT_ID) /* tablespace index placeholder */ ;

COMMIT;

-- **********************************************
CREATE MATERIALIZED VIEW BP_LABORATORY AS 
(
  SELECT A.* 
  FROM 
    FILTER_LABORATORY_ENROLLMENT A
  INNER JOIN
    CLEAN_LABORATORY B
  ON
        A.PATIENT_ID    = B.PATIENT_ID
    AND A.LAB_TEST_ID   = B.LAB_TEST_ID
    AND A.LAB_TEST_CODE = B.LAB_TEST_CODE
  WHERE
    A.PATIENT_ID IN (SELECT PATIENT_ID FROM BP_PATIENT)
);

CREATE UNIQUE INDEX BPLABPATLAB ON BP_LABORATORY (PATIENT_ID,LAB_TEST_ID,LAB_TEST_CODE) /* tablespace index placeholder */ ;
CREATE INDEX BPLABPAT ON BP_LABORATORY (PATIENT_ID) /* tablespace index placeholder */ ;

COMMIT;

-- **********************************************
CREATE MATERIALIZED VIEW BP_PCI AS 
(
  SELECT A.*
  FROM 
    FILTER_PCI_ENROLLMENT A
  INNER JOIN
    CLEAN_PATIENT B
  ON
    A.PATIENT_ID = B.PATIENT_ID
);

CREATE INDEX BPPCIPAT ON BP_PCI (PATIENT_ID) /* tablespace index placeholder */ ;

COMMIT;
-- ******************************************************
CREATE MATERIALIZED VIEW BP_SURGERY AS
(
  SELECT  
    *
  FROM
    FILTER_SURGERY_ENROLLMENT FSE
);

CREATE INDEX BPS_PATIENT_ID ON BP_SURGERY (PATIENT_ID) /* tablespace index placeholder */ ;

-- ******************************************************
CREATE MATERIALIZED VIEW BP_FIRST_OUTPATIENT_ENCOUNTER AS
(
  SELECT  
    *
  FROM
    FILTER_FSTOUTPTENC_ENROLLMENT FFE
);

CREATE INDEX BPFOE_PATIENT_ID ON BP_FIRST_OUTPATIENT_ENCOUNTER (PATIENT_ID) /* tablespace index placeholder */ ;

-- ******************************************************
CREATE MATERIALIZED VIEW BP_HEART_RISK_FACTOR AS
(
  SELECT  
    *
  FROM
    FILTER_HEARTRISKF_ENROLLMENT FHRFE
);

CREATE INDEX BPHRFE_PATIENT_ID ON BP_HEART_RISK_FACTOR (PATIENT_ID) /* tablespace index placeholder */ ;

-- ******************************************************
CREATE MATERIALIZED VIEW BP_DEATH AS
(
  SELECT  
    *
  FROM
    VALID_DEATH VD
);

CREATE INDEX BPD_PATID ON BP_DEATH (PATIENT_ID) /* tablespace index placeholder */ ;

-- ******************************************************
CREATE MATERIALIZED VIEW BP_DRUGS AS
(
  SELECT  
    *
  FROM
    FILTER_DRUGS_ENROLLMENT
);

CREATE INDEX BPDR_PATID ON BP_DRUGS (PATIENT_ID) /* tablespace index placeholder */ ;

--------------------------------------------------------
--
--  PAUA INDICATORS
--
--------------------------------------------------------
-- Separar os pacientes por ano de cadastro
-- **********************************************

CREATE MATERIALIZED VIEW INDICATOR_PAT_WITH_DIAG AS
(
   SELECT 
      DISTINCT  A.PATIENT_ID 
   FROM 
      CLEAN_PATIENT A 
   INNER JOIN 
      CLEAN_DIAGNOSIS B
   ON 
      B.PATIENT_ID = A.PATIENT_ID
);

CREATE INDEX IPWOD_PACIID ON INDICATOR_PAT_WITH_DIAG (PATIENT_ID) /* tablespace index placeholder */ ;

COMMIT;

CREATE MATERIALIZED VIEW INDICATOR_PAT_WOUT_DIAG AS
(
   SELECT PATIENT_ID FROM CLEAN_PATIENT
   MINUS
   (
   SELECT 
      DISTINCT  A.PATIENT_ID 
   FROM 
      CLEAN_PATIENT A 
   INNER JOIN 
      CLEAN_DIAGNOSIS B
   ON 
      B.PATIENT_ID = A.PATIENT_ID
      )
);

CREATE INDEX IPWOUTD_PACIID ON INDICATOR_PAT_WOUT_DIAG (PATIENT_ID) /* tablespace index placeholder */ ;

COMMIT;

-- **********************************************

CREATE MATERIALIZED VIEW INDICATOR_PATIENT_MISSING
AS
  (
  SELECT 
      PATIENT_ID
    , NVL(TO_CHAR(EXTRACT (YEAR FROM RECORD_INCLUSION_DATE)),'NULL')        AS INCLUSION_YEAR
    , NVL2(BIRTH_DATE,0,1)                                                  AS BD_NULL
    , (CASE WHEN (BIRTH_DATE > RECORD_MODIFICATION_DATE) THEN 1 ELSE 0 END) AS BD_FUTURE
    , NVL2(PATIENT_NAME,0,1)                                                AS NAME_NULL
    , NVL2(PATIENT_MOTHER_NAME,0,1)                                         AS MOTHER_NAME_NULL
    , (
    CASE
      WHEN 
          PATIENT_ID IN
            (SELECT PATIENT_ID FROM DETECT_PATIENT_DUPLICATES
            )
      THEN 1
      ELSE 0
    END)                                                              AS NAME_DUPLICATE
    , (
    CASE
      WHEN PATIENT_ID IN
        (SELECT PATIENT_ID FROM INDICATOR_PAT_WOUT_DIAG
        )
      THEN 1
      ELSE 0
    END)                                                              AS CID_NULL
  FROM FILTER_PATIENT_ENROLLMENT
  );

COMMIT;

-- **********************************************
  CREATE OR REPLACE VIEW INDICATOR_BASE_QUALITY AS
  (
  SELECT 
      INCLUSION_YEAR            AS  YEAR
    , SUM (BD_NULL)             AS  NO_BIRTH_DATE
    , SUM (BD_FUTURE)           AS  BD_IN_FUTURE
    , SUM (NAME_NULL)           AS  NO_NAME
    , SUM (MOTHER_NAME_NULL)    AS  NO_MOTHER_NAME
    , SUM (NAME_DUPLICATE)      AS  DUPLICATED_NAMES
    , SUM (CID_NULL)            AS  NO_DIAGNOSIS
    , COUNT(PATIENT_ID)         AS  YEAR_TOTAL
    , SUM (
         CASE WHEN (
                  (     BD_NULL
                     +  BD_FUTURE
                     +  NAME_NULL 
                     +  NAME_DUPLICATE 
                     + CID_NULL) = 0
                  ) 
         THEN 0 ELSE 1 END)     AS INVALID_PATIENTS
    , SUM (
         CASE WHEN (
                  (     BD_NULL 
                     +  BD_FUTURE
                     +  NAME_NULL 
                     +  NAME_DUPLICATE 
                     + CID_NULL) = 0
                  ) 
         THEN 1 ELSE 0 END)     AS VALID_PATIENTS


  FROM
    INDICATOR_PATIENT_MISSING
  GROUP BY
    INCLUSION_YEAR
  ) ORDER BY INCLUSION_YEAR;

--------------------------------------------------------
--
--  PATIENT SELECTORS
--
--------------------------------------------------------
-- ******************************************************
CREATE MATERIALIZED VIEW COHORT_SELECTOR_PATIENT_AGE 
AS
(
  SELECT
        PATIENT_ID
      , DEIDENTIFIED_ID
      , GENDER 
      , BIRTH_DATE
      , AGE_AT_STUDY_BEGIN
      , AGE_AT_STUDY_END
  FROM
    (
    SELECT 
        A.* 
      , FLOOR(MONTHS_BETWEEN((SELECT MAX (PARAMETER_VALUE) 
                              FROM CURRENT_RUN_DATE_PARAMS 
                              WHERE 
                                  CRITERIA_ID = 'STUDY_BEGIN' 
                              AND PARAMETER_TYPE = 'INTERVAL_DATE'
                              ), BIRTH_DATE) /12) AS AGE_AT_STUDY_BEGIN
  
      , FLOOR(MONTHS_BETWEEN((SELECT MAX (PARAMETER_VALUE) 
                              FROM CURRENT_RUN_DATE_PARAMS 
                              WHERE 
                                 CRITERIA_ID = 'STUDY_END' 
                              AND PARAMETER_TYPE = 'INTERVAL_DATE'
                              ), BIRTH_DATE) /12) AS AGE_AT_STUDY_END
  
    FROM
      BP_PATIENT A
      ) A_AGE
  WHERE
    (
      (
        -- INCLUDE FILTER (ENABLE)
        (
           'Y' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MIN_AGE' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      AND
        (
          A_AGE.AGE_AT_STUDY_BEGIN > (SELECT MAX (PARAMETER_VALUE) 
          FROM CURRENT_RUN_NUMBER_PARAMS 
          WHERE 
              CRITERIA_ID = 'MIN_AGE' 
          AND PARAMETER_TYPE = 'STUDY_AGE'
          )
        ) 
      OR
        -- EXCLUDE FILTER (DISABLE)
        (
          'N' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MIN_AGE' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      )
      AND
      (
        -- INCLUDE FILTER (ENABLE)
        (
          'Y' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MAX_AGE' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      AND
        (
          A_AGE.AGE_AT_STUDY_END < (SELECT MAX (PARAMETER_VALUE) 
          FROM CURRENT_RUN_NUMBER_PARAMS 
          WHERE 
              CRITERIA_ID = 'MAX_AGE' 
          AND PARAMETER_TYPE = 'STUDY_AGE'
          )
        )
      OR
        -- EXCLUDE FILTER (DISABLE)
        (
          'N' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'MAX_AGE' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      )
    )
);

CREATE INDEX CSPA_PATID ON COHORT_SELECTOR_PATIENT_AGE(PATIENT_ID) /* tablespace index placeholder */ ;

COMMIT;

-- ******************************************************

CREATE MATERIALIZED VIEW COHORT_SELECTOR_PATIENT_GENDER AS
  (
    SELECT 
        PATIENT_ID
      , DEIDENTIFIED_ID 
      , GENDER 
      , BIRTH_DATE
      , AGE_AT_STUDY_BEGIN
      , AGE_AT_STUDY_END
    FROM 
      COHORT_SELECTOR_PATIENT_AGE 
    WHERE
     (
        -- INCLUDE FILTER (ENABLE)
        (
          'Y' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'STUDY_GENDER' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      AND
        (
        -- FILTER SELECTED GENDERS
        GENDER       IN (
                        SELECT PARAMETER_VALUE 
                        FROM CURRENT_RUN_STR_PARAMS 
                        WHERE 
                            CRITERIA_ID = 'STUDY_GENDER' 
                        AND PARAMETER_TYPE = 'GENDER'
                        )
        )
      OR
        -- EXCLUDE FILTER (DISABLE)
      (
            'N' IN (SELECT PARAMETER_VALUE 
            FROM CURRENT_RUN_YESNO_PARAMS 
            WHERE 
              CRITERIA_ID = 'STUDY_GENDER' 
            AND PARAMETER_TYPE = 'FILTER_ENABLING'
            )
      )
    )

  );
/

CREATE INDEX CSPG_PATID ON COHORT_SELECTOR_PATIENT_GENDER(PATIENT_ID) /* tablespace index placeholder */ ;

COMMIT;

-- **********************************************

--------------------------------------------------------
--
--  DIAGNOSIS SELECTORS
--
--------------------------------------------------------
-- ******************************************************

CREATE OR REPLACE VIEW COHORT_SELECTOR_STUDY_INT_LAB AS
(
  SELECT 
      PATIENT_ID
    , LAB_TEST_ID
    , LAB_TEST_CODE
    , LAB_TEST_NAME
    , LAB_TEST_DATE
    , LABTST_RESULT_VALUE
    , LABTST_RESULT_UNIT
    , RESULT_IS_NUMBER
    , RESULT_OUT_OF_RANGE
    , OFF_RANGE_SUP
    , OFF_RANGE_INF

  FROM 
    BP_LABORATORY
  WHERE 
     (
        -- INCLUDE FILTER (ENABLE)
        (
          'Y' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'LAB_TEST_DATE_ON_STUDY_INTERVAL' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      AND
        (
        -- FILTER SELECTED GENDERS
        LAB_TEST_DATE    >=   (SELECT MAX (PARAMETER_VALUE) 
                              FROM CURRENT_RUN_DATE_PARAMS 
                              WHERE 
                                  CRITERIA_ID = 'STUDY_BEGIN' 
                              AND PARAMETER_TYPE = 'INTERVAL_DATE'
                              )
        )
      AND
        (
        -- FILTER SELECTED GENDERS
        LAB_TEST_DATE    <   (SELECT MAX (PARAMETER_VALUE) 
                              FROM CURRENT_RUN_DATE_PARAMS 
                              WHERE 
                                  CRITERIA_ID = 'STUDY_END' 
                              AND PARAMETER_TYPE = 'INTERVAL_DATE'
                              )
        )
      OR
        -- EXCLUDE FILTER (DISABLE)
      (
            'N' IN (SELECT PARAMETER_VALUE 
            FROM CURRENT_RUN_YESNO_PARAMS 
            WHERE 
                CRITERIA_ID = 'LAB_TEST_DATE_ON_STUDY_INTERVAL' 
            AND PARAMETER_TYPE = 'FILTER_ENABLING'
            )
      )
    )
  
 
);

-- CREATE INDEX CSSILPATID  ON COHORT_SELECTOR_STUDY_INT_LAB (PATIENT_ID) /* tablespace index placeholder */ ;
-- ******************************************************

CREATE MATERIALIZED VIEW COHORT_SELECTOR_STUDY_INTERVAL AS
(
  SELECT 
      PATIENT_ID
    , DIAGNOSIS_ID
    , ICD10
    , DIAGNOSIS_DATE
  FROM 
    BP_DIAGNOSIS
  WHERE 
     (
        -- INCLUDE FILTER (ENABLE)
        (
          'Y' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'DIAGNOSIS_DATE_ON_STUDY_INTERVAL' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      AND
        (
        -- FILTER SELECTED GENDERS
        DIAGNOSIS_DATE    >=   (SELECT MAX (PARAMETER_VALUE) 
                              FROM CURRENT_RUN_DATE_PARAMS 
                              WHERE 
                                  CRITERIA_ID = 'STUDY_BEGIN' 
                              AND PARAMETER_TYPE = 'INTERVAL_DATE'
                              )
        )
      AND
        (
        -- FILTER SELECTED GENDERS
        DIAGNOSIS_DATE    <   (SELECT MAX (PARAMETER_VALUE) 
                              FROM CURRENT_RUN_DATE_PARAMS 
                              WHERE 
                                  CRITERIA_ID = 'STUDY_END' 
                              AND PARAMETER_TYPE = 'INTERVAL_DATE'
                              )
        )
      OR
        -- EXCLUDE FILTER (DISABLE)
      (
            'N' IN (SELECT PARAMETER_VALUE 
            FROM CURRENT_RUN_YESNO_PARAMS 
            WHERE 
                CRITERIA_ID = 'DIAGNOSIS_DATE_ON_STUDY_INTERVAL' 
            AND PARAMETER_TYPE = 'FILTER_ENABLING'
            )
      )
    )
  
 
);

CREATE INDEX CSSIIPATID  ON COHORT_SELECTOR_STUDY_INTERVAL (PATIENT_ID) /* tablespace index placeholder */ ;
CREATE INDEX CSSIICD10   ON COHORT_SELECTOR_STUDY_INTERVAL (ICD10) /* tablespace index placeholder */ ;
CREATE INDEX CSSIICD10FC ON COHORT_SELECTOR_STUDY_INTERVAL (SUBSTR(ICD10,1,3)) /* tablespace index placeholder */ ;
CREATE INDEX CSSIICD10SC ON COHORT_SELECTOR_STUDY_INTERVAL (SUBSTR(ICD10,1,5)) /* tablespace index placeholder */ ;
CREATE INDEX CSSIICD10EL ON COHORT_SELECTOR_STUDY_INTERVAL (SUBSTR(ICD10,1,7)) /* tablespace index placeholder */ ;
CREATE INDEX CSSIICD10EX ON COHORT_SELECTOR_STUDY_INTERVAL (SUBSTR(ICD10,1,8)) /* tablespace index placeholder */ ;

COMMIT;

-- ******************************************************
CREATE MATERIALIZED VIEW COHORT_SELECTOR_DIAGNOSIS
AS
(
  SELECT 
        DISTINCT PATIENT_ID
  FROM 
        COHORT_SELECTOR_STUDY_INTERVAL
  WHERE
    (
          (
            'Y' = (SELECT PARAMETER_VALUE 
            FROM CURRENT_RUN_YESNO_PARAMS 
            WHERE 
                CRITERIA_ID = 'DIAGNOSIS_SELECTION' 
            AND PARAMETER_TYPE = 'FILTER_ENABLING'
            )
          )
        AND
        PATIENT_ID IN
          --- INCLUSION DIAGNOSTICS
          (
            SELECT
              PATIENT_ID
            FROM
              COHORT_SELECTOR_STUDY_INTERVAL
            WHERE
              (
              --- PARTIAL CATEGORY (JUST EXACT 3 CHARS CODES)
              TRIM(ICD10) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'DIAGNOSIS_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_CATEGORY_PARTIAL'
                AND INCLUSION_EXCLUSION = 'I'
                )
                OR
              --- FULL CATEGORY (ANY 3 CHARS OR MORE CODES)
              SUBSTR(ICD10,1,3) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'DIAGNOSIS_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_CATEGORY_FULL'
                AND INCLUSION_EXCLUSION = 'I'
                )
                OR
              --- SUBCATEGORY (ONLY 5 CHARS CODES)
              SUBSTR(ICD10,1,5) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'DIAGNOSIS_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_SUBCATEGORY'
                AND INCLUSION_EXCLUSION = 'I'
                )
                OR
              --- ETIOLOGY AND LOCALIZATION (ONLY 7 CHARS CODES)
              SUBSTR(ICD10,1,7) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'DIAGNOSIS_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_ETIOLOGY'
                AND INCLUSION_EXCLUSION = 'I'
                )
                OR
              --- EXTENSION (ONLY 8 CHARS CODES)
               SUBSTR(ICD10,1,8) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'DIAGNOSIS_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_EXTENSION'
                AND INCLUSION_EXCLUSION = 'I'
                )
             )
          )
        AND
        PATIENT_ID NOT IN
          --- EXCLUSION DIAGNOSTICS
        (
            SELECT
              PATIENT_ID
            FROM
              COHORT_SELECTOR_STUDY_INTERVAL
            WHERE
              (
              --- PARTIAL CATEGORY (JUST EXACT 3 CHARS CODES)
              TRIM(ICD10) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'DIAGNOSIS_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_CATEGORY_PARTIAL'
                AND INCLUSION_EXCLUSION = 'E'
                )
                OR
              --- FULL CATEGORY (ANY 3 CHARS OR MORE CODES)
              SUBSTR(ICD10,1,3) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'DIAGNOSIS_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_CATEGORY_FULL'
                AND INCLUSION_EXCLUSION = 'E'
                )
                OR
              --- SUBCATEGORY (ONLY 5 CHARS CODES)
              SUBSTR(ICD10,1,5) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'DIAGNOSIS_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_SUBCATEGORY'
                AND INCLUSION_EXCLUSION = 'E'
                )
                OR
              --- ETIOLOGY AND LOCALIZATION (ONLY 7 CHARS CODES)
              SUBSTR(ICD10,1,7) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'DIAGNOSIS_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_ETIOLOGY'
                AND INCLUSION_EXCLUSION = 'E'
                )
                OR
              --- EXTENSION (ONLY 8 CHARS CODES)
               SUBSTR(ICD10,1,8) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'DIAGNOSIS_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_EXTENSION'
                AND INCLUSION_EXCLUSION = 'E'
                )
             )
         ) 
            
    )
    union 
  SELECT 
        DISTINCT PATIENT_ID
  FROM 
    COHORT_SELECTOR_STUDY_INTERVAL
  WHERE 
    (
          (
            'N' = (SELECT PARAMETER_VALUE 
            FROM CURRENT_RUN_YESNO_PARAMS 
            WHERE 
                CRITERIA_ID = 'DIAGNOSIS_SELECTION' 
            AND PARAMETER_TYPE = 'FILTER_ENABLING'
            )
          )
    )
);

CREATE INDEX CSDPATID  ON COHORT_SELECTOR_DIAGNOSIS (PATIENT_ID) /* tablespace index placeholder */ ;

COMMIT;

-- ******************************************************
-- ******************************************************
CREATE MATERIALIZED VIEW TRANSFORM_INDEX_FSTDIAGNOSIS
AS
(
  SELECT 
          PATIENT_ID
        , DIAGNOSIS_ID
        , ICD10
        , SUBSTR(ICD10,1,3) AS ICD10_CATEGORY
        , DIAGNOSIS_DATE
  FROM 
        COHORT_SELECTOR_STUDY_INTERVAL
  WHERE
    (
          (
            'Y' = (SELECT PARAMETER_VALUE 
            FROM CURRENT_RUN_YESNO_PARAMS 
            WHERE 
                CRITERIA_ID = 'DIAGNOSIS_SELECTION' 
            AND PARAMETER_TYPE = 'FILTER_ENABLING'
            )
          )
        AND
        (PATIENT_ID,DIAGNOSIS_ID) IN
          --- INCLUSION DIAGNOSTICS
          (
            SELECT
                PATIENT_ID
              , MIN(DIAGNOSIS_ID)
            FROM
              COHORT_SELECTOR_STUDY_INTERVAL
            WHERE
              (
              --- PARTIAL CATEGORY (JUST EXACT 3 CHARS CODES)
              TRIM(ICD10) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'DIAGNOSIS_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_CATEGORY_PARTIAL'
                AND INCLUSION_EXCLUSION = 'I'
                )
                OR
              --- FULL CATEGORY (ANY 3 CHARS OR MORE CODES)
              SUBSTR(ICD10,1,3) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'DIAGNOSIS_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_CATEGORY_FULL'
                AND INCLUSION_EXCLUSION = 'I'
                )
                OR
              --- SUBCATEGORY (ONLY 5 CHARS CODES)
              SUBSTR(ICD10,1,5) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'DIAGNOSIS_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_SUBCATEGORY'
                AND INCLUSION_EXCLUSION = 'I'
                )
                OR
              --- ETIOLOGY AND LOCALIZATION (ONLY 7 CHARS CODES)
              SUBSTR(ICD10,1,7) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'DIAGNOSIS_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_ETIOLOGY'
                AND INCLUSION_EXCLUSION = 'I'
                )
                OR
              --- EXTENSION (ONLY 8 CHARS CODES)
               SUBSTR(ICD10,1,8) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'DIAGNOSIS_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_EXTENSION'
                AND INCLUSION_EXCLUSION = 'I'
                )
             )
            GROUP BY PATIENT_ID
          )
        AND
        (PATIENT_ID,DIAGNOSIS_ID) NOT IN
          --- EXCLUSION DIAGNOSTICS
        (
            SELECT
                PATIENT_ID
              , MIN(DIAGNOSIS_ID)
            FROM
              COHORT_SELECTOR_STUDY_INTERVAL
            WHERE
              (
              --- PARTIAL CATEGORY (JUST EXACT 3 CHARS CODES)
              TRIM(ICD10) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'DIAGNOSIS_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_CATEGORY_PARTIAL'
                AND INCLUSION_EXCLUSION = 'E'
                )
                OR
              --- FULL CATEGORY (ANY 3 CHARS OR MORE CODES)
              SUBSTR(ICD10,1,3) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'DIAGNOSIS_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_CATEGORY_FULL'
                AND INCLUSION_EXCLUSION = 'E'
                )
                OR
              --- SUBCATEGORY (ONLY 5 CHARS CODES)
              SUBSTR(ICD10,1,5) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'DIAGNOSIS_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_SUBCATEGORY'
                AND INCLUSION_EXCLUSION = 'E'
                )
                OR
              --- ETIOLOGY AND LOCALIZATION (ONLY 7 CHARS CODES)
              SUBSTR(ICD10,1,7) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'DIAGNOSIS_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_ETIOLOGY'
                AND INCLUSION_EXCLUSION = 'E'
                )
                OR
              --- EXTENSION (ONLY 8 CHARS CODES)
               SUBSTR(ICD10,1,8) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'DIAGNOSIS_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_EXTENSION'
                AND INCLUSION_EXCLUSION = 'E'
                )
             )
              GROUP BY PATIENT_ID
         ) 
            
    )
    UNION 
    SELECT 
            A.PATIENT_ID        AS PATIENT_ID
          , A.DIAGNOSIS_ID      AS DIAGNOSIS_ID
          , A.ICD10             AS ICD10
          , SUBSTR(A.ICD10,1,3) AS ICD10_CATEGORY
          , A.DIAGNOSIS_DATE    AS DIAGNOSIS_DATE
    FROM 
      COHORT_SELECTOR_STUDY_INTERVAL  A
    INNER JOIN 
      (
        SELECT 
                PATIENT_ID
              , MIN(DIAGNOSIS_ID) AS DIAGNOSIS_ID
        FROM 
          COHORT_SELECTOR_STUDY_INTERVAL
        GROUP BY 
          PATIENT_ID
      ) B
    ON 
          A.PATIENT_ID = B.PATIENT_ID 
      AND A.DIAGNOSIS_ID = B.DIAGNOSIS_ID
    WHERE 
      (
            (
              'N' = (SELECT PARAMETER_VALUE 
              FROM CURRENT_RUN_YESNO_PARAMS 
              WHERE 
                  CRITERIA_ID = 'DIAGNOSIS_SELECTION' 
              AND PARAMETER_TYPE = 'FILTER_ENABLING'
              )
            )
      )
);

CREATE INDEX TIFPATID  ON TRANSFORM_INDEX_FSTDIAGNOSIS (PATIENT_ID) /* tablespace index placeholder */ ;

COMMIT;

-- ******************************************************
CREATE MATERIALIZED VIEW OUTCOME_SELECTOR_DIAGNOSIS
AS
(
  SELECT 
          PATIENT_ID
        , DIAGNOSIS_ID
        , ICD10
        , DIAGNOSIS_DATE
  FROM 
        COHORT_SELECTOR_STUDY_INTERVAL
  WHERE
    (
          (
            'Y' = (SELECT PARAMETER_VALUE 
            FROM CURRENT_RUN_YESNO_PARAMS 
            WHERE 
                CRITERIA_ID = 'OUTCOME_SELECTION' 
            AND PARAMETER_TYPE = 'FILTER_ENABLING'
            )
          )
        AND
        PATIENT_ID IN
          --- INCLUSION DIAGNOSTICS
          (
            SELECT
              PATIENT_ID
            FROM
              COHORT_SELECTOR_STUDY_INTERVAL
            WHERE
              (
              --- PARTIAL CATEGORY (JUST EXACT 3 CHARS CODES)
              TRIM(ICD10) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'OUTCOME_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_CATEGORY_PARTIAL'
                AND INCLUSION_EXCLUSION = 'I'
                )
                OR
              --- FULL CATEGORY (ANY 3 CHARS OR MORE CODES)
              SUBSTR(ICD10,1,3) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'OUTCOME_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_CATEGORY_FULL'
                AND INCLUSION_EXCLUSION = 'I'
                )
                OR
              --- SUBCATEGORY (ONLY 5 CHARS CODES)
              SUBSTR(ICD10,1,5) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'OUTCOME_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_SUBCATEGORY'
                AND INCLUSION_EXCLUSION = 'I'
                )
                OR
              --- ETIOLOGY AND LOCALIZATION (ONLY 7 CHARS CODES)
              SUBSTR(ICD10,1,7) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'OUTCOME_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_ETIOLOGY'
                AND INCLUSION_EXCLUSION = 'I'
                )
                OR
              --- EXTENSION (ONLY 8 CHARS CODES)
               SUBSTR(ICD10,1,8) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'OUTCOME_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_EXTENSION'
                AND INCLUSION_EXCLUSION = 'I'
                )
             )
          )
        AND
        PATIENT_ID NOT IN
          --- EXCLUSION DIAGNOSTICS
        (
            SELECT
              PATIENT_ID
            FROM
              COHORT_SELECTOR_STUDY_INTERVAL
            WHERE
              (
              --- PARTIAL CATEGORY (JUST EXACT 3 CHARS CODES)
              TRIM(ICD10) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'OUTCOME_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_CATEGORY_PARTIAL'
                AND INCLUSION_EXCLUSION = 'E'
                )
                OR
              --- FULL CATEGORY (ANY 3 CHARS OR MORE CODES)
              SUBSTR(ICD10,1,3) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'OUTCOME_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_CATEGORY_FULL'
                AND INCLUSION_EXCLUSION = 'E'
                )
                OR
              --- SUBCATEGORY (ONLY 5 CHARS CODES)
              SUBSTR(ICD10,1,5) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'OUTCOME_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_SUBCATEGORY'
                AND INCLUSION_EXCLUSION = 'E'
                )
                OR
              --- ETIOLOGY AND LOCALIZATION (ONLY 7 CHARS CODES)
              SUBSTR(ICD10,1,7) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'OUTCOME_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_ETIOLOGY'
                AND INCLUSION_EXCLUSION = 'E'
                )
                OR
              --- EXTENSION (ONLY 8 CHARS CODES)
               SUBSTR(ICD10,1,8) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'OUTCOME_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_EXTENSION'
                AND INCLUSION_EXCLUSION = 'E'
                )
             )
         ) 
            
    )
    union 
  SELECT 
          PATIENT_ID
        , DIAGNOSIS_ID
        , ICD10
        , DIAGNOSIS_DATE
  FROM 
    COHORT_SELECTOR_STUDY_INTERVAL
  WHERE 
    (
          (
            'N' = (SELECT PARAMETER_VALUE 
            FROM CURRENT_RUN_YESNO_PARAMS 
            WHERE 
                CRITERIA_ID = 'OUTCOME_SELECTION' 
            AND PARAMETER_TYPE = 'FILTER_ENABLING'
            )
          )
    )
);

CREATE INDEX OSDPATID  ON OUTCOME_SELECTOR_DIAGNOSIS (PATIENT_ID) /* tablespace index placeholder */ ;

COMMIT;
-- ******************************************************
/*
CREATE MATERIALIZED VIEW COHORT_SELECTOR_SURGERY_DIAG
AS
(
  SELECT 
        *
  FROM 
        BP_SURGERY
  WHERE
    (
          (
            'Y' = (SELECT PARAMETER_VALUE 
            FROM CURRENT_RUN_YESNO_PARAMS 
            WHERE 
                CRITERIA_ID = 'SURGERY_DIAG_SELECTION' 
            AND PARAMETER_TYPE = 'FILTER_ENABLING'
            )
          )
        AND
        PATIENT_ID IN
          --- INCLUSION DIAGNOSTICS
          (
            SELECT
              PATIENT_ID
            FROM
              BP_SURGERY
            WHERE
              (
              --- PARTIAL CATEGORY (JUST EXACT 3 CHARS CODES)
              TRIM(ICD10) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'SURGERY_DIAG_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_CATEGORY_PARTIAL'
                AND INCLUSION_EXCLUSION = 'I'
                )
                OR
              --- FULL CATEGORY (ANY 3 CHARS OR MORE CODES)
              SUBSTR(ICD10,1,3) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'SURGERY_DIAG_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_CATEGORY_FULL'
                AND INCLUSION_EXCLUSION = 'I'
                )
                OR
              --- SUBCATEGORY (ONLY 5 CHARS CODES)
              SUBSTR(ICD10,1,5) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'SURGERY_DIAG_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_SUBCATEGORY'
                AND INCLUSION_EXCLUSION = 'I'
                )
                OR
              --- ETIOLOGY AND LOCALIZATION (ONLY 7 CHARS CODES)
              SUBSTR(ICD10,1,7) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'SURGERY_DIAG_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_ETIOLOGY'
                AND INCLUSION_EXCLUSION = 'I'
                )
                OR
              --- EXTENSION (ONLY 8 CHARS CODES)
               SUBSTR(ICD10,1,8) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'SURGERY_DIAG_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_EXTENSION'
                AND INCLUSION_EXCLUSION = 'I'
                )
             )
          )
        AND
        PATIENT_ID NOT IN
          --- EXCLUSION DIAGNOSTICS
        (
            SELECT
              PATIENT_ID
            FROM
              BP_SURGERY
            WHERE
              (
              --- PARTIAL CATEGORY (JUST EXACT 3 CHARS CODES)
              TRIM(ICD10) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'SURGERY_DIAG_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_CATEGORY_PARTIAL'
                AND INCLUSION_EXCLUSION = 'E'
                )
                OR
              --- FULL CATEGORY (ANY 3 CHARS OR MORE CODES)
              SUBSTR(ICD10,1,3) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'SURGERY_DIAG_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_CATEGORY_FULL'
                AND INCLUSION_EXCLUSION = 'E'
                )
                OR
              --- SUBCATEGORY (ONLY 5 CHARS CODES)
              SUBSTR(ICD10,1,5) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'SURGERY_DIAG_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_SUBCATEGORY'
                AND INCLUSION_EXCLUSION = 'E'
                )
                OR
              --- ETIOLOGY AND LOCALIZATION (ONLY 7 CHARS CODES)
              SUBSTR(ICD10,1,7) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'SURGERY_DIAG_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_ETIOLOGY'
                AND INCLUSION_EXCLUSION = 'E'
                )
                OR
              --- EXTENSION (ONLY 8 CHARS CODES)
               SUBSTR(ICD10,1,8) IN (SELECT PARAMETER_VALUE 
                FROM CURRENT_RUN_STR_PARAMS 
                WHERE 
                    CRITERIA_ID = 'SURGERY_DIAG_SELECTION' 
                AND PARAMETER_TYPE = 'ICD10_EXTENSION'
                AND INCLUSION_EXCLUSION = 'E'
                )
             )
         ) 
            
    )

  UNION 

  SELECT *
  FROM 
    BP_SURGERY
  WHERE 
    (
          (
            'N' = (SELECT PARAMETER_VALUE 
            FROM CURRENT_RUN_YESNO_PARAMS 
            WHERE 
                CRITERIA_ID = 'SURGERY_DIAG_SELECTION' 
            AND PARAMETER_TYPE = 'FILTER_ENABLING'
            )
          )
    )
);

CREATE INDEX CSSSBDPATID  ON COHORT_SELECTOR_SURGERY_DIAG (PATIENT_ID) /* tablespace index placeholder */ ;

COMMIT;
*/
--------------------------------------------------------
--
--  CREATE TRANSFORM VIEWS
--
--------------------------------------------------------

-- ******************************************************
CREATE OR REPLACE VIEW TRANSFORM_TRANSPOSE_PCI 
      AS 
      (
        SELECT 
                                                              D.PATIENT_ID
          , MAX(CASE WHEN SEQ = 1 THEN PCI_DATE END)          PCI_DATE1
          , MAX(CASE WHEN SEQ = 1 THEN PROCED_ID END)         PROCED1

          , MAX(CASE WHEN SEQ = 2 THEN PCI_DATE END)          PCI_DATE2
          , MAX(CASE WHEN SEQ = 2 THEN PROCED_ID END)         PROCED2

          , MAX(CASE WHEN SEQ = 3 THEN PCI_DATE END)          PCI_DATE3
          , MAX(CASE WHEN SEQ = 3 THEN PROCED_ID END)         PROCED3

          , MAX(CASE WHEN SEQ = 4 THEN PCI_DATE END)          PCI_DATE4
          , MAX(CASE WHEN SEQ = 4 THEN PROCED_ID END)         PROCED4

          , MAX(CASE WHEN SEQ = 5 THEN PCI_DATE END)          PCI_DATE5
          , MAX(CASE WHEN SEQ = 5 THEN PROCED_ID END)         PROCED5

        FROM
          (
            SELECT 
                                                                                      PATIENT_ID
              ,                                                                       PCI_DATE
              ,                                                                       PROCED_ID
              , ROW_NUMBER() OVER(PARTITION BY PATIENT_ID ORDER BY PCI_DATE)          SEQ
            FROM 
              BP_PCI
          ) D
      GROUP BY PATIENT_ID, D.PATIENT_ID
      );
/
-- CREATE INDEX SAT_PATIENT_ID ON STUDY_PCI_TRANSPOSED (PATIENT_ID) /* tablespace index placeholder */ ;

-- ******************************************************
CREATE MATERIALIZED VIEW TRANSFORM_AGEATEVENT_LABTEST AS
(
  SELECT
                                                        A.PATIENT_ID
    , B.DEIDENTIFIED_ID                              AS DEIDENTIFIED_ID
    ,                                                   A.LAB_TEST_ID
    ,                                                   A.LAB_TEST_CODE
    ,                                                   A.LAB_TEST_NAME
    , FLOOR(A.LAB_TEST_DATE - B.BIRTH_DATE)          AS AGE_AT_LAB_TEST
    ,                                                   A.LABTST_RESULT_VALUE
    ,                                                   A.LABTST_RESULT_UNIT
    ,                                                   A.RESULT_IS_NUMBER
    ,                                                   A.RESULT_OUT_OF_RANGE
    ,                                                   A.OFF_RANGE_SUP
    ,                                                   A.OFF_RANGE_INF
  FROM
    COHORT_SELECTOR_STUDY_INT_LAB A
  INNER JOIN
    BP_PATIENT B
  ON
    A.PATIENT_ID = B.PATIENT_ID
);

-- ******************************************************
CREATE MATERIALIZED VIEW TRANSFORM_SELECT_NUM_LABTST AS
(
SELECT 
          PATIENT_ID
        , DEIDENTIFIED_ID
        , LAB_TEST_ID
        , LAB_TEST_CODE
        , AGE_AT_LAB_TEST
        , LAB_TEST_NAME
        , CASE 
              WHEN RESULT_IS_NUMBER = 1 AND RESULT_OUT_OF_RANGE = 0 
                THEN TO_NUMBER(REPLACE(LABTST_RESULT_VALUE,',','.'))
              WHEN RESULT_IS_NUMBER = 1 AND OFF_RANGE_SUP = 1 
                THEN 99999
              WHEN RESULT_IS_NUMBER = 1 AND OFF_RANGE_INF = 1
                THEN 0
              END
              AS LABTST_RESULT_VALUE
        , LABTST_RESULT_UNIT
        , RESULT_IS_NUMBER
        , RESULT_OUT_OF_RANGE
        , OFF_RANGE_SUP
        , OFF_RANGE_INF
        
FROM
  TRANSFORM_AGEATEVENT_LABTEST

);

CREATE INDEX TSNL_PATIENT_ID ON TRANSFORM_SELECT_NUM_LABTST (PATIENT_ID) /* tablespace index placeholder */ ;
CREATE INDEX TSNL_PATLABIDCOD ON TRANSFORM_SELECT_NUM_LABTST (PATIENT_ID,LAB_TEST_ID,LAB_TEST_CODE) /* tablespace index placeholder */ ;
CREATE INDEX TSNL_PATLABNAMCOD ON TRANSFORM_SELECT_NUM_LABTST (PATIENT_ID,LAB_TEST_NAME,LAB_TEST_CODE) /* tablespace index placeholder */ ;

-- ******************************************************
CREATE OR REPLACE VIEW TRANSFORM_FIRST_DIAGNOSIS AS
(
  SELECT 
    BPD.*
  FROM
    BP_DIAGNOSIS BPD
  INNER JOIN
    TRANSFORM_INDEX_FSTDIAGNOSIS TIF
  ON
        BPD.PATIENT_ID    = TIF.PATIENT_ID
    AND BPD.DIAGNOSIS_ID  = TIF.DIAGNOSIS_ID
);

-- ******************************************************
CREATE OR REPLACE VIEW TRANSFORM_FIRSTLAST_SURGERY 
AS 
(
  SELECT 
          A.PATIENT_ID
        , MAX(A.ICD10)                 AS ICD10_FIRST_SURGERY
        , MAX(B.FIRST_SURGERY_DATE)    AS FIRST_SURGERY_DATE
        , MAX(C.ICD10)                 AS ICD10_LAST_SURGERY
        , MAX(B.LAST_SURGERY_DATE)     AS LAST_SURGERY_DATE
        , MAX(B.SURGERY_INTERVAL)      AS SURGERY_INTERVAL
        , MAX(B.SURGERY_QUANTITY)      AS SURGERY_QUANTITY

  FROM 
    BP_SURGERY A
  INNER JOIN
    (
      SELECT 
                                                PATIENT_ID
        , MIN(CSSBD.SURGERY_DATE)               AS FIRST_SURGERY_DATE
        , MAX(CSSBD.SURGERY_DATE)               AS LAST_SURGERY_DATE
        , FLOOR(MAX(CSSBD.SURGERY_DATE) - 
                MIN(CSSBD.SURGERY_DATE))        AS SURGERY_INTERVAL
        , COUNT(CSSBD.PATIENT_ID)               AS SURGERY_QUANTITY
      FROM 
        BP_SURGERY CSSBD
      GROUP BY 
        CSSBD.PATIENT_ID
    ) B
  ON 
        A.PATIENT_ID    = B.PATIENT_ID
    AND A.SURGERY_DATE  = B.FIRST_SURGERY_DATE
  INNER JOIN
    BP_SURGERY C
  ON
        C.PATIENT_ID    = B.PATIENT_ID
    AND C.SURGERY_DATE  = B.LAST_SURGERY_DATE
  GROUP BY A.PATIENT_ID
);

-- ******************************************************
CREATE MATERIALIZED VIEW  TRANSFORM_TRANSPOSE_SURGERY
      AS
      (
        SELECT 
                                                                          D.PATIENT_ID
          , MAX(CASE WHEN SEQ = 1 THEN D.SURGERY_DATE END)            AS  SRGRY_DATE_1
          , MAX(CASE WHEN SEQ = 1 THEN D.WEIGHT_SRGY END)             AS  WEIGHT_1
          , MAX(CASE WHEN SEQ = 1 THEN D.HEIGHT_SRGY END)             AS  HEIGHT_1
          , MAX(CASE WHEN SEQ = 1 THEN D.ICD10 END)                   AS  ICD10_1
          , MAX(CASE WHEN SEQ = 1 THEN D.DIAGNOSIS END)               AS  DIAGNOSIS_1
          , MAX(CASE WHEN SEQ = 1 THEN D.SURGICAL_SPECIALITY END)     AS  SURGICAL_SPECIALITY_1
          , MAX(CASE WHEN SEQ = 1 THEN D.PROCEDURE END)               AS  PROCEDURE_1

          , MAX(CASE WHEN SEQ = 2 THEN D.SURGERY_DATE END)            AS  SRGRY_DATE_2
          , MAX(CASE WHEN SEQ = 2 THEN D.WEIGHT_SRGY END)             AS  WEIGHT_2
          , MAX(CASE WHEN SEQ = 2 THEN D.HEIGHT_SRGY END)             AS  HEIGHT_2
          , MAX(CASE WHEN SEQ = 2 THEN D.ICD10 END)                   AS  ICD10_2
          , MAX(CASE WHEN SEQ = 2 THEN D.DIAGNOSIS END)               AS  DIAGNOSIS_2
          , MAX(CASE WHEN SEQ = 2 THEN D.SURGICAL_SPECIALITY END)     AS  SURGICAL_SPECIALITY_2
          , MAX(CASE WHEN SEQ = 2 THEN D.PROCEDURE END)               AS  PROCEDURE_2

          , MAX(CASE WHEN SEQ = 3 THEN D.SURGERY_DATE END)            AS  SRGRY_DATE_3
          , MAX(CASE WHEN SEQ = 3 THEN D.WEIGHT_SRGY END)             AS  WEIGHT_3
          , MAX(CASE WHEN SEQ = 3 THEN D.HEIGHT_SRGY END)             AS  HEIGHT_3
          , MAX(CASE WHEN SEQ = 3 THEN D.ICD10 END)                   AS  ICD10_3
          , MAX(CASE WHEN SEQ = 3 THEN D.DIAGNOSIS END)               AS  DIAGNOSIS_3
          , MAX(CASE WHEN SEQ = 3 THEN D.SURGICAL_SPECIALITY END)     AS  SURGICAL_SPECIALITY_3
          , MAX(CASE WHEN SEQ = 3 THEN D.PROCEDURE END)               AS  PROCEDURE_3

          , MAX(CASE WHEN SEQ = 4 THEN D.SURGERY_DATE END)            AS  SRGRY_DATE_4
          , MAX(CASE WHEN SEQ = 4 THEN D.WEIGHT_SRGY END)             AS  WEIGHT_4
          , MAX(CASE WHEN SEQ = 4 THEN D.HEIGHT_SRGY END)             AS  HEIGHT_4
          , MAX(CASE WHEN SEQ = 4 THEN D.ICD10 END)                   AS  ICD10_4
          , MAX(CASE WHEN SEQ = 4 THEN D.DIAGNOSIS END)               AS  DIAGNOSIS_4
          , MAX(CASE WHEN SEQ = 4 THEN D.SURGICAL_SPECIALITY END)     AS  SURGICAL_SPECIALITY_4
          , MAX(CASE WHEN SEQ = 4 THEN D.PROCEDURE END)               AS  PROCEDURE_4

        FROM
          (
            SELECT 
                BPS.PATIENT_ID
              , BPS.SURGERY_DATE
              , BPS.WEIGHT_SRGY
              , BPS.HEIGHT_SRGY
              , BPS.ICD10
              , BPS.DIAGNOSIS
              , BPS.SURGICAL_SPECIALITY
              , BPS.PROCEDURE
              , ROW_NUMBER() 
                    OVER(PARTITION BY BPS.PATIENT_ID ORDER BY BPS.SURGERY_DATE)  AS SEQ
            FROM 
              BP_SURGERY BPS
          ) D
      GROUP BY PATIENT_ID
      );
/

CREATE INDEX TTS_PATIENT_ID ON TRANSFORM_TRANSPOSE_SURGERY (PATIENT_ID) /* tablespace index placeholder */ ;

-- ******************************************************
CREATE MATERIALIZED VIEW TRANSFORM_LINEAR_REG_LABTST AS
(
SELECT  
                                                                                          A.PATIENT_ID
    ,                                                                                     A.DEIDENTIFIED_ID
    ,                                                                                     A.LAB_TEST_CODE
    ,                                                                                     A.LAB_TEST_NAME
    , MIN(A.AGE_AT_LAB_TEST)                                                              AS AGE_FIRST_TEST
    , MAX(A.AGE_AT_LAB_TEST)                                                              AS AGE_LAST_TEST
    , COUNT(*)                                                                            AS LAB_RESULTS_CNT
    , ROUND(AVG(A.LABTST_RESULT_VALUE),2)                                                 AS MEAN
    , ROUND(STDDEV(A.LABTST_RESULT_VALUE),2)                                              AS DEVIATION
    , ROUND(VARIANCE(A.LABTST_RESULT_VALUE),2)                                            AS VARIANCE
    , FLOOR((MAX(A.AGE_AT_LAB_TEST)-(MIN(A.AGE_AT_LAB_TEST))))                            AS AMOUNT_DAYS
    , ROUND(REGR_SLOPE(LABTST_RESULT_VALUE, A.AGE_AT_LAB_TEST - B.AGE_FIRST_TEST),2)      AS SLOPE
    , ROUND(REGR_INTERCEPT(LABTST_RESULT_VALUE, A.AGE_AT_LAB_TEST - B.AGE_FIRST_TEST),2)  AS INTERCEPT
    , ROUND(REGR_R2(LABTST_RESULT_VALUE, A.AGE_AT_LAB_TEST - B.AGE_FIRST_TEST),2)         AS R2
    , CASE WHEN SUM (RESULT_OUT_OF_RANGE) > 0 THEN 1 ELSE 0 END                           AS RESULT_OUT_OF_RANGE
    , CASE WHEN SUM (OFF_RANGE_SUP)       > 0 THEN 1 ELSE 0 END                           AS OFF_RANGE_SUP
    , CASE WHEN SUM (OFF_RANGE_INF)       > 0 THEN 1 ELSE 0 END                           AS OFF_RANGE_INF
    
  FROM 
    TRANSFORM_SELECT_NUM_LABTST A
  LEFT JOIN 
    ( SELECT 
                                PATIENT_ID 
      ,                         LAB_TEST_CODE
      , MIN(AGE_AT_LAB_TEST)  AS  AGE_FIRST_TEST
      FROM 
        TRANSFORM_SELECT_NUM_LABTST
      GROUP BY 
          PATIENT_ID
        , LAB_TEST_CODE) B
    ON
        A.PATIENT_ID    = B.PATIENT_ID
    AND A.LAB_TEST_CODE = B.LAB_TEST_CODE
    
  GROUP BY 
      A.PATIENT_ID
    , A.DEIDENTIFIED_ID
    , A.LAB_TEST_CODE
    , A.LAB_TEST_NAME
);

CREATE INDEX CRI_PATIENT_ID ON TRANSFORM_LINEAR_REG_LABTST (PATIENT_ID) /* tablespace index placeholder */ ;

-- ******************************************************

CREATE MATERIALIZED VIEW TRANSFORM_GETDELTA_LABTEST AS
(
SELECT 
      C.*
    , D.LABTST_RESULT_VALUE                                      LAST_VALUE
    , TRUNC(D.LABTST_RESULT_VALUE - C.FIRST_VALUE,2)             DELTA_VALUE

FROM
(
SELECT
                                                                 A.*
    , B.LABTST_RESULT_VALUE                                      FIRST_VALUE
    , B.LABTST_RESULT_UNIT                                       FIRST_VALUE_UNIT
FROM
  TRANSFORM_LINEAR_REG_LABTST A
INNER JOIN
  TRANSFORM_SELECT_NUM_LABTST B
  ON 
        A.PATIENT_ID      = B.PATIENT_ID
    AND A.LAB_TEST_CODE   = B.LAB_TEST_CODE
    AND A.AGE_FIRST_TEST  = B.AGE_AT_LAB_TEST
) C
INNER JOIN
  TRANSFORM_SELECT_NUM_LABTST D
  ON 
        C.PATIENT_ID      = D.PATIENT_ID
    AND C.LAB_TEST_CODE   = D.LAB_TEST_CODE
    AND C.AGE_LAST_TEST  =  D.AGE_AT_LAB_TEST
);

CREATE INDEX TGL_PATIENT_ID ON TRANSFORM_GETDELTA_LABTEST (PATIENT_ID) /* tablespace index placeholder */ ;

-- ******************************************************

-- SELECT 0 AS PATIENT_ID, 'X' AS E1_NAME, (select PARAMETER_VALUE from CURRENT_RUN_STR_PARAMS WHERE CRITERIA_ID='LABORATORY' AND PARAMETER_TYPE='LAB_TEST_ID'AND PARAMETER_ID=1) || '_FRST_DATE' AS E1_FRST_TEST_DATE FROM DUAL
-- UNION
CREATE MATERIALIZED VIEW TRANSFORM_TRANSPOSE_LABTST
AS
(
SELECT 
        X.DEIDENTIFIED_ID AS DEIDENTIFIED_ID 
---------------------
        -- LAB EXAM 1
---------------------
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 1 THEN X.LAB_TEST_NAME END))   AS  L1_LABTST_NAME 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 1 THEN X.AGE_FIRST_TEST END))   AS  L1_AGE_FRST_TEST 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 1 THEN X.AGE_LAST_TEST END))   AS  L1_AGE_LAST_TEST 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 1 THEN X.LAB_RESULTS_CNT END))   AS  L1_LAB_RSLT_COUNT 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 1 THEN X.MEAN END))               AS  L1_MEAN 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 1 THEN X.DEVIATION END))          AS  L1_DEVIATION 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 1 THEN X.VARIANCE END))          AS  L1_VARIANCE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 1 THEN X.AMOUNT_DAYS END))          AS  L1_AMOUNT_DAYS 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 1 THEN X.SLOPE END))                AS  L1_SLOPE 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 1 THEN X.INTERCEPT END))            AS  L1_INTERCEPT 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 1 THEN X.R2 END))                   AS  L1_R2
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 1 THEN 
                              (
                               CASE
                                 WHEN (X.R2 IS NULL OR X.R2 <= 0.04)
                                 THEN 'VERY_WEEK'
                                 ELSE
                                   CASE
                                    WHEN X.R2 <= 0.16
                                    THEN 'WEEK'
                                    ELSE
                                      CASE
                                       WHEN X.R2 <= 0.49
                                       THEN 'MODERATE'
                                       ELSE
                                         CASE
                                          WHEN X.R2 <= 0.81
                                          THEN 'STRONG'
                                          ELSE
                                            'VERY_STRONG'
                                         END
                                      END
                                   END
                                END
                              ) 
                         END))                                                                       AS  L1_CORRELATION
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 1 THEN X.RESULT_OUT_OF_RANGE END))   AS  L1_RESULT_OUT_OF_RANGE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 1 THEN X.OFF_RANGE_SUP END))          AS  L1_OFF_RANGE_SUP
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 1 THEN X.OFF_RANGE_INF END))          AS  L1_OFF_RANGE_INF
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 1 THEN X.FIRST_VALUE END))          AS  L1_FIRST_VALUE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 1 THEN X.FIRST_VALUE_UNIT END))          AS  L1_FIRST_VALUE_UNIT
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 1 THEN X.LAST_VALUE END))          AS  L1_LAST_VALUE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 1 THEN X.DELTA_VALUE END))          AS  L1_DELTA_VALUE
---------------------
        -- LAB EXAM 2
---------------------
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 2 THEN X.LAB_TEST_NAME END))   AS  L2_LABTST_NAME 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 2 THEN X.AGE_FIRST_TEST END))   AS  L2_AGE_FRST_TEST 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 2 THEN X.AGE_LAST_TEST END))   AS  L2_AGE_LAST_TEST 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 2 THEN X.LAB_RESULTS_CNT END))   AS  L2_LAB_RSLT_COUNT 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 2 THEN X.MEAN END))               AS  L2_MEAN 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 2 THEN X.DEVIATION END))          AS  L2_DEVIATION 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 2 THEN X.VARIANCE END))          AS  L2_VARIANCE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 2 THEN X.AMOUNT_DAYS END))          AS  L2_AMOUNT_DAYS 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 2 THEN X.SLOPE END))                AS  L2_SLOPE 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 2 THEN X.INTERCEPT END))            AS  L2_INTERCEPT 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 2 THEN X.R2 END))                   AS  L2_R2
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 2 THEN 
                              (
                               CASE
                                 WHEN (X.R2 IS NULL OR X.R2 <= 0.04)
                                 THEN 'VERY_WEEK'
                                 ELSE
                                   CASE
                                    WHEN X.R2 <= 0.16
                                    THEN 'WEEK'
                                    ELSE
                                      CASE
                                       WHEN X.R2 <= 0.49
                                       THEN 'MODERATE'
                                       ELSE
                                         CASE
                                          WHEN X.R2 <= 0.81
                                          THEN 'STRONG'
                                          ELSE
                                            'VERY_STRONG'
                                         END
                                      END
                                   END
                                END
                              ) 
                         END))                                                                       AS  L2_CORRELATION
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 2 THEN X.RESULT_OUT_OF_RANGE END))   AS  L2_RESULT_OUT_OF_RANGE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 2 THEN X.OFF_RANGE_SUP END))          AS  L2_OFF_RANGE_SUP
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 2 THEN X.OFF_RANGE_INF END))          AS  L2_OFF_RANGE_INF
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 2 THEN X.FIRST_VALUE END))          AS  L2_FIRST_VALUE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 2 THEN X.FIRST_VALUE_UNIT END))          AS  L2_FIRST_VALUE_UNIT
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 2 THEN X.LAST_VALUE END))          AS  L2_LAST_VALUE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 2 THEN X.DELTA_VALUE END))          AS  L2_DELTA_VALUE

---------------------
        -- LAB EXAM 3
---------------------
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 3 THEN X.LAB_TEST_NAME END))   AS  L3_LABTST_NAME 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 3 THEN X.AGE_FIRST_TEST END))   AS  L3_AGE_FRST_TEST 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 3 THEN X.AGE_LAST_TEST END))   AS  L3_AGE_LAST_TEST 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 3 THEN X.LAB_RESULTS_CNT END))   AS  L3_LAB_RSLT_COUNT 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 3 THEN X.MEAN END))               AS  L3_MEAN 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 3 THEN X.DEVIATION END))          AS  L3_DEVIATION 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 3 THEN X.VARIANCE END))          AS  L3_VARIANCE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 3 THEN X.AMOUNT_DAYS END))          AS  L3_AMOUNT_DAYS 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 3 THEN X.SLOPE END))                AS  L3_SLOPE 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 3 THEN X.INTERCEPT END))            AS  L3_INTERCEPT 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 3 THEN X.R2 END))                   AS  L3_R2
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 3 THEN 
                              (
                               CASE
                                 WHEN (X.R2 IS NULL OR X.R2 <= 0.04)
                                 THEN 'VERY_WEEK'
                                 ELSE
                                   CASE
                                    WHEN X.R2 <= 0.16
                                    THEN 'WEEK'
                                    ELSE
                                      CASE
                                       WHEN X.R2 <= 0.49
                                       THEN 'MODERATE'
                                       ELSE
                                         CASE
                                          WHEN X.R2 <= 0.81
                                          THEN 'STRONG'
                                          ELSE
                                            'VERY_STRONG'
                                         END
                                      END
                                   END
                                END
                              ) 
                         END))                                                                       AS  L3_CORRELATION
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 3 THEN X.RESULT_OUT_OF_RANGE END))   AS  L3_RESULT_OUT_OF_RANGE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 3 THEN X.OFF_RANGE_SUP END))          AS  L3_OFF_RANGE_SUP
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 3 THEN X.OFF_RANGE_INF END))          AS  L3_OFF_RANGE_INF
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 3 THEN X.FIRST_VALUE END))          AS  L3_FIRST_VALUE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 3 THEN X.FIRST_VALUE_UNIT END))          AS  L3_FIRST_VALUE_UNIT
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 3 THEN X.LAST_VALUE END))          AS  L3_LAST_VALUE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 3 THEN X.DELTA_VALUE END))          AS  L3_DELTA_VALUE

---------------------
        -- LAB EXAM 4
---------------------
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 4 THEN X.LAB_TEST_NAME END))   AS  L4_LABTST_NAME 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 4 THEN X.AGE_FIRST_TEST END))   AS  L4_AGE_FRST_TEST 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 4 THEN X.AGE_LAST_TEST END))   AS  L4_AGE_LAST_TEST 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 4 THEN X.LAB_RESULTS_CNT END))   AS  L4_LAB_RSLT_COUNT 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 4 THEN X.MEAN END))               AS  L4_MEAN 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 4 THEN X.DEVIATION END))          AS  L4_DEVIATION 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 4 THEN X.VARIANCE END))          AS  L4_VARIANCE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 4 THEN X.AMOUNT_DAYS END))          AS  L4_AMOUNT_DAYS 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 4 THEN X.SLOPE END))                AS  L4_SLOPE 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 4 THEN X.INTERCEPT END))            AS  L4_INTERCEPT 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 4 THEN X.R2 END))                   AS  L4_R2
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 4 THEN 
                              (
                               CASE
                                 WHEN (X.R2 IS NULL OR X.R2 <= 0.04)
                                 THEN 'VERY_WEEK'
                                 ELSE
                                   CASE
                                    WHEN X.R2 <= 0.16
                                    THEN 'WEEK'
                                    ELSE
                                      CASE
                                       WHEN X.R2 <= 0.49
                                       THEN 'MODERATE'
                                       ELSE
                                         CASE
                                          WHEN X.R2 <= 0.81
                                          THEN 'STRONG'
                                          ELSE
                                            'VERY_STRONG'
                                         END
                                      END
                                   END
                                END
                              ) 
                         END))                                                                       AS  L4_CORRELATION
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 4 THEN X.RESULT_OUT_OF_RANGE END))   AS  L4_RESULT_OUT_OF_RANGE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 4 THEN X.OFF_RANGE_SUP END))          AS  L4_OFF_RANGE_SUP
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 4 THEN X.OFF_RANGE_INF END))          AS  L4_OFF_RANGE_INF
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 4 THEN X.FIRST_VALUE END))          AS  L4_FIRST_VALUE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 4 THEN X.FIRST_VALUE_UNIT END))          AS  L4_FIRST_VALUE_UNIT
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 4 THEN X.LAST_VALUE END))          AS  L4_LAST_VALUE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 4 THEN X.DELTA_VALUE END))          AS  L4_DELTA_VALUE

---------------------
        -- LAB EXAM 5
---------------------
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 5 THEN X.LAB_TEST_NAME END))   AS  L5_LABTST_NAME 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 5 THEN X.AGE_FIRST_TEST END))   AS  L5_AGE_FRST_TEST 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 5 THEN X.AGE_LAST_TEST END))   AS  L5_AGE_LAST_TEST 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 5 THEN X.LAB_RESULTS_CNT END))   AS  L5_LAB_RSLT_COUNT 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 5 THEN X.MEAN END))               AS  L5_MEAN 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 5 THEN X.DEVIATION END))          AS  L5_DEVIATION 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 5 THEN X.VARIANCE END))          AS  L5_VARIANCE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 5 THEN X.AMOUNT_DAYS END))          AS  L5_AMOUNT_DAYS 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 5 THEN X.SLOPE END))                AS  L5_SLOPE 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 5 THEN X.INTERCEPT END))            AS  L5_INTERCEPT 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 5 THEN X.R2 END))                   AS  L5_R2
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 5 THEN 
                              (
                               CASE
                                 WHEN (X.R2 IS NULL OR X.R2 <= 0.04)
                                 THEN 'VERY_WEEK'
                                 ELSE
                                   CASE
                                    WHEN X.R2 <= 0.16
                                    THEN 'WEEK'
                                    ELSE
                                      CASE
                                       WHEN X.R2 <= 0.49
                                       THEN 'MODERATE'
                                       ELSE
                                         CASE
                                          WHEN X.R2 <= 0.81
                                          THEN 'STRONG'
                                          ELSE
                                            'VERY_STRONG'
                                         END
                                      END
                                   END
                                END
                              ) 
                         END))                                                                       AS  L5_CORRELATION
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 5 THEN X.RESULT_OUT_OF_RANGE END))   AS  L5_RESULT_OUT_OF_RANGE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 5 THEN X.OFF_RANGE_SUP END))          AS  L5_OFF_RANGE_SUP
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 5 THEN X.OFF_RANGE_INF END))          AS  L5_OFF_RANGE_INF
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 5 THEN X.FIRST_VALUE END))          AS  L5_FIRST_VALUE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 5 THEN X.FIRST_VALUE_UNIT END))          AS  L5_FIRST_VALUE_UNIT
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 5 THEN X.LAST_VALUE END))          AS  L5_LAST_VALUE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 5 THEN X.DELTA_VALUE END))          AS  L5_DELTA_VALUE

---------------------
        -- LAB EXAM 6
---------------------
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 6 THEN X.LAB_TEST_NAME END))   AS  L6_LABTST_NAME 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 6 THEN X.AGE_FIRST_TEST END))   AS  L6_AGE_FRST_TEST 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 6 THEN X.AGE_LAST_TEST END))   AS  L6_AGE_LAST_TEST 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 6 THEN X.LAB_RESULTS_CNT END))   AS  L6_LAB_RSLT_COUNT 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 6 THEN X.MEAN END))               AS  L6_MEAN 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 6 THEN X.DEVIATION END))          AS  L6_DEVIATION 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 6 THEN X.VARIANCE END))          AS  L6_VARIANCE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 6 THEN X.AMOUNT_DAYS END))          AS  L6_AMOUNT_DAYS 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 6 THEN X.SLOPE END))                AS  L6_SLOPE 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 6 THEN X.INTERCEPT END))            AS  L6_INTERCEPT 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 6 THEN X.R2 END))                   AS  L6_R2
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 6 THEN 
                              (
                               CASE
                                 WHEN (X.R2 IS NULL OR X.R2 <= 0.04)
                                 THEN 'VERY_WEEK'
                                 ELSE
                                   CASE
                                    WHEN X.R2 <= 0.16
                                    THEN 'WEEK'
                                    ELSE
                                      CASE
                                       WHEN X.R2 <= 0.49
                                       THEN 'MODERATE'
                                       ELSE
                                         CASE
                                          WHEN X.R2 <= 0.81
                                          THEN 'STRONG'
                                          ELSE
                                            'VERY_STRONG'
                                         END
                                      END
                                   END
                                END
                              ) 
                         END))                                                                       AS  L6_CORRELATION
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 6 THEN X.RESULT_OUT_OF_RANGE END))   AS  L6_RESULT_OUT_OF_RANGE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 6 THEN X.OFF_RANGE_SUP END))          AS  L6_OFF_RANGE_SUP
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 6 THEN X.OFF_RANGE_INF END))          AS  L6_OFF_RANGE_INF
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 6 THEN X.FIRST_VALUE END))          AS  L6_FIRST_VALUE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 6 THEN X.FIRST_VALUE_UNIT END))          AS  L6_FIRST_VALUE_UNIT
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 6 THEN X.LAST_VALUE END))          AS  L6_LAST_VALUE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 6 THEN X.DELTA_VALUE END))          AS  L6_DELTA_VALUE

---------------------
        -- LAB EXAM 7
---------------------
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 7 THEN X.LAB_TEST_NAME END))   AS  L7_LABTST_NAME 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 7 THEN X.AGE_FIRST_TEST END))   AS  L7_AGE_FRST_TEST 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 7 THEN X.AGE_LAST_TEST END))   AS  L7_AGE_LAST_TEST 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 7 THEN X.LAB_RESULTS_CNT END))   AS  L7_LAB_RSLT_COUNT 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 7 THEN X.MEAN END))               AS  L7_MEAN 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 7 THEN X.DEVIATION END))          AS  L7_DEVIATION 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 7 THEN X.VARIANCE END))          AS  L7_VARIANCE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 7 THEN X.AMOUNT_DAYS END))          AS  L7_AMOUNT_DAYS 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 7 THEN X.SLOPE END))                AS  L7_SLOPE 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 7 THEN X.INTERCEPT END))            AS  L7_INTERCEPT 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 7 THEN X.R2 END))                   AS  L7_R2
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 7 THEN 
                              (
                               CASE
                                 WHEN (X.R2 IS NULL OR X.R2 <= 0.04)
                                 THEN 'VERY_WEEK'
                                 ELSE
                                   CASE
                                    WHEN X.R2 <= 0.16
                                    THEN 'WEEK'
                                    ELSE
                                      CASE
                                       WHEN X.R2 <= 0.49
                                       THEN 'MODERATE'
                                       ELSE
                                         CASE
                                          WHEN X.R2 <= 0.81
                                          THEN 'STRONG'
                                          ELSE
                                            'VERY_STRONG'
                                         END
                                      END
                                   END
                                END
                              ) 
                         END))                                                                       AS  L7_CORRELATION
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 7 THEN X.RESULT_OUT_OF_RANGE END))   AS  L7_RESULT_OUT_OF_RANGE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 7 THEN X.OFF_RANGE_SUP END))          AS  L7_OFF_RANGE_SUP
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 7 THEN X.OFF_RANGE_INF END))          AS  L7_OFF_RANGE_INF
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 7 THEN X.FIRST_VALUE END))          AS  L7_FIRST_VALUE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 7 THEN X.FIRST_VALUE_UNIT END))          AS  L7_FIRST_VALUE_UNIT
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 7 THEN X.LAST_VALUE END))          AS  L7_LAST_VALUE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 7 THEN X.DELTA_VALUE END))          AS  L7_DELTA_VALUE

---------------------
        -- LAB EXAM 8
---------------------
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 8 THEN X.LAB_TEST_NAME END))   AS  L8_LABTST_NAME 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 8 THEN X.AGE_FIRST_TEST END))   AS  L8_AGE_FRST_TEST 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 8 THEN X.AGE_LAST_TEST END))   AS  L8_AGE_LAST_TEST 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 8 THEN X.LAB_RESULTS_CNT END))   AS  L8_LAB_RSLT_COUNT 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 8 THEN X.MEAN END))               AS  L8_MEAN 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 8 THEN X.DEVIATION END))          AS  L8_DEVIATION 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 8 THEN X.VARIANCE END))          AS  L8_VARIANCE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 8 THEN X.AMOUNT_DAYS END))          AS  L8_AMOUNT_DAYS 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 8 THEN X.SLOPE END))                AS  L8_SLOPE 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 8 THEN X.INTERCEPT END))            AS  L8_INTERCEPT 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 8 THEN X.R2 END))                   AS  L8_R2
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 8 THEN 
                              (
                               CASE
                                 WHEN (X.R2 IS NULL OR X.R2 <= 0.04)
                                 THEN 'VERY_WEEK'
                                 ELSE
                                   CASE
                                    WHEN X.R2 <= 0.16
                                    THEN 'WEEK'
                                    ELSE
                                      CASE
                                       WHEN X.R2 <= 0.49
                                       THEN 'MODERATE'
                                       ELSE
                                         CASE
                                          WHEN X.R2 <= 0.81
                                          THEN 'STRONG'
                                          ELSE
                                            'VERY_STRONG'
                                         END
                                      END
                                   END
                                END
                              ) 
                         END))                                                                       AS  L8_CORRELATION
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 8 THEN X.RESULT_OUT_OF_RANGE END))   AS  L8_RESULT_OUT_OF_RANGE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 8 THEN X.OFF_RANGE_SUP END))          AS  L8_OFF_RANGE_SUP
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 8 THEN X.OFF_RANGE_INF END))          AS  L8_OFF_RANGE_INF
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 8 THEN X.FIRST_VALUE END))          AS  L8_FIRST_VALUE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 8 THEN X.FIRST_VALUE_UNIT END))          AS  L8_FIRST_VALUE_UNIT
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 8 THEN X.LAST_VALUE END))          AS  L8_LAST_VALUE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 8 THEN X.DELTA_VALUE END))          AS  L8_DELTA_VALUE

---------------------
        -- LAB EXAM 9
---------------------
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 9 THEN X.LAB_TEST_NAME END))   AS  L9_LABTST_NAME 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 9 THEN X.AGE_FIRST_TEST END))   AS  L9_AGE_FRST_TEST 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 9 THEN X.AGE_LAST_TEST END))   AS  L9_AGE_LAST_TEST 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 9 THEN X.LAB_RESULTS_CNT END))   AS  L9_LAB_RSLT_COUNT 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 9 THEN X.MEAN END))               AS  L9_MEAN 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 9 THEN X.DEVIATION END))          AS  L9_DEVIATION 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 9 THEN X.VARIANCE END))          AS  L9_VARIANCE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 9 THEN X.AMOUNT_DAYS END))          AS  L9_AMOUNT_DAYS 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 9 THEN X.SLOPE END))                AS  L9_SLOPE 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 9 THEN X.INTERCEPT END))            AS  L9_INTERCEPT 
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 9 THEN X.R2 END))                   AS  L9_R2
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 9 THEN 
                              (
                               CASE
                                 WHEN (X.R2 IS NULL OR X.R2 <= 0.04)
                                 THEN 'VERY_WEEK'
                                 ELSE
                                   CASE
                                    WHEN X.R2 <= 0.16
                                    THEN 'WEEK'
                                    ELSE
                                      CASE
                                       WHEN X.R2 <= 0.49
                                       THEN 'MODERATE'
                                       ELSE
                                         CASE
                                          WHEN X.R2 <= 0.81
                                          THEN 'STRONG'
                                          ELSE
                                            'VERY_STRONG'
                                         END
                                      END
                                   END
                                END
                              ) 
                         END))                                                                       AS  L9_CORRELATION
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 9 THEN X.RESULT_OUT_OF_RANGE END))   AS  L9_RESULT_OUT_OF_RANGE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 9 THEN X.OFF_RANGE_SUP END))          AS  L9_OFF_RANGE_SUP
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 9 THEN X.OFF_RANGE_INF END))          AS  L9_OFF_RANGE_INF
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 9 THEN X.FIRST_VALUE END))          AS  L9_FIRST_VALUE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 9 THEN X.FIRST_VALUE_UNIT END))          AS  L9_FIRST_VALUE_UNIT
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 9 THEN X.LAST_VALUE END))          AS  L9_LAST_VALUE
       , MAX((
              CASE WHEN (select PARAMETER_ID 
                         from CURRENT_RUN_STR_PARAMS 
                         WHERE CRITERIA_ID='LABORATORY' 
                         AND PARAMETER_TYPE='LAB_TEST_ID'
                         AND PARAMETER_VALUE=X.LAB_TEST_NAME) = 9 THEN X.DELTA_VALUE END))          AS  L9_DELTA_VALUE

       FROM TRANSFORM_GETDELTA_LABTEST X
       GROUP BY X.DEIDENTIFIED_ID
);
       
-- ******************************************************

--------------------------------------------------------
--
--  CREATE AUXILIARY VIEWS
--
--------------------------------------------------------



-- ******************************************************
CREATE MATERIALIZED VIEW VALID_ADMISSION AS
(
  SELECT 
        A.PATIENT_ID
      , A.ADMISSION_YEAR
      , A.ADMISSION_ID
      , A.ADMISSION_DATE
      , A.DISCHARGE_ID
      , A.ADMISSION_SECTOR
  FROM
      FILTER_ADM_DISCH_ENROLLMENT A
  WHERE
    (A.PATIENT_ID,A.ADMISSION_YEAR,A.ADMISSION_ID) NOT IN (SELECT PATIENT_ID,ADMISSION_YEAR,ADMISSION_ID FROM DETECT_DUPLICATE_ADMISSION)

);

CREATE INDEX COHOADM_PATIENT_ID ON VALID_ADMISSION (PATIENT_ID) /* tablespace index placeholder */ ;
CREATE INDEX COHOADM_PID_Y_ADM  ON VALID_ADMISSION (PATIENT_ID,ADMISSION_YEAR,ADMISSION_ID,DISCHARGE_ID) /* tablespace index placeholder */ ;

-- ******************************************************


--------------------------------------------------------
--
--
--
--
--  CREATE PAUA DETECTORS
--
--
--
--------------------------------------------------------
-- ******************************************************
-- **********************************************
-- DETECT DUPLICATES
-- **********************************************
-- ******************************************************
-- VIEW 14 - STUDY_INVALID_DISCHARGE
-- PATIENTS WITH MORE THAN ONE VALID DISCHARGE

CREATE OR REPLACE VIEW DETECT_INVALID_DISCHARGE AS 
(
  SELECT 
        VALID_ADMISSION.* 
  FROM  VALID_ADMISSION
        , (
            SELECT 
                  VALID_ADMISSION.* 
            FROM 
                  VALID_ADMISSION
                  , (
                      SELECT * 
                      FROM 
                        (
                          SELECT 
                                                                          VALID_ADMISSION.PATIENT_ID
                            ,                                             VALID_ADMISSION.ADMISSION_YEAR
                            ,                                             VALID_ADMISSION.ADMISSION_ID
                            , MAX(VALID_ADMISSION.DISCHARGE_ID)  AS MAX_DISCHARGE_ID
                          FROM 
                              VALID_ADMISSION
                            , (
                                SELECT  
                                  DUP_PATIENT.PATIENT_ID 
                                FROM 
                                    VALID_ADMISSION
                                  , (
                                    SELECT 
                                        ADMISSION_YEAR
                                      , PATIENT_ID
                                      , ADMCNT 
                                    FROM 
                                      (
                                        SELECT 
                                                                ADMISSION_YEAR
                                          ,                     PATIENT_ID
                                          , COUNT(ADMISSION_ID) ADMCNT
                                        FROM 
                                          VALID_ADMISSION
                                        GROUP BY 
                                            ADMISSION_YEAR
                                          , PATIENT_ID
                                          , ADMISSION_ID
                                      ) PATIENT
                                    WHERE 
                                      PATIENT.ADMCNT > 1
                                    ) DUP_PATIENT
                                WHERE 
                                      DUP_PATIENT.PATIENT_ID = VALID_ADMISSION.PATIENT_ID
                                  AND VALID_ADMISSION.DISCHARGE_ID > 1 
                              ) DUPLICATED
                          WHERE 
                            VALID_ADMISSION.PATIENT_ID = DUPLICATED.PATIENT_ID 
                          GROUP BY 
                              VALID_ADMISSION.PATIENT_ID
                            , VALID_ADMISSION.ADMISSION_YEAR
                            , VALID_ADMISSION.ADMISSION_ID
                        ) FILTERED
                      WHERE 
                        FILTERED.MAX_DISCHARGE_ID > 1
                    ) FILTERED_MAX
            WHERE 
                  VALID_ADMISSION.PATIENT_ID = FILTERED_MAX.PATIENT_ID 
              AND VALID_ADMISSION.ADMISSION_YEAR=FILTERED_MAX.ADMISSION_YEAR
              AND VALID_ADMISSION.ADMISSION_ID = FILTERED_MAX.ADMISSION_ID 
              AND VALID_ADMISSION.DISCHARGE_ID < FILTERED_MAX.MAX_DISCHARGE_ID
        ) STUDY_FILTERED
  WHERE 
        VALID_ADMISSION.PATIENT_ID=STUDY_FILTERED.PATIENT_ID 
    AND VALID_ADMISSION.ADMISSION_YEAR=STUDY_FILTERED.ADMISSION_YEAR
    AND VALID_ADMISSION.ADMISSION_ID = STUDY_FILTERED.ADMISSION_ID
    AND VALID_ADMISSION.DISCHARGE_ID = STUDY_FILTERED.DISCHARGE_ID
);
-- ******************************************************

COMMIT;

-- ******************************************************
-- VIEW 20 - BP_ADMISSION_DISCHARGE

CREATE MATERIALIZED VIEW BP_ADMISSION_DISCHARGE 
AS 
(
  SELECT 
    * 
  FROM 
    VALID_ADMISSION MPA
  WHERE 
    NOT EXISTS (
                SELECT 
                  NULL 
                FROM 
                  DETECT_INVALID_DISCHARGE MPF 
                WHERE 
                      MPA.PATIENT_ID     = MPF.PATIENT_ID
                  AND MPA.ADMISSION_YEAR = MPF.ADMISSION_YEAR
                  AND MPA.ADMISSION_ID   = MPF.ADMISSION_ID
                  AND MPA.DISCHARGE_ID   = MPF.DISCHARGE_ID
                )
);

CREATE INDEX BPAD_PATID ON BP_ADMISSION_DISCHARGE(PATIENT_ID) /* tablespace index placeholder */ ;
CREATE INDEX BPAD_ADSEC ON BP_ADMISSION_DISCHARGE(ADMISSION_SECTOR) /* tablespace index placeholder */ ;

-- ******************************************************
--------------------------------------------------------
--
--  CREATE PAUA TOTALS
--
--------------------------------------------------------

CREATE OR REPLACE VIEW PAUA_TOTALS AS
(
SELECT 
    (SELECT COUNT(*) FROM FILTER_PATIENT_ENROLLMENT) AS PATIENTS_TOTAL
  , (SELECT COUNT (*) FROM VALID_PATIENT) AS WITH_BIRTH_DATE
  , (SELECT COUNT (*) FROM BP_PATIENT) AS WITHOUT_DUPLICATES
  , (SELECT COUNT(DISTINCT  A.PATIENT_ID) FROM BP_PATIENT A INNER JOIN FILTER_DIAGNOSIS_ENROLLMENT ON FILTER_DIAGNOSIS_ENROLLMENT.PATIENT_ID = A.PATIENT_ID) AS WITH_DIAGNOSIS
  , (SELECT COUNT (*) FROM FILTER_DIAGNOSIS_ENROLLMENT) AS DIAGNOSIS_TOTAL
  , (SELECT COUNT(*) FROM DETECT_INVALID_ICD10_STRICT) AS INVALID_ICD_STRICT
  , (SELECT COUNT(*) FROM DETECT_INVALID_ICD10_RELAX) AS INVALID_ICD_RELAX
  FROM DUAL
);

-- ******************************************************

CREATE OR REPLACE VIEW PAUA_TOTALS_PT AS
(
SELECT
    (SELECT COUNT(*) FROM FILTER_PATIENT_ENROLLMENT) AS TOTAL_PACIENTES
  , (SELECT COUNT (*) FROM VALID_PATIENT) AS DATA_NASC_NAO_NULA
  , (SELECT COUNT (*) FROM BP_PATIENT) AS SEM_DUPLICADOS
  , (SELECT COUNT(DISTINCT  A.PATIENT_ID) FROM BP_PATIENT A INNER JOIN FILTER_DIAGNOSIS_ENROLLMENT ON FILTER_DIAGNOSIS_ENROLLMENT.PATIENT_ID = A.PATIENT_ID) AS COM_DIAGNOSTICO
  , (SELECT COUNT (*) FROM FILTER_DIAGNOSIS_ENROLLMENT) AS TOTAL_DIAGNOSTICOS
  , (SELECT COUNT(*) FROM DETECT_INVALID_ICD10_STRICT) AS CID_TRES_OU_MENOS_CARAC
  , (SELECT COUNT(*) FROM DETECT_INVALID_ICD10_RELAX)  AS CID_DOIS_CARAC_INVALIDOS
  FROM DUAL
);

-- ******************************************************
CREATE MATERIALIZED VIEW AUX_ENCOUNTERS AS
(
  SELECT PATIENT_ID FROM 
    (
    SELECT PATIENT_ID, count(*) QTY
    FROM BP_ADMISSION_DISCHARGE
    WHERE ADMISSION_SECTOR IN (
                                SELECT PARAMETER_VALUE 
                                FROM CURRENT_RUN_STR_PARAMS 
                                WHERE 
                                    CRITERIA_ID = 'ENCOUNTER_SELECTION' 
                                AND PARAMETER_TYPE = 'ENCOUNTER_TYPE'
                                )
    GROUP BY PATIENT_ID
    ) 
  WHERE QTY > (
                SELECT MAX(PARAMETER_VALUE) 
                FROM CURRENT_RUN_NUMBER_PARAMS 
                WHERE 
                    CRITERIA_ID = 'ENCOUNTER_SELECTION' 
                AND PARAMETER_TYPE = 'ENCOUNTERS_QUANTITY'
                )
);

CREATE INDEX AUXE_PATID ON AUX_ENCOUNTERS(PATIENT_ID) /* tablespace index placeholder */ ;

-- ******************************************************

CREATE MATERIALIZED VIEW COHORT_SELECTOR_ENCOUNTERS AS
  (
    SELECT 
      DISTINCT PATIENT_ID
    FROM 
      COHORT_SELECTOR_FSTLST_ENCNTR CSFE
    WHERE
     (
        -- INCLUDE FILTER (ENABLE)
        (
          'Y' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'ENCOUNTER_SELECTION' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
        )
      AND
        (
        -- FILTER SELECTED GENDERS
        PATIENT_ID   IN (
                          SELECT PATIENT_ID FROM AUX_ENCOUNTERS
                        )
        )
      OR
        -- EXCLUDE FILTER (DISABLE)
      (
            'N' IN (SELECT PARAMETER_VALUE 
            FROM CURRENT_RUN_YESNO_PARAMS 
            WHERE 
              CRITERIA_ID = 'ENCOUNTER_SELECTION' 
            AND PARAMETER_TYPE = 'FILTER_ENABLING'
            )
      )
    )
  );
/

CREATE INDEX CSE_PATID ON COHORT_SELECTOR_ENCOUNTERS(PATIENT_ID) /* tablespace index placeholder */ ;

COMMIT;

-- **********************************************

COMMIT;

--------------------------------------------------------
--
--  CREATE SELECTED_PATIENT
--
-------------------------------------------------------- 
-- 25-MAR-2014 07:56:23
--             RAW_TOTAL_  DN_NOT_NULL NO_DUPLICATES WITH_DIAGNOSIS  WITH_DCVA     ADULTS_   EFFECTIVE_CASES
--             PATIENTS                                                           WITH_DCVA
-- TOTALS OLD: 1127845        1106712          790997        206859      61409        60352             60041
-- TOTALS NEW: 1127844        1106847          991443        328369      

CREATE MATERIALIZED VIEW SELECTED_PATIENT AS 
(
  SELECT 
        CSPG.PATIENT_ID
      , CSPG.DEIDENTIFIED_ID
      , CSPG.GENDER 
      , CSPG.BIRTH_DATE
      , CSPG.AGE_AT_STUDY_BEGIN
      , CSPG.AGE_AT_STUDY_END
  FROM 
    COHORT_SELECTOR_PATIENT_GENDER CSPG
  INNER JOIN 
    COHORT_SELECTOR_DIAGNOSIS CSD
  ON
    CSPG.PATIENT_ID = CSD.PATIENT_ID
  INNER JOIN
    COHORT_SELECTOR_ENCOUNTERS CSE
  ON
    CSPG.PATIENT_ID = CSE.PATIENT_ID

);

COMMIT;

CREATE INDEX PAUAC_PATIENT_ID ON SELECTED_PATIENT (PATIENT_ID) /* tablespace index placeholder */ ;

-- ******************************************************
CREATE MATERIALIZED VIEW SELECTED_DIAGNOSIS AS 
(
  SELECT 
          SP.DEIDENTIFIED_ID
        , SP.BIRTH_DATE
        , BPD.*
  FROM 
    BP_DIAGNOSIS BPD
  INNER JOIN
    SELECTED_PATIENT SP
  ON
    BPD.PATIENT_ID = SP.PATIENT_ID
);

COMMIT;

CREATE INDEX SD_PATIENT_ID ON SELECTED_DIAGNOSIS (PATIENT_ID) /* tablespace index placeholder */ ;

-- ******************************************************
CREATE MATERIALIZED VIEW SELECTED_PCI AS 
(
  SELECT 
          SP.DEIDENTIFIED_ID
        , SP.BIRTH_DATE
        , TTP.*
  FROM 
    TRANSFORM_TRANSPOSE_PCI TTP
  INNER JOIN
    SELECTED_PATIENT SP
  ON
    TTP.PATIENT_ID = SP.PATIENT_ID
);

COMMIT;

CREATE INDEX SP_PATIENT_ID ON SELECTED_PCI (PATIENT_ID) /* tablespace index placeholder */ ;

-- ******************************************************
CREATE MATERIALIZED VIEW SELECTED_DEATH AS 
(
  SELECT 
          SP.DEIDENTIFIED_ID
        , SP.BIRTH_DATE
        , BPD.*
  FROM 
    BP_DEATH BPD
  INNER JOIN
    SELECTED_PATIENT SP
  ON
    BPD.PATIENT_ID = SP.PATIENT_ID
);

COMMIT;

CREATE INDEX SD_PATI_ID ON SELECTED_DEATH (PATIENT_ID) /* tablespace index placeholder */ ;

-- ******************************************************
CREATE MATERIALIZED VIEW SELECTED_DRUGS AS 
(
  SELECT 
        SP.DEIDENTIFIED_ID
      , BPD.PRESCRIPTION_ID
      , BPD.DRUG_ID
      , BPD.DRUG_NAME
      , BPD.DRG_QUANTITY
      , BPD.DRG_UNIT
      , BPD.OUTPATIENT_INPATIENT
      , FLOOR(BPD.PRESCRIPTION_DATE   - SP.BIRTH_DATE) AS AGE_AT_PRESCRIPTION
      , FLOOR(BPD.NEXT_ENCOUNTER_DATE - SP.BIRTH_DATE) AS AGE_AT_NEXT_ENCOUNTER
      , FLOOR(BPD.ERA_BEGIN_DATE      - SP.BIRTH_DATE) AS AGE_AT_ERA_BEGIN
      , FLOOR(BPD.ERA_END_DATE        - SP.BIRTH_DATE) AS AGE_AT_ERA_END        
      , SD.GROUP_ID
      , SD.GROUP_NAME
      , NVL(SD.INTERVENTION_DRUG,0) AS INTERVENTION_DRUG
  FROM 
    SELECTED_PATIENT SP
  LEFT OUTER JOIN
    BP_DRUGS BPD
  ON
    BPD.PATIENT_ID = SP.PATIENT_ID

  LEFT OUTER JOIN
    STUDY_DRUG SD
  ON
    BPD.DRUG_ID = SD.DRUG_ID

  LEFT OUTER JOIN
    (SELECT RESEARCH_ID,RESEARCHER_ID FROM CURRENT_RUN_YESNO_PARAMS GROUP BY RESEARCH_ID,RESEARCHER_ID) CRRR
  ON
        SD.RESEARCH_ID = CRRR.RESEARCH_ID
    AND SD.RESEARCHER_ID = CRRR.RESEARCHER_ID

);

COMMIT;

CREATE INDEX SDRG_PATI_ID ON SELECTED_DRUGS (DEIDENTIFIED_ID) /* tablespace index placeholder */ ;

-- ******************************************************
CREATE OR REPLACE VIEW COHORT_LABTEST_TRANSPOSED AS
(
SELECT A.* 
FROM 
  TRANSFORM_TRANSPOSE_LABTST A
INNER JOIN
  SELECTED_PATIENT B
ON
  A.DEIDENTIFIED_ID = B.DEIDENTIFIED_ID
);
-- ******************************************************
-- ******************************************************
-- ******************************************************
-- MVIEW xx - TRANSFORM_FIRSTLAST_ENCOUNTER
--

CREATE MATERIALIZED VIEW TRANSFORM_FIRSTLAST_ENCOUNTER
AS
(
  SELECT 
      PATIENT_ID
    , COUNT(PATIENT_ID)     AS ENCOUNTER_CNT
    , MIN(ADMISSION_DATE)   AS FIRST_ENCOUNTER_DATE 
    , MAX(ADMISSION_DATE)   AS LAST_ENCOUNTER_DATE 
  FROM 
    BP_ADMISSION_DISCHARGE
  GROUP BY 
    PATIENT_ID
);

CREATE INDEX TFE_PATID  ON TRANSFORM_FIRSTLAST_ENCOUNTER (PATIENT_ID) /* tablespace index placeholder */ ;

COMMIT;
-- ******************************************************
CREATE OR REPLACE VIEW COHORT_SELECTOR_FSTLST_ENCNTR
AS
(
  SELECT 
        * 
  FROM 
    TRANSFORM_FIRSTLAST_ENCOUNTER
  WHERE 
   (
      -- INCLUDE FILTER (ENABLE)
      (
        'Y' IN (SELECT PARAMETER_VALUE 
        FROM CURRENT_RUN_YESNO_PARAMS 
        WHERE 
            CRITERIA_ID = 'DIAGNOSIS_DATE_ON_STUDY_INTERVAL' 
        AND PARAMETER_TYPE = 'FILTER_ENABLING'
        )
      )
    AND
      (
      -- FILTER SELECTED GENDERS
      FIRST_ENCOUNTER_DATE    >=   (SELECT MAX (PARAMETER_VALUE) 
                            FROM CURRENT_RUN_DATE_PARAMS 
                            WHERE 
                                CRITERIA_ID = 'STUDY_BEGIN' 
                            AND PARAMETER_TYPE = 'INTERVAL_DATE'
                            )
      )
    AND
      (
      -- FILTER SELECTED GENDERS
      FIRST_ENCOUNTER_DATE    <   (SELECT MAX (PARAMETER_VALUE) 
                            FROM CURRENT_RUN_DATE_PARAMS 
                            WHERE 
                                CRITERIA_ID = 'STUDY_END' 
                            AND PARAMETER_TYPE = 'INTERVAL_DATE'
                            )
      )
    OR
      -- EXCLUDE FILTER (DISABLE)
    (
          'N' IN (SELECT PARAMETER_VALUE 
          FROM CURRENT_RUN_YESNO_PARAMS 
          WHERE 
              CRITERIA_ID = 'DIAGNOSIS_DATE_ON_STUDY_INTERVAL' 
          AND PARAMETER_TYPE = 'FILTER_ENABLING'
          )
    )
  )
);
-- ******************************************************

COMMIT;

-- ******************************************************
-- MVIEW xx - INPATIENT_COUNT
--
CREATE OR REPLACE VIEW TRANSFORM_ENCOUNTER_PROFILE
AS
(
  SELECT 
      PATIENT_ID 
    , ADMISSION_SECTOR    AS ENCOUNTER_TYPE
    , COUNT(*)  AS ENCOUNTER_CNT

  FROM 
    BP_ADMISSION_DISCHARGE

  GROUP BY 
    PATIENT_ID, ADMISSION_SECTOR

);


-- ******************************************************

CREATE MATERIALIZED VIEW TRANSFORM_TRANSP_ENC_PROFILE
      AS 
      (
        SELECT 
            D.PATIENT_ID

          , MAX(CASE WHEN ENCOUNTER_TYPE = 'PS' THEN ENCOUNTER_CNT END)            EMERGENCY

          , MAX(CASE WHEN ENCOUNTER_TYPE = 'AM' THEN ENCOUNTER_CNT END)            OUTPATIENT

          , MAX(CASE WHEN ENCOUNTER_TYPE = 'SA' THEN ENCOUNTER_CNT END)            LABORATORY

          , MAX(CASE WHEN ENCOUNTER_TYPE = 'IN' THEN ENCOUNTER_CNT END)            INPATIENT

        FROM
          (
            SELECT 
                                                                                      PATIENT_ID
              ,                                                                       ENCOUNTER_TYPE
              ,                                                                       ENCOUNTER_CNT
              , ROW_NUMBER() OVER(PARTITION BY PATIENT_ID ORDER BY ENCOUNTER_TYPE)    SEQ
            FROM 
              TRANSFORM_ENCOUNTER_PROFILE
          ) D
      GROUP BY PATIENT_ID
      );
/

CREATE INDEX TTEPPATID  ON TRANSFORM_TRANSP_ENC_PROFILE (PATIENT_ID) /* tablespace index placeholder */ ;

COMMIT;

-- ******************************************************

CREATE MATERIALIZED VIEW OUTCOME_SELECTOR_PCI
AS
(
  SELECT 
                                         BP_PCI.PATIENT_ID 
      , MIN(BP_PCI.PCI_DATE)         AS  PCI_OUTCOME_DATE 
  FROM  
    BP_PCI 
  INNER JOIN 
    SELECTED_PATIENT SP 
  ON 
    BP_PCI.PATIENT_ID = SP.PATIENT_ID
INNER JOIN
    TRANSFORM_FIRST_DIAGNOSIS TFD
  ON 
    BP_PCI.PATIENT_ID = TFD.PATIENT_ID
  WHERE 
    BP_PCI.PCI_DATE   >   (TFD.DIAGNOSIS_DATE +
      -- 1
                            (SELECT PARAMETER_VALUE
                              FROM CURRENT_RUN_NUMBER_PARAMS 
                              WHERE 
                                  CRITERIA_ID = 'DAYS_AFTER_INDEX_EVENT' 
                              AND PARAMETER_TYPE = 'PCI_OUTCOME'
                              )
                          )
  GROUP BY 
    BP_PCI.PATIENT_ID
);

CREATE INDEX CSSDPATID  ON OUTCOME_SELECTOR_PCI (PATIENT_ID) /* tablespace index placeholder */ ;

COMMIT;
-- ******************************************************

CREATE MATERIALIZED VIEW OUTCOME_SELECTOR_WASHOUT_TIME
AS
(
  SELECT 
        CSOD.PATIENT_ID 
      , MIN(CSOD.DIAGNOSIS_DATE)         AS  DIAG_OUTCOME_DATE 
  FROM  
    OUTCOME_SELECTOR_DIAGNOSIS CSOD
  INNER JOIN 
    SELECTED_PATIENT SP 
  ON 
    CSOD.PATIENT_ID = SP.PATIENT_ID
INNER JOIN
    TRANSFORM_FIRST_DIAGNOSIS TFD
  ON 
    CSOD.PATIENT_ID = TFD.PATIENT_ID
  WHERE 
    CSOD.DIAGNOSIS_DATE   >   (TFD.DIAGNOSIS_DATE +
      -- 1
                            (SELECT PARAMETER_VALUE
                              FROM CURRENT_RUN_NUMBER_PARAMS 
                              WHERE 
                                   CRITERIA_ID = 'DAYS_AFTER_INDEX_EVENT' 
                               AND PARAMETER_TYPE = 'DIAGNOSIS_OUTCOME'
                              )
                          )
  GROUP BY 
    CSOD.PATIENT_ID
);

CREATE INDEX OSWTPATID  ON OUTCOME_SELECTOR_WASHOUT_TIME (PATIENT_ID) /* tablespace index placeholder */ ;

COMMIT;
-- ******************************************************

CREATE MATERIALIZED VIEW OUTCOME_SELECTOR_SURGERY
AS
(
  SELECT 
                                         BPS.PATIENT_ID 
      , MIN(BPS.SURGERY_DATE)         AS SURGERY_OUTCOME_DATE 
  FROM  
    BP_SURGERY BPS
  INNER JOIN 
    SELECTED_PATIENT SP 
  ON 
    BPS.PATIENT_ID = SP.PATIENT_ID
INNER JOIN
    TRANSFORM_FIRST_DIAGNOSIS TFD
  ON 
    BPS.PATIENT_ID = TFD.PATIENT_ID
  WHERE 
          BPS.SURGERY_DATE   >   (TFD.DIAGNOSIS_DATE +
                                    (SELECT PARAMETER_VALUE
                                      FROM CURRENT_RUN_NUMBER_PARAMS 
                                      WHERE 
                                          CRITERIA_ID = 'DAYS_AFTER_INDEX_EVENT' 
                                      AND PARAMETER_TYPE = 'SURGERY_OUTCOME'
                                      )
                          )
    AND   BPS.PROCEDURE LIKE 
                                    (SELECT PARAMETER_VALUE
                                      FROM CURRENT_RUN_STR_PARAMS 
                                      WHERE 
                                            CRITERIA_ID = 'SURGERY_SELECTION' 
                                        AND PARAMETER_TYPE = 'SURGERY_PROCEDURE'
                                      )
  GROUP BY 
    BPS.PATIENT_ID
);

CREATE INDEX OSSPATID  ON OUTCOME_SELECTOR_SURGERY (PATIENT_ID) /* tablespace index placeholder */ ;

COMMIT;
-- ******************************************************
CREATE MATERIALIZED VIEW STUDY_OVERALL_POPULATION AS
(
  SELECT 
      A.DEIDENTIFIED_ID
    , A.PATIENT_ID
    , A.BIRTH_DATE
    , A.GENDER
    , A.AGE_AT_STUDY_BEGIN
    , A.AGE_AT_STUDY_END
  FROM 
    COHORT_SELECTOR_PATIENT_GENDER A
  INNER JOIN 
    ( SELECT 
        DISTINCT (PATIENT_ID) 
      FROM 
        COHORT_SELECTOR_STUDY_INTERVAL
    ) B
  ON 
    A.PATIENT_ID=B.PATIENT_ID
);

CREATE INDEX SOPPATID  ON STUDY_OVERALL_POPULATION (PATIENT_ID) /* tablespace index placeholder */ ;

COMMIT;
-- ******************************************************
CREATE OR REPLACE VIEW COHORT_OVERALL_DBPOP_GENDER AS
(
  SELECT 
        'OVERALL' AS POPULATION
      , GENDER
      , TRUNC(COUNT(GENDER) * 100 / (SELECT COUNT(*) FROM STUDY_OVERALL_POPULATION)) AS PERCENT
      , COUNT(GENDER) AS TOTAL 
  FROM 
    STUDY_OVERALL_POPULATION 
  GROUP BY 
    GENDER
  UNION
  SELECT 
        'STUDY'  as POPULATION
      , GENDER
      , TRUNC(COUNT (GENDER) * 100 / (SELECT COUNT(*) AS PERCENT FROM COHORT_PATIENT)) AS PERCENT
      , COUNT(GENDER) AS TOTAL 
  FROM 
    COHORT_PATIENT 
  GROUP BY 
    GENDER
);

-- ******************************************************
CREATE OR REPLACE VIEW COHORT_ENCOUNTER AS
(
SELECT 
      C.DEIDENTIFIED_ID
    , A.ENCOUNTER_CNT
    , FLOOR(A.LAST_ENCOUNTER_DATE - A.FIRST_ENCOUNTER_DATE) AS ENCOUNTER_INTERVAL
    , FLOOR(A.FIRST_ENCOUNTER_DATE - C.BIRTH_DATE)    AS AGE_FIRST_ENCOUNTER
    , FLOOR(A.LAST_ENCOUNTER_DATE - C.BIRTH_DATE)     AS AGE_LAST_ENCOUNTER
    , B.EMERGENCY
    , B.OUTPATIENT
    , B.LABORATORY
    , B.INPATIENT

FROM 
  COHORT_SELECTOR_FSTLST_ENCNTR  A
INNER JOIN 
  TRANSFORM_TRANSP_ENC_PROFILE B
ON 
  A.PATIENT_ID = B.PATIENT_ID
INNER JOIN
  SELECTED_PATIENT C
ON
  A.PATIENT_ID = C.PATIENT_ID
);

-- CREATE INDEX CE_DEID_ID ON COHORT_ENCOUNTER (DEIDENTIFIED_ID) /* tablespace index placeholder */ ;

-- ******************************************************

CREATE OR REPLACE VIEW COHORT_FRST_OUTPAT_ENCOUNTER AS
(
SELECT 
      B.DEIDENTIFIED_ID
    , FLOOR(A.REGISTRATION_DATE - B.BIRTH_DATE)    AS AGE_FIRST_OUTP_ENCOUNTER
    , A.SYMPTOM_CODE
    , A.SYMPTOM_DESCRIPTION
    , A.SYMPTOM_DURATION
    , A.QUESTIONING
    , A.PHYSICAL_EXAM
    , A.PROCEDURE

FROM 
  BP_FIRST_OUTPATIENT_ENCOUNTER  A
INNER JOIN
  SELECTED_PATIENT B
ON
  A.PATIENT_ID = B.PATIENT_ID
);

-- CREATE INDEX CFOE_DEID_ID ON COHORT_FRST_OUTPAT_ENCOUNTER (DEIDENTIFIED_ID) /* tablespace index placeholder */ ;

-- ******************************************************

CREATE OR REPLACE VIEW COHORT_HEART_RISK_FACTOR AS
(
    SELECT
          B.DEIDENTIFIED_ID
        , FLOOR(ENCOUNTER_DATE - B.BIRTH_DATE) AS AGE_AT_RISK_FACTOR
        , DYSLIPIDEMIA
        , DIABETES
        , OBESITY
        , SMOKING
        , HYPERTRIGLYCERIDEMIA   
        , HYPERURICEMIA
        , ALCOHOLISM
        , DRUGS
        , ORAL_CONTRACEPTION
        , HYPERTENSION
        , STRESS
        , PHYSICAL_INACTIVITY
        , MENOPAUSE
        , ENDOCARDITIS
        , RHEUMATIC_FEVER
  FROM 
    BP_HEART_RISK_FACTOR A
  INNER JOIN
    SELECTED_PATIENT B
  ON
    A.PATIENT_ID = B.PATIENT_ID
 WHERE A.ENCOUNTER_DATE = (SELECT MAX (A.ENCOUNTER_DATE)
                     FROM BP_HEART_RISK_FACTOR C
                    WHERE C.PATIENT_ID = A.PATIENT_ID)
);

-- CREATE INDEX PAUA_CH_RF ON COHORT_HEART_RISK_FACTOR (DEIDENTIFIED_ID) /* tablespace index placeholder */ ;

-- ******************************************************

CREATE OR REPLACE VIEW COHORT_SELECTION_CRITERIA AS
(
  SELECT 
      (SELECT COUNT(DEIDENTIFIED_ID) FROM BP_PATIENT) AS "Total PAUA"
    , (SELECT COUNT(DEIDENTIFIED_ID) FROM COHORT_SELECTOR_PATIENT_AGE) AS "Dentro do Intervalo de Idade"
    , (SELECT COUNT(DEIDENTIFIED_ID) FROM COHORT_SELECTOR_PATIENT_GENDER) AS "Gêneros selecionados"
    , (SELECT COUNT(DEIDENTIFIED_ID) FROM SELECTED_PATIENT) AS "Coorte com diag. de interesse"
    , (SELECT COUNT(DEIDENTIFIED_ID) FROM COHORT_ENCOUNTER where OUTPATIENT > 2) AS "Pelo menos duas visitas"
  FROM DUAL
);

-- ******************************************************
CREATE OR REPLACE VIEW COHORT_PATIENT AS
(
SELECT 
    BPP.DEIDENTIFIED_ID
  , BPP.GENDER
  , BPP.COUNTRY
  , BPP.STATE_CODE
  , BPP.STATE
  , BPP.COUNTY_CODE
  , BPP.COUNTY
  , BPP.MARITAL_STATUS
  , BPP.EDUCATION_LEVEL
  , BPP.RELIGION
  , BPP.OCUPATION
  , BPP.ETHNIC_GROUP
  , BPP.ETHNIC_DETAIL
  , BPP.FAMILY_SITUATION
  , BPP.ON_SCHOOL
  , SP.AGE_AT_STUDY_BEGIN   AS AGEYEARS_AT_STUDY_BEGIN
  , SP.AGE_AT_STUDY_END     AS ESTIM_AGE_AT_STUDY_END
FROM 
  BP_PATIENT BPP
INNER JOIN
  SELECTED_PATIENT SP
ON 
  BPP.DEIDENTIFIED_ID = SP.DEIDENTIFIED_ID
);

-- ******************************************************
CREATE OR REPLACE VIEW COHORT_INDEXEVENT_OUTCOMEEVENT AS
(
SELECT 
    SP.DEIDENTIFIED_ID
  , ICD10
  , ICD10_CATEGORY
  , MAIN_DIAGNOSIS
  , FLOOR(TFD.DIAGNOSIS_DATE - SP.BIRTH_DATE)                                                               AS  AGE_AT_INDEX_EVENT
  , NTILE(4) OVER (ORDER BY ROUND(TFD.DIAGNOSIS_DATE - SP.BIRTH_DATE))                                      AS  AGE_QUARTILE
  , FLOOR(  
            LEAST ( COALESCE (DIAG_OUTCOME_DATE, PCI_OUTCOME_DATE, SURGERY_OUTCOME_DATE, DEATH_DATE) 
                  , COALESCE (DEATH_DATE, DIAG_OUTCOME_DATE,PCI_OUTCOME_DATE, SURGERY_OUTCOME_DATE) 
                  , COALESCE (SURGERY_OUTCOME_DATE, DEATH_DATE, DIAG_OUTCOME_DATE, PCI_OUTCOME_DATE) 
                  , COALESCE (PCI_OUTCOME_DATE, SURGERY_OUTCOME_DATE, DEATH_DATE, DIAG_OUTCOME_DATE) )
            - SP.BIRTH_DATE
          )                                                                                                 AS  AGE_AT_OUTCOME
  , FLOOR(  
            LEAST ( COALESCE (DIAG_OUTCOME_DATE, PCI_OUTCOME_DATE, SURGERY_OUTCOME_DATE, DEATH_DATE) 
                  , COALESCE (DEATH_DATE, DIAG_OUTCOME_DATE,PCI_OUTCOME_DATE, SURGERY_OUTCOME_DATE) 
                  , COALESCE (SURGERY_OUTCOME_DATE, DEATH_DATE, DIAG_OUTCOME_DATE, PCI_OUTCOME_DATE) 
                  , COALESCE (PCI_OUTCOME_DATE, SURGERY_OUTCOME_DATE, DEATH_DATE, DIAG_OUTCOME_DATE) )
            - TFD.DIAGNOSIS_DATE
          )                                                                                                 AS  INDEX_OUTCOME_INTERVAL
  , (
    CASE
      WHEN LEAST ( 
                    COALESCE (DIAG_OUTCOME_DATE, PCI_OUTCOME_DATE, SURGERY_OUTCOME_DATE, DEATH_DATE) 
                  , COALESCE (DEATH_DATE, DIAG_OUTCOME_DATE,PCI_OUTCOME_DATE, SURGERY_OUTCOME_DATE) 
                  , COALESCE (SURGERY_OUTCOME_DATE, DEATH_DATE, DIAG_OUTCOME_DATE, PCI_OUTCOME_DATE) 
                  , COALESCE (PCI_OUTCOME_DATE, SURGERY_OUTCOME_DATE, DEATH_DATE, DIAG_OUTCOME_DATE) 
                  ) = DIAG_OUTCOME_DATE
        THEN 'DIAG'
      WHEN LEAST ( 
                    COALESCE (DIAG_OUTCOME_DATE, PCI_OUTCOME_DATE, SURGERY_OUTCOME_DATE, DEATH_DATE) 
                  , COALESCE (DEATH_DATE, DIAG_OUTCOME_DATE,PCI_OUTCOME_DATE, SURGERY_OUTCOME_DATE) 
                  , COALESCE (SURGERY_OUTCOME_DATE, DEATH_DATE, DIAG_OUTCOME_DATE, PCI_OUTCOME_DATE) 
                  , COALESCE (PCI_OUTCOME_DATE, SURGERY_OUTCOME_DATE, DEATH_DATE, DIAG_OUTCOME_DATE) 
                  ) = PCI_OUTCOME_DATE
        THEN 'PCI'
      WHEN LEAST ( 
                    COALESCE (DIAG_OUTCOME_DATE, PCI_OUTCOME_DATE, SURGERY_OUTCOME_DATE, DEATH_DATE) 
                  , COALESCE (DEATH_DATE, DIAG_OUTCOME_DATE,PCI_OUTCOME_DATE, SURGERY_OUTCOME_DATE) 
                  , COALESCE (SURGERY_OUTCOME_DATE, DEATH_DATE, DIAG_OUTCOME_DATE, PCI_OUTCOME_DATE) 
                  , COALESCE (PCI_OUTCOME_DATE, SURGERY_OUTCOME_DATE, DEATH_DATE, DIAG_OUTCOME_DATE) 
                  ) = SURGERY_OUTCOME_DATE
        THEN 'SURGERY'
      WHEN LEAST ( 
                    COALESCE (DIAG_OUTCOME_DATE, PCI_OUTCOME_DATE, SURGERY_OUTCOME_DATE, DEATH_DATE) 
                  , COALESCE (DEATH_DATE, DIAG_OUTCOME_DATE,PCI_OUTCOME_DATE, SURGERY_OUTCOME_DATE) 
                  , COALESCE (SURGERY_OUTCOME_DATE, DEATH_DATE, DIAG_OUTCOME_DATE, PCI_OUTCOME_DATE) 
                  , COALESCE (PCI_OUTCOME_DATE, SURGERY_OUTCOME_DATE, DEATH_DATE, DIAG_OUTCOME_DATE) 
                  ) = DEATH_DATE
      THEN 'DEATH'
    END )                                                                                                     AS  OUTCOME_REASON
  , ( CASE 
        WHEN (
          NVL2(DIAG_OUTCOME_DATE,1,0) + 
          NVL2(PCI_OUTCOME_DATE,1,0) + 
          NVL2(SURGERY_OUTCOME_DATE, 1,0) + 
          NVL2(DEATH_DATE,  1,0)
          ) > 0 THEN  1
                ELSE  0
        END
    )                                                                                                          AS  OUTCOME_FLAG 
  , NVL2(DEATH_DATE,  1,0)                                                                                     AS  DEATH_FLAG
  , NVL2(BPPCI.HAD_PCI,1,0)                                                                                    AS  PCI_FLAG
  , NVL2(BPSURG.HAD_SURGERY,1,0)                                                                               AS  SURGERY_FLAG
  , NVL2(DIAG_OUTCOME_DATE,1,0)                                                                                AS  SCND_DIAG_FLAG
FROM 
  TRANSFORM_FIRST_DIAGNOSIS TFD
INNER JOIN
  SELECTED_PATIENT SP
ON 
  TFD.PATIENT_ID = SP.PATIENT_ID
LEFT OUTER JOIN
  OUTCOME_SELECTOR_WASHOUT_TIME CSDO
ON
  TFD.PATIENT_ID = CSDO.PATIENT_ID
LEFT OUTER JOIN
  OUTCOME_SELECTOR_PCI CSPO
ON
  TFD.PATIENT_ID = CSPO.PATIENT_ID
LEFT OUTER JOIN
  OUTCOME_SELECTOR_SURGERY CSSO
ON
  TFD.PATIENT_ID = CSSO.PATIENT_ID
LEFT OUTER JOIN
  SELECTED_DEATH SD
ON
  TFD.PATIENT_ID = SD.PATIENT_ID
LEFT OUTER JOIN
  (SELECT DISTINCT(PATIENT_ID), 1 AS HAD_PCI FROM BP_PCI) BPPCI
ON 
  BPPCI.PATIENT_ID = TFD.PATIENT_ID
LEFT OUTER JOIN
  (SELECT DISTINCT(PATIENT_ID), 1 AS HAD_SURGERY FROM BP_SURGERY) BPSURG
ON 
  BPSURG.PATIENT_ID = TFD.PATIENT_ID
);
-- ******************************************************

CREATE OR REPLACE VIEW COHORT_INTERVENTION AS
(
SELECT  DEIDENTIFIED_ID
      , MAX(INTERVENTION_DRUG)                      AS INTERVENTION_FLAG
      , MIN(AGE_AT_ERA_BEGIN)                       AS INTERVENTION_BEGIN
      , MAX(AGE_AT_ERA_END)                         AS INTERVENTION_END
      , MAX(AGE_AT_ERA_END) - MIN(AGE_AT_ERA_BEGIN) AS INTERVENTION_INTERVAL
FROM SELECTED_DRUGS 
GROUP BY DEIDENTIFIED_ID
);

-- ******************************************************
CREATE OR REPLACE VIEW COHORT_PCI AS
(
SELECT 
    DEIDENTIFIED_ID
  , FLOOR(PCI_DATE1 - BIRTH_DATE) AS AGE_PCI1
  , PROCED1

  , FLOOR(PCI_DATE2 - BIRTH_DATE) AS AGE_PCI2
  , PROCED2

  , FLOOR(PCI_DATE3 - BIRTH_DATE) AS AGE_PCI3
  , PROCED3

  , FLOOR(PCI_DATE4 - BIRTH_DATE) AS AGE_PCI4
  , PROCED4

  , FLOOR(PCI_DATE5 - BIRTH_DATE) AS AGE_PCI5
  , PROCED5

FROM 
  SELECTED_PCI A
);
-- ******************************************************
CREATE OR REPLACE VIEW COHORT_DEATH AS
(
SELECT 
    DEIDENTIFIED_ID
    , FLOOR(DEATH_DATE - BIRTH_DATE) AGE_AT_DEATH
    , DEATH_CAUSE

FROM 
  SELECTED_DEATH
);
-- ******************************************************
CREATE OR REPLACE VIEW COHORT_DRUGS_DETAIL AS
(
SELECT 
  *
FROM 
  SELECTED_DRUGS
);
-- ******************************************************

CREATE OR REPLACE VIEW COHORT_DRUGS AS 
(
SELECT  
         DEIDENTIFIED_ID
       , DRUG_ID
       , MIN(AGE_AT_PRESCRIPTION) AS AGE_PRESCRIPTION_BEGIN
       , MAX(AGE_AT_PRESCRIPTION) AS AGE_PRESCRIPTION_END
       , MIN(AGE_AT_ERA_BEGIN) AS AGE_ERA_BEGIN
       , MAX(AGE_AT_ERA_END) AS AGE_ERA_END
       , MAX(INTERVENTION_DRUG) AS INTERVENTION_FLAG
       , FLOOR(MAX(AGE_AT_ERA_END) - MIN(AGE_AT_ERA_BEGIN)) AS STATIN_AMOUNTH_DAYS
FROM
  SELECTED_DRUGS
GROUP BY 
  DEIDENTIFIED_ID,DRUG_ID
);

-- ******************************************************
CREATE OR REPLACE VIEW COHORT_DIAGNOSIS AS
(
SELECT 
    DEIDENTIFIED_ID
  , DIAGNOSIS_ID
  , ADMISSION_YEAR
  , ADMISSION_ID
  , ICD10_CATEGORY
  , ICD10
  , MAIN_DIAGNOSIS
  , FLOOR(MONTHS_BETWEEN(A.DIAGNOSIS_DATE, BIRTH_DATE) /12) AS AGE_AT_DIAG_Y
  , FLOOR(MONTHS_BETWEEN(A.DIAGNOSIS_DATE, BIRTH_DATE)) AS AGE_AT_DIAG_M
  , FLOOR(A.DIAGNOSIS_DATE - BIRTH_DATE) AS AGE_AT_DIAG
FROM 
  SELECTED_DIAGNOSIS A
);
-- ******************************************************
CREATE OR REPLACE VIEW COHORT_SURGERY AS
(
  SELECT 
        
      SP.DEIDENTIFIED_ID
    , TFS.ICD10_FIRST_SURGERY
    , FLOOR(TFS.FIRST_SURGERY_DATE - SP.BIRTH_DATE)   AS AGE_FIRST_SURGERY
    , TFS.ICD10_LAST_SURGERY
    , FLOOR(TFS.LAST_SURGERY_DATE - SP.BIRTH_DATE)    AS AGE_LAST_SURGERY
    , TFS.SURGERY_INTERVAL
    , TFS.SURGERY_QUANTITY

    , FLOOR(TTS.SRGRY_DATE_1 - SP.BIRTH_DATE)   AS AGE_SURGERY_1
    , TTS.WEIGHT_1
    , TTS.HEIGHT_1
    , TTS.ICD10_1
    , TTS.DIAGNOSIS_1
    , TTS.SURGICAL_SPECIALITY_1
    , TTS.PROCEDURE_1

    , FLOOR(TTS.SRGRY_DATE_2 - SP.BIRTH_DATE)   AS AGE_SURGERY_2
    , TTS.WEIGHT_2
    , TTS.HEIGHT_2
    , TTS.ICD10_2
    , TTS.DIAGNOSIS_2
    , TTS.SURGICAL_SPECIALITY_2
    , TTS.PROCEDURE_2

    , FLOOR(TTS.SRGRY_DATE_3 - SP.BIRTH_DATE)   AS AGE_SURGERY_3
    , TTS.WEIGHT_3
    , TTS.HEIGHT_3
    , TTS.ICD10_3
    , TTS.DIAGNOSIS_3
    , TTS.SURGICAL_SPECIALITY_3
    , TTS.PROCEDURE_3

    , FLOOR(TTS.SRGRY_DATE_4 - SP.BIRTH_DATE)   AS AGE_SURGERY_4
    , TTS.WEIGHT_4
    , TTS.HEIGHT_4
    , TTS.ICD10_4
    , TTS.DIAGNOSIS_4
    , TTS.SURGICAL_SPECIALITY_4
    , TTS.PROCEDURE_4
FROM 
  TRANSFORM_FIRSTLAST_SURGERY TFS
INNER JOIN 
  SELECTED_PATIENT SP
ON
  TFS.PATIENT_ID = SP.PATIENT_ID
INNER JOIN
  TRANSFORM_TRANSPOSE_SURGERY TTS
ON
  TTS.PATIENT_ID = SP.PATIENT_ID
);

